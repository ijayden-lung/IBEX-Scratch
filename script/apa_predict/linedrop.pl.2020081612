#!/usr/bin/perl -w
use List::Util qw(first max maxstr min minstr reduce shuffle sum);
my ($COV,$DIF,$usage) = @ARGV;

my %usage;
open FILE,$usage;
<FILE>;
while(<FILE>){
	chomp;
	my ($id,$usage) = (split)[0,6];
	$usage{$id} = $usage;
}

open OUT,">$DIF";
print OUT "pas_id\tpas_type\tstrand\tcoordinate\tbefore_ave\tafter_ave\tave\tdiff\tave_diff\tusage\n";
my $paswithread = 0;
my $pas10read = 0;
open FILE,$COV;
while(<FILE>){
	chomp;
	my @data = split;
	my $before = 0;
	my $after  = 0;
	$paswithread++;
	if($data[2] eq "+"){
		$before = &TrimmedMean(@data[4..103]);
		$after = &TrimmedMean(@data[105..204]);
	}
	else{
		$after = &TrimmedMean(@data[4..103]);
		$before = &TrimmedMean(@data[105..204]);
	}
	my $ave = ($before+$after)/2;
	next if $ave ==0;
	$pas10read++ if $ave>10;
	my $diff = $before-$after;
	my $ave_diff = $diff/$ave;
	$usage{$data[0]} = 0 if !exists $usage{$data[0]};
	print OUT "$data[0]\t$data[1]\t$data[2]\t$data[3]\t$before\t$after\t$ave\t$diff\t$ave_diff\t$usage{$data[0]}\n";
}

my $per1 = $paswithread/22279;
my $per2 = $pas10read/22279;
print "paswithread: $paswithread\tpercentage:$per1\n";
print "paswithread>10: $pas10read\tpercentage:$per2\n";


sub TrimmedMean{
	my @sort = sort{$a<=>$b} @_;
	my $len = @sort;
	my $ltrim = int($len*0.2);
	my $utrim = $len-$ltrim-1;
	my $ave =  &sum(@sort[$ltrim..$utrim])/($utrim-$ltrim+1);
	return $ave;
}
