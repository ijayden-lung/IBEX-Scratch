#!/usr/bin/perl -w
#### Author: Yongkang Long
#### Update: Feb 23, 2020

use List::Util qw(first max maxstr min minstr reduce shuffle sum shuffle) ;
use Statistics::Descriptive;
my ($sample,$times) = @ARGV;
my $random_times = 1000000;

my %high_impact_gene;
open FILE,"my_high_impact_nmd/$sample.tsv";
<FILE>;
while(<FILE>){
	chomp; 
	my ($gene_id) = split;
	$high_impact_nmd{$gene_id} = '';
}

my @zscore;
my @high_impact_zscore;
open FILE,"oneTailPval/$sample.tsv" or die ;
<FILE>;
while(<FILE>){
	chomp;
	my ($gene_id,$zscore) = split;
	if(exists $high_impact_nmd{$gene_id}){
		push @high_impact_zscore,$zscore;
	}
	push @zscore, $zscore;
}

my $n = @high_impact_zscore;
my $stat = Statistics::Descriptive::Full->new();
$stat->add_data(@high_impact_zscore);
my $high_impact_mean = $stat->mean();
my $high_impact_median=$stat->median();

open OUT,">oneTailPval/$sample.tsv.pvalue.$times.tsv";
print OUT "mean\tmedian\n";
my $mean_count = 0;
my $median_count = 0;
print OUT "$high_impact_mean\t$high_impact_median\n";
for(my$i=0;$i<$random_times;$i++){
	my @shuffle = &shuffle(@zscore);
	my $stat = Statistics::Descriptive::Full->new();
	$stat->add_data(@shuffle[1..$n]);
	my $mean = $stat->mean();
	my $median=$stat->median();
	if($mean<=$high_impact_mean){
		$mean_count++;
	}
	if($median<=$high_impact_median){
		$median_count++;
	}
	#print OUT "$mean\t$median\n";
}

my $mean_pval = $mean_count/$random_times;
my $median_pval = $median_count/$random_times;
print OUT "$mean_pval\t$median_pval\n";
