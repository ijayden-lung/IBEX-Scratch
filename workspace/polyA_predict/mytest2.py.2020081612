#!/usr/bin/env python3
import numpy as np
from model import Net

data = np.load('bl6_test_dataset.npz')
SEQ_LEN=data['test_dataset'].shape[1]
############ Parameters ############
BATCH_SIZE = 64
PATCH_SIZE = 10
DEPTH = 16
NUM_HIDDEN = 64
SEQ_LEN = SEQ_LEN + 2*PATCH_SIZE-2
NUM_CHANNELS = 4
NUM_LABELS = 2
NUM_EPOCHS = 200
############ **************** ############

def pad_dataset(dataset, labels):
    ''' Pad sequences to (length + 2*DEPTH - 2) wtih 0.25 '''
    new_dataset = np.ones([dataset.shape[0], dataset.shape[1]+2*PATCH_SIZE-2, dataset.shape[2], dataset.shape[3]], dtype = np.float32) * 0.25
    new_dataset[:, PATCH_SIZE-1:-(PATCH_SIZE-1), :, :] = dataset
    labels = (np.arange(NUM_LABELS) == labels[:,None]).astype(np.float32)
    return new_dataset, labels

def get_accuracy(predictions, labels):
  return (100.0 * np.sum(np.argmax(predictions, 1) == np.argmax(labels, 1))
          / predictions.shape[0])
train_data, train_labels = pad_dataset(data['train_dataset'], data['train_labels'])
valid_data, valid_labels = pad_dataset(data['valid_dataset'], data['valid_labels'])
hyper_dict = dict(np.load('BLmouse_hparam.npz'))
model = Net(hyper_dict)
print(model)
model.build_training_graph()
