{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# -*- coding:utf-8 -*-\n",
    "import json\n",
    "import requests\n",
    "import csv\n",
    "import re\n",
    "from lxml import etree\n",
    "from datetime import date,datetime\n",
    "import pandas as pd\n",
    "import math"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def save_interest_rate(data):\n",
    "    \n",
    "    # 1. 创建文件对象\n",
    "    f = open('CB_interest_rate.csv', 'w', encoding='utf-8', newline='')\n",
    "    # 2. 基于文件对象构建 csv写入对象\n",
    "    csv_writer = csv.writer(f)\n",
    "    # 3. 构建列表头\n",
    "    csv_writer.writerow([\"id\",\"iry1\", \"iry2\", \"iry3\", \"iry4\", \"iry5\", \"iry6\"])\n",
    "    for item in data:\n",
    "        interest = get_interest_rate(item['id'])\n",
    "        #interest.insert(item['id'],interest)\n",
    "        csv_writer.writerow(interest)\n",
    "        break\n",
    "    # 5. 关闭文件\n",
    "    f.close()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_dat():\n",
    "    headers = {\n",
    "        #\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\",\n",
    "        \"User-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36 OPR/38.0.2220.41\",\n",
    "    }\n",
    "\n",
    "    newUrl =\"https://www.jisilu.cn/data/cbnew/cb_list/?___jsl=LST___t=1584777951900\"\n",
    "    #最简单的爬虫请求.也可以加上headers字段，防止部分网址的反爬虫机制\n",
    "    response = requests.get(newUrl)\n",
    "    #当爬取的界面需要用户名密码登录时候，构建的请求需要包含auth字段\n",
    "    data = response.content.decode(\"utf-8\")\n",
    "    dat = json.loads(data)\n",
    "\n",
    "    # 所有数据\n",
    "    lst_data = []\n",
    "    count = 0\n",
    "    for one in dat['rows']:\n",
    "        # 每一条数据\n",
    "        lst_dat = dict()\n",
    "        # 转债id\n",
    "        id = one[\"id\"]\n",
    "        dat_cell = one[\"cell\"]\n",
    "        # 是否赎回\n",
    "        is_shui = dat_cell['force_redeem']\n",
    "        count += 1\n",
    "        if (count %100 == 0):\n",
    "            print(\"processing\"+str(count)+\" items\")\n",
    "        if is_shui == None:\n",
    "            # 转债名称\n",
    "            name = dat_cell['bond_nm']\n",
    "            # 现价\n",
    "            price = dat_cell['price']\n",
    "            # 溢价率\n",
    "            premium_rt = dat_cell['premium_rt']\n",
    "            # 评级\n",
    "            rating_cd = dat_cell['rating_cd']\n",
    "            \n",
    "            \n",
    "            # next put date\n",
    "            next_put_dt = dat_cell['next_put_dt']\n",
    "            # put price\n",
    "            put_price   = dat_cell['put_price']\n",
    "            # 回售触发价\n",
    "            put_convert_price = dat_cell['put_convert_price']\n",
    "            \n",
    "            \n",
    "            # maturity date\n",
    "            maturity_dt = dat_cell['maturity_dt']\n",
    "            # redeem price\n",
    "            redeem_price = dat_cell['redeem_price']\n",
    "            \n",
    "            # 强赎触发价\n",
    "            force_redeem_price = dat_cell['force_redeem_price']\n",
    "            # 剩余时间\n",
    "            last_time = dat_cell['year_left']\n",
    "            pb = dat_cell['pb']\n",
    "\n",
    "\n",
    "            #lst_dat.append(id)\n",
    "            lst_dat['id'] = id\n",
    "            lst_dat['name'] = name\n",
    "            lst_dat['price'] = price\n",
    "            lst_dat['premium_rt'] = premium_rt\n",
    "            lst_dat['rating_cd'] = rating_cd\n",
    "            \n",
    "            lst_dat['next_put_dt'] = next_put_dt\n",
    "            lst_dat['put_price'] = put_price\n",
    "            lst_dat['put_convert_price'] = put_convert_price\n",
    "            \n",
    "            lst_dat['maturity_dt'] = maturity_dt\n",
    "            lst_dat['redeem_price'] = redeem_price\n",
    "            \n",
    "            lst_dat['force_redeem_price'] = force_redeem_price\n",
    "            lst_dat['last_time'] = last_time\n",
    "            lst_dat['pb']  = pb\n",
    "  \n",
    "            lst_data.append(lst_dat)\n",
    "            \n",
    "        else:\n",
    "            continue\n",
    "    print(\"Finished processing \"+str(count)+\" items\")\n",
    "    \n",
    "    return lst_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_interest_rate(id):\n",
    "    years = 6\n",
    "    detials_url = 'https://www.jisilu.cn/data/convert_bond_detail/'+id\n",
    "    detials_response = requests.get(detials_url)\n",
    "    html = detials_response.content.decode(\"utf-8\")\n",
    "    html = etree.HTML(html)\n",
    "    interest = html.xpath('.//td[@id=\"cpn_desc\"]/text()')\n",
    "    pattern = re.compile(r'(?<!\\d|\\.)\\d+(?:\\.\\d+)?')  #get proper format number\n",
    "    interest = pattern.findall(interest[0])\n",
    "    \n",
    "    if(len(interest) == 1):\n",
    "        interest = interest*years\n",
    "    return interest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def put_arbitrage(data):\n",
    "    put_data = []\n",
    "    count = 0\n",
    "    for item in data:\n",
    "        price       = item['price']\n",
    "        put_price   = item['put_price']\n",
    "\n",
    "        \n",
    "        if(put_price is None):\n",
    "            continue\n",
    "            \n",
    "        price = float(price)\n",
    "        put_price = float(put_price)\n",
    "            \n",
    "        if(price>put_price+5.0): ###To Save Time, the maximun interest could not over 10\n",
    "            continue\n",
    "            \n",
    "\n",
    "        \n",
    "        next_put_dt = item['next_put_dt']\n",
    "        next_put_dt = datetime.strptime(next_put_dt,'%Y-%m-%d').date()\n",
    "        maturity_dt = item['maturity_dt']\n",
    "        maturity_dt = datetime.strptime(maturity_dt,'%Y-%m-%d').date()\n",
    "        today = date.today()\n",
    "        \n",
    "        \n",
    "        days_to_maturity = maturity_dt-today\n",
    "        years_to_maturity = days_to_maturity.days/365\n",
    "        days_to_put  = next_put_dt-today\n",
    "        years_to_put  = days_to_put.days/365\n",
    "        \n",
    "        put_to_maturity = round(years_to_maturity-years_to_put)\n",
    "        #print(put_to_maturity)\n",
    "        \n",
    "        interest = get_interest_rate(item['id'])\n",
    "        total_interest = 0\n",
    "        for i in range(3,math.ceil(years_to_put)+put_to_maturity+1):\n",
    "            #print(i)\n",
    "            #print(interest)\n",
    "            #print(item['id'])\n",
    "            total_interest += float(interest[-i])\n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        actual_put_price = put_price*(1+total_interest*0.008)\n",
    "        \n",
    "        \n",
    "        if(price<actual_put_price):\n",
    "            year_diff = years_to_put + 38/365\n",
    "            profit_rate = actual_put_price/price\n",
    "            CAGR  = profit_rate ** (1/year_diff)-1\n",
    "            item['actual_put_price'] = actual_put_price\n",
    "            item['CAGR'] = CAGR\n",
    "            item['last_to_put'] = year_diff\n",
    "            put_data.append(item)\n",
    "            \n",
    "        if (count %100 == 0):\n",
    "            print(\"processing\"+str(count)+\" items\")\n",
    "    \n",
    "    print(\"Finished processing \"+str(count)+\" items\")\n",
    "    df = pd.DataFrame(put_data)\n",
    "    df = df.set_index(['id', 'name'])\n",
    "    df = df.sort_values('CAGR',ascending=False)\n",
    "    return df\n",
    "          "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def redeem_arbitrage(data):\n",
    "    put_data = []\n",
    "    for item in data:\n",
    "        price       = item['price']\n",
    "        redeem_price   = item['redeem_price']\n",
    "\n",
    "        \n",
    "        if(redeem_price is None):\n",
    "            continue\n",
    "            \n",
    "        price = float(price)\n",
    "        redeem_price = float(redeem_price)\n",
    "            \n",
    "\n",
    "        \n",
    "        maturity_dt = item['maturity_dt']\n",
    "        maturity_dt = datetime.strptime(maturity_dt,'%Y-%m-%d').date()\n",
    "        today = date.today()\n",
    "        \n",
    "        days_to_maturity = maturity_dt-today\n",
    "        years_to_maturity = days_to_maturity.days/365\n",
    "        \n",
    "        if(price<redeem_price):\n",
    "            year_diff = years_to_maturity\n",
    "            profit_rate = redeem_price/price\n",
    "            CAGR  = profit_rate ** (1/year_diff)-1\n",
    "            item['CAGR'] = CAGR\n",
    "            put_data.append(item)\n",
    "    df = pd.DataFrame(put_data)\n",
    "    df = df.set_index(['id', 'name'])\n",
    "    df = df.sort_values('CAGR',ascending=False)\n",
    "    return df\n",
    "          "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "processing100 items\n",
      "processing200 items\n",
      "processing300 items\n",
      "Finished processing 385 items\n"
     ]
    }
   ],
   "source": [
    "data = get_dat()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "save_interest_rate(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "redeem_df = redeem_arbitrage(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>price</th>\n",
       "      <th>premium_rt</th>\n",
       "      <th>rating_cd</th>\n",
       "      <th>next_put_dt</th>\n",
       "      <th>put_price</th>\n",
       "      <th>put_convert_price</th>\n",
       "      <th>maturity_dt</th>\n",
       "      <th>redeem_price</th>\n",
       "      <th>force_redeem_price</th>\n",
       "      <th>last_time</th>\n",
       "      <th>pb</th>\n",
       "      <th>CAGR</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>128062</th>\n",
       "      <th>亚药转债</th>\n",
       "      <td>79.022</td>\n",
       "      <td>198.65%</td>\n",
       "      <td>BB</td>\n",
       "      <td>2023-04-03</td>\n",
       "      <td>100.000</td>\n",
       "      <td>11.38</td>\n",
       "      <td>2025-04-02</td>\n",
       "      <td>115.000</td>\n",
       "      <td>21.12</td>\n",
       "      <td>3.797</td>\n",
       "      <td>3.62</td>\n",
       "      <td>0.103856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128100</th>\n",
       "      <th>搜特转债</th>\n",
       "      <td>82.632</td>\n",
       "      <td>49.78%</td>\n",
       "      <td>AA</td>\n",
       "      <td>2024-03-11</td>\n",
       "      <td>100.000</td>\n",
       "      <td>2.03</td>\n",
       "      <td>2026-03-11</td>\n",
       "      <td>112.000</td>\n",
       "      <td>3.77</td>\n",
       "      <td>4.737</td>\n",
       "      <td>1.42</td>\n",
       "      <td>0.066303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113595</th>\n",
       "      <th>花王转债</th>\n",
       "      <td>85.940</td>\n",
       "      <td>84.38%</td>\n",
       "      <td>AA-</td>\n",
       "      <td>2024-07-22</td>\n",
       "      <td>100.000</td>\n",
       "      <td>4.85</td>\n",
       "      <td>2026-07-20</td>\n",
       "      <td>116.000</td>\n",
       "      <td>9.01</td>\n",
       "      <td>5.096</td>\n",
       "      <td>0.93</td>\n",
       "      <td>0.060626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127003</th>\n",
       "      <th>海印转债</th>\n",
       "      <td>104.679</td>\n",
       "      <td>48.84%</td>\n",
       "      <td>AA</td>\n",
       "      <td>2020-06-08</td>\n",
       "      <td>100.000</td>\n",
       "      <td>2.10</td>\n",
       "      <td>2022-06-08</td>\n",
       "      <td>110.000</td>\n",
       "      <td>3.90</td>\n",
       "      <td>0.978</td>\n",
       "      <td>1.25</td>\n",
       "      <td>0.052000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128138</th>\n",
       "      <th>侨银转债</th>\n",
       "      <td>102.355</td>\n",
       "      <td>56.10%</td>\n",
       "      <td>AA-</td>\n",
       "      <td>2024-11-18</td>\n",
       "      <td>100.000</td>\n",
       "      <td>17.73</td>\n",
       "      <td>2026-11-16</td>\n",
       "      <td>130.000</td>\n",
       "      <td>32.93</td>\n",
       "      <td>5.422</td>\n",
       "      <td>4.43</td>\n",
       "      <td>0.045083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113563</th>\n",
       "      <th>柳药转债</th>\n",
       "      <td>107.590</td>\n",
       "      <td>33.90%</td>\n",
       "      <td>AA</td>\n",
       "      <td>2024-01-15</td>\n",
       "      <td>100.000</td>\n",
       "      <td>16.71</td>\n",
       "      <td>2026-01-15</td>\n",
       "      <td>108.000</td>\n",
       "      <td>31.03</td>\n",
       "      <td>4.586</td>\n",
       "      <td>1.31</td>\n",
       "      <td>0.000830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113606</th>\n",
       "      <th>荣泰转债</th>\n",
       "      <td>114.580</td>\n",
       "      <td>10.98%</td>\n",
       "      <td>AA-</td>\n",
       "      <td>2024-10-29</td>\n",
       "      <td>100.000</td>\n",
       "      <td>23.32</td>\n",
       "      <td>2026-10-29</td>\n",
       "      <td>115.000</td>\n",
       "      <td>43.32</td>\n",
       "      <td>5.373</td>\n",
       "      <td>2.80</td>\n",
       "      <td>0.000681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128135</th>\n",
       "      <th>洽洽转债</th>\n",
       "      <td>114.600</td>\n",
       "      <td>57.94%</td>\n",
       "      <td>AA</td>\n",
       "      <td>2024-10-21</td>\n",
       "      <td>100.000</td>\n",
       "      <td>42.02</td>\n",
       "      <td>2026-10-19</td>\n",
       "      <td>115.000</td>\n",
       "      <td>78.04</td>\n",
       "      <td>5.345</td>\n",
       "      <td>5.04</td>\n",
       "      <td>0.000652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113030</th>\n",
       "      <th>东风转债</th>\n",
       "      <td>111.800</td>\n",
       "      <td>11.80%</td>\n",
       "      <td>AA</td>\n",
       "      <td>2023-12-25</td>\n",
       "      <td>100.000</td>\n",
       "      <td>4.51</td>\n",
       "      <td>2025-12-23</td>\n",
       "      <td>112.000</td>\n",
       "      <td>8.38</td>\n",
       "      <td>4.523</td>\n",
       "      <td>1.84</td>\n",
       "      <td>0.000395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113542</th>\n",
       "      <th>好客转债</th>\n",
       "      <td>109.970</td>\n",
       "      <td>21.65%</td>\n",
       "      <td>AA</td>\n",
       "      <td>2023-08-01</td>\n",
       "      <td>100.000</td>\n",
       "      <td>11.30</td>\n",
       "      <td>2025-07-31</td>\n",
       "      <td>110.000</td>\n",
       "      <td>20.98</td>\n",
       "      <td>4.126</td>\n",
       "      <td>1.70</td>\n",
       "      <td>0.000066</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>195 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               price premium_rt rating_cd next_put_dt put_price  \\\n",
       "id     name                                                       \n",
       "128062 亚药转债   79.022    198.65%        BB  2023-04-03   100.000   \n",
       "128100 搜特转债   82.632     49.78%        AA  2024-03-11   100.000   \n",
       "113595 花王转债   85.940     84.38%       AA-  2024-07-22   100.000   \n",
       "127003 海印转债  104.679     48.84%        AA  2020-06-08   100.000   \n",
       "128138 侨银转债  102.355     56.10%       AA-  2024-11-18   100.000   \n",
       "...              ...        ...       ...         ...       ...   \n",
       "113563 柳药转债  107.590     33.90%        AA  2024-01-15   100.000   \n",
       "113606 荣泰转债  114.580     10.98%       AA-  2024-10-29   100.000   \n",
       "128135 洽洽转债  114.600     57.94%        AA  2024-10-21   100.000   \n",
       "113030 东风转债  111.800     11.80%        AA  2023-12-25   100.000   \n",
       "113542 好客转债  109.970     21.65%        AA  2023-08-01   100.000   \n",
       "\n",
       "            put_convert_price maturity_dt redeem_price force_redeem_price  \\\n",
       "id     name                                                                 \n",
       "128062 亚药转债             11.38  2025-04-02      115.000              21.12   \n",
       "128100 搜特转债              2.03  2026-03-11      112.000               3.77   \n",
       "113595 花王转债              4.85  2026-07-20      116.000               9.01   \n",
       "127003 海印转债              2.10  2022-06-08      110.000               3.90   \n",
       "128138 侨银转债             17.73  2026-11-16      130.000              32.93   \n",
       "...                       ...         ...          ...                ...   \n",
       "113563 柳药转债             16.71  2026-01-15      108.000              31.03   \n",
       "113606 荣泰转债             23.32  2026-10-29      115.000              43.32   \n",
       "128135 洽洽转债             42.02  2026-10-19      115.000              78.04   \n",
       "113030 东风转债              4.51  2025-12-23      112.000               8.38   \n",
       "113542 好客转债             11.30  2025-07-31      110.000              20.98   \n",
       "\n",
       "            last_time    pb      CAGR  \n",
       "id     name                            \n",
       "128062 亚药转债     3.797  3.62  0.103856  \n",
       "128100 搜特转债     4.737  1.42  0.066303  \n",
       "113595 花王转债     5.096  0.93  0.060626  \n",
       "127003 海印转债     0.978  1.25  0.052000  \n",
       "128138 侨银转债     5.422  4.43  0.045083  \n",
       "...               ...   ...       ...  \n",
       "113563 柳药转债     4.586  1.31  0.000830  \n",
       "113606 荣泰转债     5.373  2.80  0.000681  \n",
       "128135 洽洽转债     5.345  5.04  0.000652  \n",
       "113030 东风转债     4.523  1.84  0.000395  \n",
       "113542 好客转债     4.126  1.70  0.000066  \n",
       "\n",
       "[195 rows x 12 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "redeem_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "put_df = put_arbitrage(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "put_df"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
