{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "Attaching package: ‘dplyr’\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:stats’:\n",
      "\n",
      "    filter, lag\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:base’:\n",
      "\n",
      "    intersect, setdiff, setequal, union\n",
      "\n",
      "\n",
      "\n",
      "Attaching package: ‘ggpmisc’\n",
      "\n",
      "\n",
      "The following object is masked from ‘package:ggplot2’:\n",
      "\n",
      "    annotate\n",
      "\n",
      "\n",
      "Loading required package: xts\n",
      "\n",
      "Loading required package: zoo\n",
      "\n",
      "\n",
      "Attaching package: ‘zoo’\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:base’:\n",
      "\n",
      "    as.Date, as.Date.numeric\n",
      "\n",
      "\n",
      "\n",
      "Attaching package: ‘xts’\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:dplyr’:\n",
      "\n",
      "    first, last\n",
      "\n",
      "\n",
      "Loading required package: TTR\n",
      "\n",
      "Registered S3 method overwritten by 'quantmod':\n",
      "  method            from\n",
      "  as.zoo.data.frame zoo \n",
      "\n",
      "Version 0.4-0 included new data defaults. See ?getSymbols.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "library(ggplot2)\n",
    "library(dplyr) #加载dplyr包\n",
    "library(ggpmisc) #加载ggpmisc包\n",
    "library(quantmod)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "options(repr.plot.width=15, repr.plot.height=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning message in file(file, \"rt\"):\n",
      "“cannot open file 'Merge_Stock_History.txt': No such file or directory”\n"
     ]
    },
    {
     "ename": "ERROR",
     "evalue": "Error in file(file, \"rt\"): cannot open the connection\n",
     "output_type": "error",
     "traceback": [
      "Error in file(file, \"rt\"): cannot open the connection\nTraceback:\n",
      "1. read.table(\"Merge_Stock_History.txt\", header = T)",
      "2. file(file, \"rt\")"
     ]
    }
   ],
   "source": [
    "data = read.table('Merge_Stock_History.txt',header=T)\n",
    "data = data[ which(data$Stock != '002558'),]\n",
    "ggplot(data,aes(x=Day,y=Net_Value,group=Stock,colour=Stock))+geom_line(size=2)+\n",
    "theme_bw()+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=20)\n",
    "     ,legend.text=element_text(size=30))+\n",
    "theme(legend.position = c(0.7,0.85))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = read.csv('Shanghai Shenzhen CSI 300 Historical Data.csv',header=T)\n",
    "data$Price = as.double(gsub(',','',data$Price))\n",
    "data$Date = as.Date(data$Date,format='%b %d,%Y')\n",
    "data = data[which(data$Date>'2011-09-13'),]\n",
    "today = '2021-02-26'\n",
    "ggplot(data,aes(x=Date,y=log(Price)))+geom_line()+\n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=5,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "geom_segment(aes(x = as.Date(today), y = log(Price[1]), \n",
    "                 xend = as.Date('2022-09-01'), yend = log(Price[1])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(Price[1]), \n",
    "                 xend = as.Date(today), yend = log(Price[1]*0.88)),\n",
    "           size=1.5,colour='darkgreen')+\n",
    "\n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme_bw()+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "data2 = data[which(data$Date<'2008-01-01'),]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = read.csv('China Securities 500 Historical Data.csv',header=T)\n",
    "data$Price = as.double(gsub(',','',data$Price))\n",
    "data$Date = as.Date(data$Date,format='%b %d,%Y')\n",
    "today = '2021-02-26'\n",
    "ggplot(data,aes(x=Date,y=log(Price)))+geom_line()+\n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=5,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "geom_segment(aes(x = as.Date(today), y = log(Price[1]), \n",
    "                 xend = as.Date('2022-05-01'), yend = log(Price[1])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(Price[1]), \n",
    "                 xend = as.Date(today), yend = log(Price[1]*0.97)),\n",
    "           size=1.5,colour='darkgreen')+\n",
    "\n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme_bw()+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#深证1000还是很辣鸡的\n",
    "data = read.csv('399011_perf_20110913-20210225.csv',header=T)\n",
    "data$Price = as.double(gsub(',','',data$Price))\n",
    "data$Date = as.Date(data$Date)\n",
    "today = '2021-02-26'\n",
    "ggplot(data,aes(x=Date,y=log(Price)))+geom_line()+\n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=5,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "geom_segment(aes(x = as.Date(today), y = log(Price[1]), \n",
    "                 xend = as.Date('2022-05-01'), yend = log(Price[1])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(Price[1]), \n",
    "                 xend = as.Date(today), yend = log(Price[1]*0.9)),\n",
    "           size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "\n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme_bw()+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#小盘价值\n",
    "data = read.csv('399377_perf_20100104-20210225.csv',header=T)\n",
    "data$Price = as.double(gsub(',','',data$Price))\n",
    "data$Date = as.Date(data$Date)\n",
    "today = '2021-02-26'\n",
    "ggplot(data,aes(x=Date,y=log(Price)))+geom_line()+\n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=5,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "geom_segment(aes(x = as.Date(today), y = log(Price[1]), \n",
    "                 xend = as.Date('2021-03-01'), yend = log(Price[1])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(Price[1]), \n",
    "                 xend = as.Date(today), yend = log(Price[1]*1)),\n",
    "           size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "\n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme_bw()+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ggplot(sp500,aes(x=Date,y=log(Price)))+geom_line()+\n",
    "geom_smooth(method = 'lm', formula = y ~ x) + #绘制回归直线\n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=5,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "theme_bw()+\n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "SP500 <- getSymbols(\"^GSPC\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "sp500 <- data.frame(\"Date\" = index(SP500), \"Price\" = SP500$GSPC.Adjusted)\n",
    "sp500 = sp500[which(sp500$Date>'2010-09-08'),]\n",
    "today = Sys.Date()\n",
    "ggplot(data=sp500, aes(x =Date , y = log(GSPC.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(\"S&P 500 From 1956\") + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(SP500$GSPC.Adjusted[today]), \n",
    "                 xend = as.Date('2023-01-01'), yend = log(SP500$GSPC.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(SP500$GSPC.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(SP500$GSPC.Adjusted[today]*0.82)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "SP500TR  = getSymbols(\"^SP500TR\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( SP500TR), \"Price\" =  SP500TR$SP500TR.Adjusted)\n",
    "today = Sys.Date()-2\n",
    "#v = v[which(v$Date>'1993-01-28'),]\n",
    "ggplot(data= v, aes(x =Date , y = log( SP500TR.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"SP500TR From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "#geom_segment(aes(x = as.Date(today), y = log( SP500TR$ SP500TR.Adjusted[today]), \n",
    "#                 xend = as.Date('2021-1-05'), yend = log( SP500TR$SP500TR.Adjusted[today])),\n",
    "#            size=1.5,colour='red')+\n",
    "\n",
    "#geom_segment(aes(x = as.Date(today), y = log(SP500TR$SP500TR.Adjusted[today]), \n",
    "#                 xend = as.Date(today), yend = log(SP500TR$SP500TR.Adjusted[today]*0.95)),\n",
    "#            size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "SPY  = getSymbols(\"SPY\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( SPY), \"Price\" =  SPY$SPY.Adjusted)\n",
    "today = Sys.Date()\n",
    "ggplot(data= v, aes(x =Date , y = log( SPY.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"SPY From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "#geom_segment(aes(x = as.Date(today), y = log( SPY$ SPY.Adjusted[today]), \n",
    "#                 xend = as.Date('2021-1-05'), yend = log( SPY$SPY.Adjusted[today])),\n",
    "#            size=1.5,colour='red')+\n",
    "\n",
    "#geom_segment(aes(x = as.Date(today), y = log(SPY$SPY.Adjusted[today]), \n",
    "#                 xend = as.Date(today), yend = log(SPY$SPY.Adjusted[today]*0.95)),\n",
    "#            size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "SPY  = getSymbols(\"SPY\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "head(SPY)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "HSI =  getSymbols(\"^HSI\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "pbr <- data.frame(\"Date\" = index(HSI), \"Price\" = HSI$HSI.Adjusted)\n",
    "today = Sys.Date()\n",
    "ggplot(data=pbr, aes(x =Date , y = log(HSI.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(\"HSI From 1986\") + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date('2014-05-01'), y = log(HSI$HSI.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(HSI$HSI.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(HSI$HSI.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(HSI$HSI.Adjusted[today]*1.55)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "N225  = getSymbols(\"^N225\", src = \"yahoo\", from = \"1956-01-01\", to = \"2020-10-16\", auto.assign = FALSE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "pbr <- data.frame(\"Date\" = index(N225), \"Price\" = N225$N225.Adjusted)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "N225  = getSymbols(\"^N225\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( N225), \"Price\" =  N225$N225.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()\n",
    "ggplot(data= v, aes(x =Date , y = log( N225.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"N225 From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( N225$ N225.Adjusted[today]), \n",
    "                 xend = as.Date('2021-07-01'), yend = log( N225$ N225.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(N225$N225.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(N225$N225.Adjusted[today]*0.7)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "N225TR  = getSymbols(\"^N225TR\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( N225TR), \"Price\" =  N225TR$N225TR.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-2\n",
    "ggplot(data= v, aes(x =Date , y = log( N225TR.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"N225TR From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( N225TR$ N225TR.Adjusted[today]), \n",
    "                 xend = as.Date('2021-07-01'), yend = log( N225TR$ N225TR.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(N225TR$N225TR.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(N225TR$N225TR.Adjusted[today]*0.7)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "STI  = getSymbols(\"^STI\", src = \"yahoo\", from = \"1956-01-01\", to = \"2020-10-16\", auto.assign = FALSE)\n",
    "sti <- data.frame(\"Date\" = index(STI), \"Price\" = STI$STI.Adjusted)\n",
    "sti = sti[which(sti$STI.Adjusted != 'NA'), ]\n",
    "today = '2020-10-15'\n",
    "ggplot(data=sti, aes(x =Date , y = log(STI.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(\"STI From 1987\") + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date('2009-08-01'), y = log(STI$STI.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(STI$STI.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "VTI  = getSymbols(\"VTI\", src = \"yahoo\", from = \"1956-01-01\", to = \"2020-10-16\", auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( VTI), \"Price\" =  VTI$VTI.Adjusted)\n",
    "today = '2020-10-15'\n",
    "ggplot(data= v, aes(x =Date , y = log( VTI.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(\" VTI From 1987\") + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( VTI$ VTI.Adjusted[today]), \n",
    "                 xend = as.Date('2023-05-01'), yend = log( VTI$ VTI.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "TLT  = getSymbols(\"TLT\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( TLT), \"Price\" =  TLT$TLT.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( TLT.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(\" TLT From 1987\") + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( TLT$ TLT.Adjusted[today]), \n",
    "                 xend = as.Date('2022-04-01'), yend = log( TLT$ TLT.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "MUYUAN  = getSymbols(\"002714.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( MUYUAN), \"Price\" =  MUYUAN$'002714.SZ.Adjusted',index=index(MUYUAN))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date()-1)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"MUYUAN From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2020-03-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1.4)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ShunFeng  = getSymbols(\"002352.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( ShunFeng), \"Price\" =  ShunFeng$'002352.SZ.Adjusted',index=index(ShunFeng))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "#v = v[which(v$Date>'2017-01-01'),]\n",
    "today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"ShunFeng From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2021-04-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*0.9)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "HuaXia  = getSymbols(\"600340.SS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( HuaXia), \"Price\" =  HuaXia$'600340.SS.Adjusted',index=index(HuaXia))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date())\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"HuaXia From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2017-03-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*4.5)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "SanYi  = getSymbols(\"600031.SS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( SanYi), \"Price\" =  SanYi$'600031.SS.Adjusted',index=index(SanYi))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date())\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"SanYi From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2017-03-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*4.5)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ZKShuG  = getSymbols(\"603019.SS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( ZKShuG), \"Price\" =  ZKShuG$'603019.SS.Adjusted',index=index(ZKShuG))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "v = v[which(v$Date>'2015-01-01'),]\n",
    "today = toString(Sys.Date())\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"ZKShuG From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2017-03-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*4.5)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "JSYH  = getSymbols(\"601939.SS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( JSYH), \"Price\" =  JSYH$'601939.SS.Adjusted',index=index(JSYH))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "v = v[which(v$Date>'2009-01-01'),]\n",
    "today = toString(Sys.Date())\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"JSYH From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2019-03-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "HengRuiYiYao  = getSymbols(\"600276.SS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( HengRuiYiYao), \"Price\" =  HengRuiYiYao$'600276.SS.Adjusted',index=index(HengRuiYiYao))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date())\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"HengRuiYiYao From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2019-12-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1.6)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "TongHuaDongBao  = getSymbols(\"600867.SS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( TongHuaDongBao), \"Price\" =  TongHuaDongBao$'600867.SS.Adjusted',index=index(TongHuaDongBao))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date())\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"TongHuaDongBao From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2019-12-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1.6)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "FuXing  = getSymbols(\"600196.SS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( FuXing), \"Price\" =  FuXing$'600196.SS.Adjusted',index=index(FuXing))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date())\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"FuXing From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2021-03-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*0.9)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ZGWT  = getSymbols(\"000547.SZ\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( ZGWT), \"Price\" =  ZGWT$'000547.SZ.Adjusted',index=index(ZGWT))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date())\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"ZGWT From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2022-03-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*0.8)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "PingAn  = getSymbols(\"601318.SS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( PingAn), \"Price\" =  PingAn$'601318.SS.Adjusted',index=index(PingAn))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date()-1)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"PingAn From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2023-04-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*0.7)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "HTKJ  = getSymbols(\"000901.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( HTKJ), \"Price\" =  HTKJ$'000901.SZ.Adjusted',index=index(HTKJ))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date())\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"HTKJ From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2015-04-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1.5)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ZGWX  = getSymbols(\"600118.SS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( ZGWX), \"Price\" =  ZGWX$'600118.SS.Adjusted',index=index(ZGWX))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date())\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"ZGWX From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2019-04-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1.3)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "BDS  = getSymbols(\"002151.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( BDS), \"Price\" =  BDS$'002151.SZ.Adjusted',index=index(BDS))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = Sys.Date()\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"BDS From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2024-04-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "BYJC  = getSymbols(\"600004.SS\", src = \"yahoo\", from = \"1956-01-01\", to =  Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( BYJC), \"Price\" =  BYJC$'600004.SS.Adjusted',index=index(BYJC))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = Sys.Date()\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"BYJC From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2019-04-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "LC  = getSymbols(\"000977.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( LC), \"Price\" =  LC$'000977.SZ.Adjusted',index=index(LC))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "#v = v[which(v$Date>'2015-01-01'),]\n",
    "today = Sys.Date()\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"LC From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2022-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "MD  = getSymbols(\"000333.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( MD), \"Price\" =  MD$'000333.SZ.Adjusted',index=index(MD))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"MD From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2021-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "HQC  = getSymbols(\"000069.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( HQC), \"Price\" =  HQC$'000069.SZ.Adjusted',index=index(HQC))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"HQC From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2016-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*2.2)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "WK  = getSymbols(\"000002.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( WK), \"Price\" =  WK$'000002.SZ.Adjusted',index=index(WK))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"WK From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2018-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*2.2)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "YuYue  = getSymbols(\"002233.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( YuYue), \"Price\" =  YuYue$'002233.SZ.Adjusted',index=index(YuYue))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"YuYue From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2018-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*2.2)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "SheKou  = getSymbols(\"001979.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( SheKou), \"Price\" =  SheKou$'001979.SZ.Adjusted',index=index(SheKou))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"SheKou From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2016-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1.3)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "HTFZ  = getSymbols(\"000547.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( HTFZ), \"Price\" =  HTFZ$'000547.SZ.Adjusted',index=index(HTFZ))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"HTFZ From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2016-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1.3)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "YNBY  = getSymbols(\"000538.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( YNBY), \"Price\" =  YNBY$'000538.SZ.Adjusted',index=index(YNBY))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"YNBY From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2018-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1.8)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "DaAnJiYin  = getSymbols(\"002030.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( DaAnJiYin), \"Price\" =  DaAnJiYin$'002030.SZ.Adjusted',index=index(DaAnJiYin))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"DaAnJiYin From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2018-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1.8)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "BeiRuiJiYin  = getSymbols(\"000710.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( BeiRuiJiYin), \"Price\" =  BeiRuiJiYin$'000710.SZ.Adjusted',index=index(BeiRuiJiYin))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "v = v[which(v$Date>'2017-01-01'),]\n",
    "today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"BeiRuiJiYin From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2018-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1.8)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "WanMeiShiJie  = getSymbols(\"002624.sz\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( WanMeiShiJie), \"Price\" =  WanMeiShiJie$'002624.SZ.Adjusted',index=index(WanMeiShiJie))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "v = v[which(v$Date>'2014-12-01'),]\n",
    "today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"WanMeiShiJie From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2019-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date(today), yend = log(v[today,2]*1.4)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ShenHongLi  = getSymbols(\"159905.SZ\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( ShenHongLi), \"Price\" =  ShenHongLi$'159905.SZ.Adjusted',index=index(ShenHongLi))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + \n",
    "ggtitle(paste(\"ShenHongLi From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2022-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "HS300  = getSymbols(\"510330.SS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( HS300), \"Price\" =  HS300$'510330.SS.Adjusted',index=index(HS300))\n",
    "names(v) <- c(\"Date\",\"Price\")\n",
    "today = toString(Sys.Date()-2)\n",
    "ggplot(data= v, aes(x =Date , y = log(Price))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + \n",
    "ggtitle(paste(\"HS300 From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(v[today,2]), \n",
    "                 xend = as.Date('2022-01-01'), yend = log(v[today,2])),\n",
    "            size=1,colour='red')+\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "AMZN  = getSymbols(\"AMZN\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( AMZN), \"Price\" =  AMZN$AMZN.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( AMZN.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"AMZN From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( AMZN$ AMZN.Adjusted[today]), \n",
    "                 xend = as.Date('2023-04-01'), yend = log( AMZN$ AMZN.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(AMZN$AMZN.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(AMZN$AMZN.Adjusted[today]*0.5)),\n",
    "           size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "MSFT  = getSymbols(\"MSFT\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( MSFT), \"Price\" =  MSFT$MSFT.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( MSFT.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"MSFT From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( MSFT$ MSFT.Adjusted[today]), \n",
    "                 xend = as.Date('2022-01-01'), yend = log( MSFT$ MSFT.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(MSFT$MSFT.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(MSFT$MSFT.Adjusted[today]*0.85)),\n",
    "           size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "FBT  = getSymbols(\"FBT\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( FBT), \"Price\" =  FBT$FBT.Adjusted)\n",
    "\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( FBT.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"FBT From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( FBT$ FBT.Adjusted[today]), \n",
    "                 xend = as.Date('2019-08-05'), yend = log( FBT$ FBT.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(FBT$FBT.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(FBT$FBT.Adjusted[today]*1.25)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "XBI  = getSymbols(\"XBI\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( XBI), \"Price\" =  XBI$XBI.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "v = v[which(v$Date>'2006-12-30'),]\n",
    "ggplot(data= v, aes(x =Date , y = log( XBI.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"XBI From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( XBI$ XBI.Adjusted[today]), \n",
    "                 xend = as.Date('2021-1-05'), yend = log( XBI$XBI.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(XBI$XBI.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(XBI$XBI.Adjusted[today]*0.95)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "IBB  = getSymbols(\"IBB\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( IBB), \"Price\" =  IBB$IBB.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "v = v[which(v$Date>'2006-12-30'),]\n",
    "ggplot(data= v, aes(x =Date , y = log( IBB.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"IBB From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( IBB$ IBB.Adjusted[today]), \n",
    "                 xend = as.Date('2019-10-05'), yend = log( IBB$IBB.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(IBB$IBB.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(IBB$IBB.Adjusted[today]*1.15)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "VBR  = getSymbols(\"VBR\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( VBR), \"Price\" =  VBR$VBR.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "#v = v[which(v$Date>'2006-12-30'),]\n",
    "ggplot(data= v, aes(x =Date , y = log( VBR.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"VBR From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( VBR$ VBR.Adjusted[today]), \n",
    "                 xend = as.Date('2019-08-05'), yend = log( VBR$VBR.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(VBR$VBR.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(VBR$VBR.Adjusted[today]*1.15)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "####果然small value才是正道。\n",
    "VTV  = getSymbols(\"VTV\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( VTV), \"Price\" =  VTV$VTV.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "#v = v[which(v$Date>'2006-12-30'),]\n",
    "ggplot(data= v, aes(x =Date , y = log( VTV.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"VTV From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( VTV$ VTV.Adjusted[today]), \n",
    "                 xend = as.Date('2019-08-05'), yend = log( VTV$VTV.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(VTV$VTV.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(VTV$VTV.Adjusted[today]*1.15)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "IJS  = getSymbols(\"IJS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( IJS), \"Price\" =  IJS$IJS.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "v = v[which(v$Date>='2004-01-30'),]\n",
    "ggplot(data= v, aes(x =Date , y = log( IJS.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"IJS From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( IJS$ IJS.Adjusted[today]), \n",
    "                 xend = as.Date('2019-08-05'), yend = log( IJS$IJS.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(IJS$IJS.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(IJS$IJS.Adjusted[today]*1.15)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"3 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "SPY  = getSymbols(\"SPY\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( SPY), \"Price\" =  SPY$SPY.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "v = v[which(v$Date>='2004-01-30'),]\n",
    "ggplot(data= v, aes(x =Date , y = log( SPY.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"SPY From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( SPY$ SPY.Adjusted[today]), \n",
    "                 xend = as.Date('2021-01-05'), yend = log( SPY$SPY.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(SPY$SPY.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(SPY$SPY.Adjusted[today]*1.)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"3 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "XLV  = getSymbols(\"XLV\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( XLV), \"Price\" =  XLV$XLV.Adjusted)\n",
    "today = Sys.Date()\n",
    "ggplot(data= v, aes(x =Date , y = log( XLV.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"XLV From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( XLV$ XLV.Adjusted[today]), \n",
    "                 xend = as.Date('2024-1-05'), yend = log( XLV$XLV.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(XLV$XLV.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(XLV$XLV.Adjusted[today]*0.75)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "VHT  = getSymbols(\"VHT\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( VHT), \"Price\" =  VHT$VHT.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( VHT.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"VHT From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( VHT$ VHT.Adjusted[today]), \n",
    "                 xend = as.Date('2022-1-05'), yend = log( VHT$VHT.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(VHT$VHT.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(VHT$VHT.Adjusted[today]*0.9)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ISRG  = getSymbols(\"ISRG\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( ISRG), \"Price\" =  ISRG$ISRG.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( ISRG.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"ISRG From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( ISRG$ ISRG.Adjusted[today]), \n",
    "                 xend = as.Date('2020-03-05'), yend = log( ISRG$ ISRG.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"2 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "JNJ  = getSymbols(\"JNJ\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( JNJ), \"Price\" =  JNJ$JNJ.Adjusted)\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( JNJ.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"JNJ From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( JNJ$ JNJ.Adjusted[today]), \n",
    "                 xend = as.Date('2018-03-05'), yend = log( JNJ$ JNJ.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(JNJ$JNJ.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(JNJ$JNJ.Adjusted[today]*1.6)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "AMD  = getSymbols(\"AMD\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( AMD), \"Price\" =  AMD$AMD.Adjusted)\n",
    "#v = v[which(v$Date>'2016-01-01'),]\n",
    "today = Sys.Date()-2\n",
    "ggplot(data= v, aes(x =Date , y = log( AMD.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"AMD From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( AMD$ AMD.Adjusted[today]), \n",
    "                 xend = as.Date('2022-04-01'), yend = log( AMD$ AMD.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "NVDA  = getSymbols(\"NVDA\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( NVDA), \"Price\" =  NVDA$NVDA.Adjusted)\n",
    "#v = v[which(v$Date>'2016-01-01'),]\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( NVDA.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"NVDA From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( NVDA$ NVDA.Adjusted[today]), \n",
    "                 xend = as.Date('2029-04-01'), yend = log( NVDA$NVDA.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(NVDA$NVDA.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(NVDA$NVDA.Adjusted[today]*0.25)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "CRM  = getSymbols(\"CRM\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( CRM), \"Price\" =  CRM$CRM.Adjusted)\n",
    "#v = v[which(v$Date>'2016-01-01'),]\n",
    "today = Sys.Date()-2\n",
    "ggplot(data= v, aes(x =Date , y = log( CRM.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"CRM From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( CRM$ CRM.Adjusted[today]), \n",
    "                 xend = as.Date('2022-04-01'), yend = log( CRM$ CRM.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(CRM$CRM.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(CRM$CRM.Adjusted[today]*0.85)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ILMN  = getSymbols(\"ILMN\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( ILMN), \"Price\" =  ILMN$ILMN.Adjusted)\n",
    "#v = v[which(v$Date>'2016-01-01'),]\n",
    "today = Sys.Date()-2\n",
    "ggplot(data= v, aes(x =Date , y = log( ILMN.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"ILMN From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( ILMN$ ILMN.Adjusted[today]), \n",
    "                 xend = as.Date('2018-09-01'), yend = log( ILMN$ ILMN.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(ILMN$ILMN.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(ILMN$ILMN.Adjusted[today]*1.55)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "NVO  = getSymbols(\"NVO\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( NVO), \"Price\" =  NVO$NVO.Adjusted)\n",
    "v = v[which(v$Date>'1992-01-01'),]\n",
    "today = Sys.Date()-2\n",
    "ggplot(data= v, aes(x =Date , y = log( NVO.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"NVO From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( NVO$ NVO.Adjusted[today]), \n",
    "                 xend = as.Date('2017-09-01'), yend = log( NVO$ NVO.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(NVO$NVO.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(NVO$NVO.Adjusted[today]*2.5)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ONVO  = getSymbols(\"ONVO\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( ONVO), \"Price\" =  ONVO$ONVO.Adjusted)\n",
    "#v = v[which(v$Date>'1992-01-01'),]\n",
    "today = Sys.Date()-2\n",
    "ggplot(data= v, aes(x =Date , y = log( ONVO.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"ONVO From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( ONVO$ ONVO.Adjusted[today]), \n",
    "                 xend = as.Date('2018-09-01'), yend = log( ONVO$ ONVO.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(ONVO$ONVO.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(ONVO$ONVO.Adjusted[today]*1.2)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "HON  = getSymbols(\"HON\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index(HON), \"Price\" =  HON$HON.Adjusted)\n",
    "#v = v[which(v$Date>'1992-01-01'),]\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( HON.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"HON From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( HON$ HON.Adjusted[today]), \n",
    "                 xend = as.Date('2022-09-01'), yend = log( HON$ HON.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(HON$HON.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(HON$HON.Adjusted[today]*0.8)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "HON  = getSymbols(\"HON\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "head(HON)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "MAXR  = getSymbols(\"MAXR\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( MAXR), \"Price\" =  MAXR$MAXR.Adjusted)\n",
    "v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-2\n",
    "ggplot(data= v, aes(x =Date , y = log( MAXR.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"MAXR From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( MAXR$ MAXR.Adjusted[today]), \n",
    "                 xend = as.Date('2018-09-01'), yend = log( MAXR$ MAXR.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(MAXR$MAXR.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(MAXR$MAXR.Adjusted[today]*1.2)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "SPCE  = getSymbols(\"SPCE\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( SPCE), \"Price\" =  SPCE$SPCE.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-2\n",
    "ggplot(data= v, aes(x =Date , y = log( SPCE.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"SPCE From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( SPCE$ SPCE.Adjusted[today]), \n",
    "                 xend = as.Date('2022-01-01'), yend = log( SPCE$ SPCE.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(SPCE$SPCE.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(SPCE$SPCE.Adjusted[today]*0.75)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "PSTG  = getSymbols(\"PSTG\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( PSTG), \"Price\" =  PSTG$PSTG.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( PSTG.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"PSTG From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( PSTG$ PSTG.Adjusted[today]), \n",
    "                 xend = as.Date('2020-01-01'), yend = log( PSTG$ PSTG.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(PSTG$PSTG.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(PSTG$PSTG.Adjusted[today]*1.05)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "IBM  = getSymbols(\"IBM\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( IBM), \"Price\" =  IBM$IBM.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()\n",
    "ggplot(data= v, aes(x =Date , y = log( IBM.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"IBM From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( IBM$ IBM.Adjusted[today]), \n",
    "                 xend = as.Date('2015-01-01'), yend = log( IBM$ IBM.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(IBM$IBM.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(IBM$IBM.Adjusted[today]*1.55)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "BA  = getSymbols(\"BA\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( BA), \"Price\" =  BA$BA.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()\n",
    "ggplot(data= v, aes(x =Date , y = log( BA.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"BA From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( BA$ BA.Adjusted[today]), \n",
    "                 xend = as.Date('2017-01-01'), yend = log( BA$ BA.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(BA$BA.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(BA$BA.Adjusted[today]*1.8)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "PACB  = getSymbols(\"PACB\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( PACB), \"Price\" =  PACB$PACB.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( PACB.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"PACB From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( PACB$ PACB.Adjusted[today]), \n",
    "                 xend = as.Date('2017-01-01'), yend = log( PACB$ PACB.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(PACB$PACB.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(PACB$PACB.Adjusted[today]*1.8)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "TSLA  = getSymbols(\"TSLA\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( TSLA), \"Price\" =  TSLA$TSLA.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-3\n",
    "ggplot(data= v, aes(x =Date , y = log( TSLA.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"TSLA From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( TSLA$ TSLA.Adjusted[today]), \n",
    "                 xend = as.Date('2024-01-01'), yend = log( TSLA$ TSLA.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(TSLA$TSLA.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(TSLA$TSLA.Adjusted[today]*0.4)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "PDD  = getSymbols(\"PDD\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( PDD), \"Price\" =  PDD$PDD.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-2\n",
    "ggplot(data= v, aes(x =Date , y = log( PDD.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"PDD From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( PDD$ PDD.Adjusted[today]), \n",
    "                 xend = as.Date('2021-06-01'), yend = log( PDD$ PDD.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(PDD$PDD.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(PDD$PDD.Adjusted[today]*0.7)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"1 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "WMT  = getSymbols(\"WMT\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date(), auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( WMT), \"Price\" =  WMT$WMT.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-2\n",
    "ggplot(data= v, aes(x =Date , y = log( WMT.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"WMT From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( WMT$ WMT.Adjusted[today]), \n",
    "                 xend = as.Date('2015-01-01'), yend = log( WMT$ WMT.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(WMT$WMT.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(WMT$WMT.Adjusted[today]*2.6)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "TMO  = getSymbols(\"TMO\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( TMO), \"Price\" =  TMO$TMO.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( TMO.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"TMO From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( TMO$ TMO.Adjusted[today]), \n",
    "                 xend = as.Date('2027-01-01'), yend = log( TMO$ TMO.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(TMO$TMO.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(TMO$TMO.Adjusted[today]*0.5)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "BMY  = getSymbols(\"BMY\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( BMY), \"Price\" =  BMY$BMY.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( BMY.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"BMY From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( BMY$ BMY.Adjusted[today]), \n",
    "                 xend = as.Date('2016-01-01'), yend = log( BMY$ BMY.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(BMY$BMY.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(BMY$BMY.Adjusted[today]*1.5)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "PFE  = getSymbols(\"PFE\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( PFE), \"Price\" =  PFE$PFE.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( PFE.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"PFE From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( PFE$ PFE.Adjusted[today]), \n",
    "                 xend = as.Date('2016-01-01'), yend = log( PFE$ PFE.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(PFE$PFE.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(PFE$PFE.Adjusted[today]*1.8)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "EXAS  = getSymbols(\"EXAS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( EXAS), \"Price\" =  EXAS$EXAS.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( EXAS.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"EXAS From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( EXAS$ EXAS.Adjusted[today]), \n",
    "                 xend = as.Date('2016-01-01'), yend = log( EXAS$ EXAS.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(EXAS$EXAS.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(EXAS$EXAS.Adjusted[today]*1.8)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "KTOS  = getSymbols(\"KTOS\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( KTOS), \"Price\" =  KTOS$KTOS.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( KTOS.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"KTOS From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( KTOS$ KTOS.Adjusted[today]), \n",
    "                 xend = as.Date('2016-01-01'), yend = log( KTOS$ KTOS.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(KTOS$KTOS.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(KTOS$KTOS.Adjusted[today]*1.8)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "CSCO  = getSymbols(\"CSCO\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( CSCO), \"Price\" =  CSCO$CSCO.Adjusted)\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( CSCO.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"CSCO From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( CSCO$ CSCO.Adjusted[today]), \n",
    "                 xend = as.Date('2016-01-01'), yend = log( CSCO$ CSCO.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(CSCO$CSCO.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(CSCO$CSCO.Adjusted[today]*1.8)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "NTES  = getSymbols(\"NTES\", src = \"yahoo\", from = \"1956-01-01\", to = Sys.Date()+1, auto.assign = FALSE)\n",
    "v <- data.frame(\"Date\" = index( NTES), \"Price\" =  NTES[,6])\n",
    "#v = v[which(v$Date>'2019-01-01'),]\n",
    "today = Sys.Date()-1\n",
    "ggplot(data= v, aes(x =Date , y = log( NTES.Adjusted))) + \n",
    "geom_smooth(method = 'lm', formula = y ~ x,fullrange = T) + #绘制回归直线\n",
    "geom_line(color = \"darkblue\") + ggtitle(paste(\"NTES From \",v[1,1])) + \n",
    "stat_poly_eq(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~')), formula = y ~ x, parse = T,\n",
    "            size=6,label.x = 0.5,label.y = 0.99) + #添加回归方程和调整R方\n",
    "#stat_fit_tb(tb.type = 'fit.anova',size=5)+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log( NTES$ NTES.Adjusted[today]), \n",
    "                 xend = as.Date('2019-01-01'), yend = log( NTES$ NTES.Adjusted[today])),\n",
    "            size=1.5,colour='red')+\n",
    "\n",
    "geom_segment(aes(x = as.Date(today), y = log(NTES$NTES.Adjusted[today]), \n",
    "                 xend = as.Date(today), yend = log(NTES$NTES.Adjusted[today]*1.6)),\n",
    "            size=1.5,colour='darkgreen')+\n",
    "\n",
    "theme_bw()+\n",
    "xlab(\"Date\") + ylab(\"Log(Price)\") + \n",
    "theme(plot.title = element_text(hjust = 0.5,size=30)) + \n",
    "scale_x_date(date_labels = \"%Y\", date_breaks = \"5 years\")+\n",
    "theme(axis.text = element_text(size=20),axis.title = element_text(size=30),legend.text=element_text(size=30))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "head(NTES[,6])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
