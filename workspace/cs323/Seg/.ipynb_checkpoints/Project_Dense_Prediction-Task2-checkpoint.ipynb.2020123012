{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import gc\n",
    "import time\n",
    "import datetime\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.nn.functional as F\n",
    "\n",
    "#os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0\"\n",
    "\n",
    "epochs = 10\n",
    "batch_size = 4\n",
    "learning_rate = 0.01\n",
    "workers = 4 # The number of parallel processes used to read data\n",
    "gpu_id = [0,1,2,3] # only modify if you machine has more than one GPU card"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "torch.cuda.device_count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Depth_Model(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(Depth_Model, self).__init__()\n",
    "        self.down1 = Down(3,64,pooling=False)\n",
    "        self.down2 = Down(64,128,pooling=True)\n",
    "        self.down3 = Down2(128,256,pooling=True)\n",
    "        self.down4 = Down2(256,512,pooling=True)\n",
    "        self.down5 = Down2(512,1024,pooling=True)\n",
    "\n",
    "        self.up1 = Up(1024,512,down=2)\n",
    "        self.up2 = Up(512, 256,down=2)\n",
    "        self.up3 = Up(256, 128,down=2)\n",
    "        self.up4 = Up(128, 64,down=1)\n",
    "        self.maxpool = nn.MaxPool2d(2)\n",
    "        self.conv = nn.Conv2d(64, 1, kernel_size=1)\n",
    "\n",
    "\n",
    "    def forward(self, x):\n",
    "\n",
    "        x1 = self.down1(x)\n",
    "        x2 = self.down2(x1)\n",
    "        x3 = self.down3(x2)\n",
    "        x4 = self.down4(x3)\n",
    "        x5 = self.down5(x4)\n",
    "        x = self.up1(x5,x4)\n",
    "        x = self.up2(x, x3)\n",
    "        x = self.up3(x, x2)\n",
    "        x = self.up4(x, x1)\n",
    "        x = self.maxpool(x)\n",
    "        x = self.conv(x)\n",
    "        return x"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "# Part 2\n",
    "\n",
    "## Semantic Segmentation\n",
    "\n",
    "In this part of the project, you will reuse the model you created in the previous part to perform Semantic Segmentation - instead of assigning a real number to each\n",
    "pixel , you will assign it a class.\n",
    "\n",
    "The tasks are as following:\n",
    "- Write a Dataset class that processes the segmentation data. **[10 points]**\n",
    "    - Modify the UNet model that takes an RGB image and now outputs a single channel _label map_\n",
    "    - Define an approprate loss function. **[5 points]**\n",
    "- Tune the model to achieve an mIOU of **0.45** or higher on the given validation set. **[20 points]**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "### Dataset [10 points]\n",
    "We are going to use the [PASCAL VOC dataset](https://drive.google.com/drive/folders/1G54WDNnOQecr5T0sEvZcuyme0WT5Qje3?usp=sharing), which is a commonly used benchmark. In order to reduce the\n",
    "computational requirements, you should downsample the dataset to 256x256, similar to the previous project."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "Now you have to implement the Dataset. Look at the file `loaders.py`.\n",
    "\n",
    "The class you will need to emulate is `class ImageDepthDataset(Dataset)`. The class is called `VOCSeg`, and it must _inherit_ from the `Dataset` class,\n",
    "just like the `ImageDepthDataset`.\n",
    "You need to fill in the `__len__` and the `__getitem__` methods.\n",
    "The `__getitem__` method should yield a dict of the RGB image and the labeled segmentation map.\n",
    "\n",
    "Make sure you downsample the image and the labels to 256x256, otherwise the training will take too much time.\n",
    "\n",
    "Make sure that the labels are in the range `0..N-1`, where\n",
    "N is the number of classes - 21 in our case. You can have one special label for unknown regions.\n",
    "\n",
    "We provide the map of RGB to label for convenience in `get_pascal_labels()`. The map should be read as this - if a pixel has color `[0, 0, 0]`, it has label 0. If the color is\n",
    "`[128, 0, 0]`, the label is 1\n",
    "\n",
    "It is also very common to change the RGB range from 0-255 to 0-1 or -1 to 1. Take a look at [torchvision.transforms.ToTensor](https://pytorch.org/docs/stable/torchvision/transforms.html#torchvision.transforms.ToTensor)\n",
    "and [torchvision.transforms.Normalize](https://pytorch.org/docs/stable/torchvision/transforms.html#torchvision.transforms.Normalize)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "The PASCAL VOC dataset has predefined train/val sets. Make sure your class implementation can take this _split_ as an argument. Now create train/val loaders using the `get_seg_loaders` function (look at `prep_loaders`), and we should be good to go."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "I transfer the loader to here"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/longy/anaconda3/envs/ML/lib/python3.7/site-packages/IPython/core/magics/pylab.py:160: UserWarning: pylab import has clobbered these variables: ['exp', 'sample']\n",
      "`%matplotlib` prevents importing * from pylab and numpy\n",
      "  \"\\n`%matplotlib` prevents importing * from pylab and numpy\"\n"
     ]
    }
   ],
   "source": [
    "%pylab inline\n",
    "import torchvision\n",
    "import torch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import glob\n",
    "import torch\n",
    "import numpy as np\n",
    "from skimage import io, transform\n",
    "from torchvision import transforms\n",
    "from torchvision.utils import make_grid\n",
    "from torch.utils.data import Dataset, DataLoader, random_split\n",
    "\n",
    "np.random.seed(0) \n",
    "torch.manual_seed(0)\n",
    "VALIDATION_SPLIT = 0.02\n",
    "\n",
    "class DepthHalfSize(object):\n",
    "    def __call__(self, sample):\n",
    "        x = sample['depth']\n",
    "        sample['depth'] = transform.resize(x, (x.shape[0]//2, x.shape[1]//2))\n",
    "        return sample\n",
    "\n",
    "class ToTensor(object):\n",
    "    def __call__(self, sample):\n",
    "        image, depth = sample['image'], sample['depth']\n",
    "        # swap channel axis\n",
    "        image = image.transpose((2, 0, 1))\n",
    "        depth = depth.transpose((2, 0, 1))\n",
    "        return {'image': torch.from_numpy(image), 'depth': torch.from_numpy(depth)}\n",
    "    \n",
    "class DepthToNormal(object):\n",
    "    def __call__(self, sample):\n",
    "        dx, dy = np.gradient(sample['depth'].squeeze())\n",
    "        dx, dy, dz = dx * 2500, dy * 2500, np.ones_like(dy)\n",
    "        n = np.linalg.norm(np.stack((dy, dx, dz), axis=-1), axis=-1)\n",
    "        d = np.stack((dy/n, dx/n, dz/n), axis=-1)\n",
    "        return {'image': sample['image'], 'depth': (d + 1) * 0.5} \n",
    "        \n",
    "class ImageDepthDataset(Dataset):\n",
    "    def __init__(self, root_dir, transform=None):\n",
    "        self.transform = transform \n",
    "        self.image_files = glob.glob(root_dir + '/*.jpg')\n",
    "        \n",
    "    def __len__(self):\n",
    "        return len(self.image_files)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        image = io.imread(self.image_files[idx]) / 255.0\n",
    "        depth = io.imread(self.image_files[idx].replace('.jpg', '.png'))[:,:,:1] / 255.0        \n",
    "        sample = {'image': image, 'depth': depth}        \n",
    "        return self.transform(sample) if self.transform else sample\n",
    "    \n",
    "def prep_loaders(root_dir=None, batch_size=1, workers=1):\n",
    "    # Load dataset\n",
    "    image_depth_dataset = ImageDepthDataset(root_dir=root_dir, transform=transforms.Compose([DepthHalfSize(), ToTensor()]))\n",
    "\n",
    "    # Split into training and validation sets\n",
    "    train_size = int((1-VALIDATION_SPLIT) * len(image_depth_dataset))\n",
    "    test_size = len(image_depth_dataset) - train_size\n",
    "    train_dataset, test_dataset = torch.utils.data.random_split(image_depth_dataset, [train_size, test_size])\n",
    "\n",
    "    # Prepare data loaders\n",
    "    train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True, num_workers=workers)\n",
    "    valid_loader = DataLoader(test_dataset, batch_size=batch_size, shuffle=False, num_workers=workers)\n",
    "    print('Dataset size (num. batches)', len(train_loader), len(valid_loader))\n",
    "    \n",
    "    return train_loader, valid_loader\n",
    "\n",
    "##############################################################\n",
    "################# Segmentation Section #######################\n",
    "##############################################################\n",
    "\n",
    "class SegIdentityTransform(object):\n",
    "    # Hint: Note that our transforms work on dicts. This is an example of a transform that works\n",
    "    # on a dict whose elements can be converted to np.arrays, and are then converted to torch.tensors\n",
    "    # This performs the scaling of the RGB by division by 255, and puts channels first by performing the permute\n",
    "    # for the label, we convert to long, datatype to let torch know that this is a discrete label.\n",
    "    # You might want to change this or write different transforms depending on how you read data.\n",
    "    def __call__(self, sample):\n",
    "        x = sample['image']\n",
    "        sample['image'] = transform.resize(x, (256,256),preserve_range=True)\n",
    "        y= sample['label']\n",
    "        sample['label'] = transform.resize(y, (256,256),preserve_range=True)\n",
    "        \n",
    "        tf = transforms.Compose([transforms.ToTensor(),\n",
    "                transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]),])\n",
    "        \n",
    "        \n",
    "        #sample['image'] = sample['image']/255.0\n",
    "        #sample['image'] = tf(sample['image'])\n",
    "        \n",
    "        \n",
    "        return {'image': torch.tensor(np.array(sample['image']/255.0)).permute(2,0,1),\n",
    "        #return {'image': torch.tensor(np.array(sample['image']/255.0)),\n",
    "                'label': torch.tensor(np.array(sample['label'])).long()}\n",
    "        #return sample\n",
    "\n",
    "def get_pascal_labels():\n",
    "    \"\"\"Load the mapping that associates pascal classes with label colors\n",
    "    Returns:\n",
    "        np.ndarray with dimensions (21, 3)\n",
    "    \"\"\"\n",
    "    return np.asarray([[0, 0, 0],\n",
    "                       [128, 0, 0],\n",
    "                       [0, 128, 0],\n",
    "                       [128, 128, 0],\n",
    "                       [0, 0, 128],\n",
    "                       [128, 0, 128],\n",
    "                       [0, 128, 128],\n",
    "                       [128, 128, 128],\n",
    "                       [64, 0, 0],\n",
    "                       [192, 0, 0],\n",
    "                       [64, 128, 0],\n",
    "                       [192, 128, 0],\n",
    "                       [64, 0, 128],\n",
    "                       [192, 0, 128],\n",
    "                       [64, 128, 128],\n",
    "                       [192, 128, 128],\n",
    "                       [0, 64, 0],\n",
    "                       [128, 64, 0],\n",
    "                       [0, 192, 0],\n",
    "                       [128, 192, 0],\n",
    "                       [0, 64, 128]])\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "def encode_segmap(mask):\n",
    "    \"\"\"Encode segmentation label images as pascal classes\n",
    "    Args:\n",
    "        mask (np.ndarray): raw segmentation label image of dimension\n",
    "          (M, N, 3), in which the Pascal classes are encoded as colours.\n",
    "    Returns:\n",
    "        (np.ndarray): class map with dimensions (M,N), where the value at\n",
    "        a given location is the integer denoting the class index.\n",
    "    \"\"\"\n",
    "\n",
    "    # TODO (hint: You might not need a lot of work here with some libraries, which already read in the image as a single channel label)\n",
    "    # (hint: the said library does not return a np.ndarray object)\n",
    "    label_mask = np.zeros((mask.shape[0], mask.shape[1]), dtype=np.int16)\n",
    "    if isinstance(mask, np.ndarray):\n",
    "        # TODO\n",
    "        mask = mask.astype(int)\n",
    "        for i, label in enumerate(get_pascal_labels()):\n",
    "            #print(mask.shape)\n",
    "            #print(i)\n",
    "            #print(np.where(np.all(mask == label, axis=-1)))\n",
    "            label_mask[np.where(np.all(mask == label, axis=-1))[:2]] = i\n",
    "        label_mask = label_mask.astype(int)\n",
    "    else:\n",
    "        # TODO if the image is just single channel\n",
    "        #  you might want to convert the single channel label to a np.ndarray\n",
    "        pass\n",
    "    return label_mask\n",
    "\n",
    "def decode_segmap(label_mask, unk_label=255):\n",
    "    \"\"\"Decode segmentation label prediction as RGB images\n",
    "    Args:\n",
    "        mask (torch.tensor): class map with dimensions (B, M,N), where the value at\n",
    "        a given location is the integer denoting the class index.\n",
    "    Returns:\n",
    "        (np.ndarray): colored image of shape (BM, BN, 3)\n",
    "    \"\"\"\n",
    "    #mask[mask == unk_label] == 0\n",
    "    #mask = mask.numpy()\n",
    "    #cmap = get_pascal_labels()\n",
    "    #cmap_exp = cmap[..., None]\n",
    "    #colored = cmap[mask].squeeze()\n",
    "    #grid = make_grid(torch.tensor(colored).permute(0, 3, 1, 2))\n",
    "    #return np.permute(grid, (1, 2, 0))\n",
    "\n",
    "    label_colours = get_pascal_labels()\n",
    "    r = label_mask.copy()\n",
    "    g = label_mask.copy()\n",
    "    b = label_mask.copy()\n",
    "    for ll in range(0, 21):\n",
    "        r[label_mask == ll] = label_colours[ll, 0]\n",
    "        g[label_mask == ll] = label_colours[ll, 1]\n",
    "        b[label_mask == ll] = label_colours[ll, 2]\n",
    "    rgb = np.zeros((label_mask.shape[0], label_mask.shape[1], 3))\n",
    "    print(rgb.shape)\n",
    "    print(r.shape)\n",
    "    rgb[:, :, 0] = r / 255.0\n",
    "    rgb[:, :, 1] = g / 255.0\n",
    "    rgb[:, :, 2] = b / 255.0\n",
    "    plt.imshow(rgb)\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "\n",
    "class VOCSeg(Dataset):\n",
    "    def __init__(self, root_dir, split=None, transform=None):\n",
    "        # Known information\n",
    "        self.num_classes = 21\n",
    "        self.class_names = ['Background',\n",
    "                            'Aeroplane',\n",
    "                            'Bicycle',\n",
    "                            'Bird',\n",
    "                            'Boat',\n",
    "                            'Bottle',\n",
    "                            'Bus',\n",
    "                            'Car',\n",
    "                            'Cat',\n",
    "                            'Chair',\n",
    "                            'Cow',\n",
    "                            'Diningtable',\n",
    "                            'Dog',\n",
    "                            'Horse',\n",
    "                            'Motorbike',\n",
    "                            'Person',\n",
    "                            'Pottedplant',\n",
    "                            'Sheep',\n",
    "                            'Sofa',\n",
    "                            'Train',\n",
    "                            'Tvmonitor']\n",
    "\n",
    "        # Set up proper paths\n",
    "        self.root_dir = root_dir\n",
    "        self.image_dir = os.path.join(self.root_dir, 'JPEGImages')\n",
    "        self.label_dir = os.path.join(self.root_dir, 'SegmentationClass')\n",
    "        \n",
    "        self.transform = transform \n",
    "\n",
    "        #TODO Read the appropriate split file and save the file names\n",
    "        self.split = split\n",
    "        self.split_file_dir = os.path.join(self.root_dir, 'ImageSets', 'Segmentation')\n",
    "\n",
    "        # TODO read in ONLY files from self.split_file\n",
    "        #self.image_files = None\n",
    "        #self.label_files = None\n",
    "        with open(os.path.join(os.path.join(self.split_file_dir, self.split + '.txt')), \"r\") as f:\n",
    "            lines = f.read().splitlines()\n",
    "            self.image_files = [os.path.join(self.root_dir, \"JPEGImages\", name + \".jpg\") for name in lines]\n",
    "            self.label_files = [os.path.join(self.root_dir, \"SegmentationClass\", name + \".png\") for name in lines]\n",
    "            print(len(self.image_files))\n",
    "            \n",
    "        \n",
    "\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.image_files)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "\n",
    "        # TODO Retrieve the saved file names and perform the proper processing\n",
    "        # The images go from 0-255 to 0-1. You can also use the range -1 to 1\n",
    "        # The labels go from a 3 channel RGB to a single channel with elements in the range 0..N-1\n",
    "        #image = None\n",
    "        image = io.imread(self.image_files[idx])\n",
    "        #label_rgb = None\n",
    "        label_rgb = io.imread(self.label_files[idx])\n",
    "        label = label_rgb[:,:,:3]\n",
    "        label = encode_segmap(label) # write the encode_segmap function\n",
    "        sample = {'image': image, 'label': label}\n",
    "        \n",
    "        return self.transform(sample)\n",
    "\n",
    "\n",
    "def get_seg_loaders(root_dir=None, batch_size=1, workers=1):\n",
    "\n",
    "    #TODO optionally add more augmentation\n",
    "    ####Please see function SegIdentityTransform \n",
    "    \n",
    "    tfms = transforms.Compose([\n",
    "        #transforms.Resize(256),\n",
    "        #transforms.Normalize(mean = [0.485, 0.456, 0.406],std = [0.229, 0.224, 0.225]),\n",
    "        SegIdentityTransform()\n",
    "    ])\n",
    "\n",
    "    train_set = VOCSeg(root_dir=root_dir, split='train', transform=tfms)\n",
    "    val_set = VOCSeg(root_dir=root_dir, split='val', transform=tfms) # No transforms on the validation set\n",
    "\n",
    "    # Prepare data_loaders\n",
    "    train_loader = DataLoader(train_set, batch_size=batch_size, shuffle=True, num_workers=workers)\n",
    "    valid_loader = DataLoader(val_set, batch_size=batch_size, shuffle=False, num_workers=workers)\n",
    "\n",
    "    return train_loader, valid_loader\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "jupyter": {
     "outputs_hidden": false
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1464\n",
      "1449\n"
     ]
    }
   ],
   "source": [
    "# Sanity check\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    #from loaders import get_seg_loaders\n",
    "    train_loader, valid_loader = get_seg_loaders(root_dir='./VOC2012',batch_size=batch_size,workers=workers)\n",
    "\n",
    "    # we have read all files\n",
    "    assert len(train_loader.dataset) == 1464\n",
    "    assert len(valid_loader.dataset) == 1449\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tensor(15)\n",
      "tensor(1., dtype=torch.float64)\n",
      "torch.Size([4, 256, 256])\n",
      "torch.Size([4, 3, 256, 256])\n",
      "tensor([[[[0.1661, 0.1622, 0.1596,  ..., 0.1683, 0.1691, 0.1711],\n",
      "          [0.1789, 0.1724, 0.1663,  ..., 0.1682, 0.1709, 0.1725],\n",
      "          [0.1837, 0.1804, 0.1771,  ..., 0.1686, 0.1686, 0.1686],\n",
      "          ...,\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0118],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0118, 0.0118, 0.0157],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0118, 0.0118, 0.0157]],\n",
      "\n",
      "         [[0.1864, 0.1787, 0.1756,  ..., 0.1690, 0.1656, 0.1672],\n",
      "          [0.1836, 0.1760, 0.1688,  ..., 0.1718, 0.1686, 0.1686],\n",
      "          [0.1730, 0.1699, 0.1647,  ..., 0.1765, 0.1643, 0.1608],\n",
      "          ...,\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0039, 0.0039, 0.0039],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0078],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0078]],\n",
      "\n",
      "         [[0.1871, 0.1974, 0.1922,  ..., 0.2153, 0.1880, 0.1895],\n",
      "          [0.1901, 0.1933, 0.1864,  ..., 0.2125, 0.2082, 0.2082],\n",
      "          [0.1909, 0.1873, 0.1839,  ..., 0.2066, 0.2124, 0.2124],\n",
      "          ...,\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0118, 0.0097],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0118, 0.0157, 0.0136],\n",
      "          [0.0078, 0.0078, 0.0078,  ..., 0.0118, 0.0157, 0.0136]]],\n",
      "\n",
      "\n",
      "        [[[0.0389, 0.0226, 0.0235,  ..., 0.0994, 0.1264, 0.1469],\n",
      "          [0.0263, 0.0142, 0.0154,  ..., 0.2712, 0.3047, 0.1920],\n",
      "          [0.0242, 0.0193, 0.0163,  ..., 0.3089, 0.3215, 0.2012],\n",
      "          ...,\n",
      "          [0.0664, 0.0638, 0.0732,  ..., 0.2165, 0.3307, 0.4656],\n",
      "          [0.0692, 0.0679, 0.0723,  ..., 0.3420, 0.3357, 0.3429],\n",
      "          [0.0706, 0.0706, 0.0706,  ..., 0.3205, 0.3314, 0.3503]],\n",
      "\n",
      "         [[0.0428, 0.0265, 0.0275,  ..., 0.1083, 0.1316, 0.1462],\n",
      "          [0.0288, 0.0181, 0.0193,  ..., 0.2663, 0.2899, 0.1654],\n",
      "          [0.0242, 0.0193, 0.0202,  ..., 0.3060, 0.3077, 0.1734],\n",
      "          ...,\n",
      "          [0.0585, 0.0560, 0.0654,  ..., 0.2056, 0.3579, 0.4841],\n",
      "          [0.0613, 0.0600, 0.0644,  ..., 0.3702, 0.3556, 0.3398],\n",
      "          [0.0627, 0.0627, 0.0627,  ..., 0.3413, 0.3400, 0.3441]],\n",
      "\n",
      "         [[0.0216, 0.0039, 0.0054,  ..., 0.1102, 0.1249, 0.1360],\n",
      "          [0.0147, 0.0012, 0.0017,  ..., 0.2451, 0.2688, 0.1537],\n",
      "          [0.0164, 0.0114, 0.0069,  ..., 0.2609, 0.2805, 0.1617],\n",
      "          ...,\n",
      "          [0.0703, 0.0678, 0.0772,  ..., 0.2967, 0.5410, 0.6794],\n",
      "          [0.0731, 0.0718, 0.0762,  ..., 0.5927, 0.6511, 0.6647],\n",
      "          [0.0745, 0.0745, 0.0745,  ..., 0.6861, 0.6628, 0.6579]]],\n",
      "\n",
      "\n",
      "        [[[0.0021, 0.0068, 0.0131,  ..., 0.2081, 0.1912, 0.1887],\n",
      "          [0.0036, 0.0075, 0.0078,  ..., 0.2377, 0.2183, 0.2064],\n",
      "          [0.0095, 0.0094, 0.0070,  ..., 0.2470, 0.2350, 0.2055],\n",
      "          ...,\n",
      "          [0.2200, 0.2070, 0.1956,  ..., 0.3062, 0.2536, 0.1941],\n",
      "          [0.2187, 0.2105, 0.1941,  ..., 0.3845, 0.2911, 0.2027],\n",
      "          [0.2178, 0.2099, 0.1862,  ..., 0.3045, 0.2234, 0.1914]],\n",
      "\n",
      "         [[0.0874, 0.1201, 0.1505,  ..., 0.3074, 0.3034, 0.3025],\n",
      "          [0.0984, 0.1242, 0.1396,  ..., 0.3167, 0.3174, 0.3089],\n",
      "          [0.1264, 0.1352, 0.1429,  ..., 0.3239, 0.3307, 0.3135],\n",
      "          ...,\n",
      "          [0.4468, 0.4607, 0.4614,  ..., 0.4901, 0.4469, 0.3864],\n",
      "          [0.4329, 0.4456, 0.4435,  ..., 0.5995, 0.5415, 0.4265],\n",
      "          [0.4354, 0.4367, 0.4252,  ..., 0.5464, 0.4825, 0.4181]],\n",
      "\n",
      "         [[0.0119, 0.0282, 0.0372,  ..., 0.1933, 0.1858, 0.1798],\n",
      "          [0.0151, 0.0187, 0.0188,  ..., 0.2099, 0.2014, 0.1865],\n",
      "          [0.0302, 0.0163, 0.0093,  ..., 0.2242, 0.2347, 0.2064],\n",
      "          ...,\n",
      "          [0.2896, 0.2977, 0.2705,  ..., 0.4207, 0.2955, 0.1833],\n",
      "          [0.2778, 0.2842, 0.2619,  ..., 0.5327, 0.4119, 0.2501],\n",
      "          [0.2814, 0.2826, 0.2516,  ..., 0.4550, 0.3470, 0.2488]]],\n",
      "\n",
      "\n",
      "        [[[0.1583, 0.3253, 0.5239,  ..., 0.0632, 0.0874, 0.0526],\n",
      "          [0.1676, 0.2996, 0.5101,  ..., 0.0561, 0.0365, 0.0318],\n",
      "          [0.1627, 0.2515, 0.1596,  ..., 0.1816, 0.0957, 0.0588],\n",
      "          ...,\n",
      "          [0.1498, 0.2991, 0.3380,  ..., 0.1216, 0.1191, 0.1268],\n",
      "          [0.1645, 0.1573, 0.2537,  ..., 0.1267, 0.1243, 0.1281],\n",
      "          [0.2899, 0.1965, 0.1669,  ..., 0.1233, 0.1208, 0.1250]],\n",
      "\n",
      "         [[0.2173, 0.3508, 0.5623,  ..., 0.1376, 0.1406, 0.0794],\n",
      "          [0.1699, 0.3056, 0.5634,  ..., 0.1803, 0.1067, 0.0652],\n",
      "          [0.2085, 0.2670, 0.1988,  ..., 0.2853, 0.1514, 0.0842],\n",
      "          ...,\n",
      "          [0.2049, 0.3414, 0.3709,  ..., 0.1608, 0.1583, 0.1660],\n",
      "          [0.2139, 0.1841, 0.2717,  ..., 0.1659, 0.1635, 0.1673],\n",
      "          [0.3456, 0.2352, 0.2008,  ..., 0.1595, 0.1540, 0.1597]],\n",
      "\n",
      "         [[0.1966, 0.3691, 0.5718,  ..., 0.0327, 0.0625, 0.0457],\n",
      "          [0.1865, 0.3207, 0.5549,  ..., 0.0130, 0.0098, 0.0258],\n",
      "          [0.2160, 0.2767, 0.2135,  ..., 0.0704, 0.0337, 0.0288],\n",
      "          ...,\n",
      "          [0.2719, 0.4019, 0.4170,  ..., 0.2054, 0.1979, 0.2052],\n",
      "          [0.2613, 0.2444, 0.3401,  ..., 0.2052, 0.2027, 0.2065],\n",
      "          [0.3717, 0.2848, 0.2708,  ..., 0.2006, 0.1962, 0.1988]]]],\n",
      "       dtype=torch.float64)\n",
      "tensor([[[ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         ...,\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0]],\n",
      "\n",
      "        [[ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         ...,\n",
      "         [ 0,  0,  0,  ..., 11, 11, 11],\n",
      "         [ 0,  0,  0,  ..., 11, 11, 11],\n",
      "         [ 0,  0,  0,  ..., 11, 11, 11]],\n",
      "\n",
      "        [[ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         ...,\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0]],\n",
      "\n",
      "        [[ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         ...,\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0],\n",
      "         [ 0,  0,  0,  ...,  0,  0,  0]]])\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x648 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sample = iter(train_loader).next()\n",
    "figure(figsize=(9,9)); imshow(torchvision.utils.make_grid(sample['image'], padding=0).permute((1, 2, 0)))\n",
    "#figure(figsize=(9,9)); imshow(torchvision.utils.make_grid(sample['label'], padding=0).permute((1, 2, 0)))\n",
    "label = sample['label']\n",
    "image = sample['image']\n",
    "print(label.max())\n",
    "print(image.max())\n",
    "print(label.shape)\n",
    "print(image.shape)\n",
    "print(image)\n",
    "print(label)\n",
    "    \n",
    "    #print(image)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "You should implement a few more sanity checks - the range of data in the RGB part, the range of data in the label part, whether the dataset returns tensors,\n",
    "whether the labels have the datatype `torch.long` etc."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "## Modifying the Loss and Architecture [5 points]\n",
    "You will have to some form of surgery on the network you constructed in Part 1.\n",
    "\n",
    "1. The number of channels the last layer predicts must change to the number of classes in the dataset.\n",
    "2. The loss function must change to reflect the fact that we are now performing per-pixel classification. (What loss did you use for classification in Project 1?)\n",
    "3. You might get a CUDA assert error. This means that you have a label higher than the number of channels in the _logits_. This is very common with semantic segmentation, where you might want to label some region unkown as it's label might be under doubt - for example near the edges of objects. Look up how to ignore a certain label with a classification loss.\n",
    "4. Take care of input label and logit sizes. We want predictions to be 256x256 as well."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import torch\n",
    "from math import exp\n",
    "import torch.nn.functional as F\n",
    "from torch.autograd import Variable\n",
    "####Dice Loss\n",
    "def loss_fn(y_pred, y):\n",
    "    \n",
    "    #y_pred = Variable(y_pred, requires_grad=True)\n",
    "    #y_pred.requires_grad = True\n",
    "    #print(y_pred.shape)\n",
    "    y_pred = torch.sigmoid(y_pred)\n",
    "    y_pred = torch.argmax(y_pred, dim=1)\n",
    "    #y_pred = y_pred.argmax(1)\n",
    "    #print(y_pred.shape)\n",
    "    #bce = F.binary_cross_entropy_with_logits(y_pred, y)\n",
    "    \n",
    "    #pred = y_pred.view(-1)\n",
    "    #y = y.view(-1)\n",
    "    #y = torch.as_tensor(y)\n",
    "    #y_pred = torch.as_tensor(y_pred)\n",
    "    y = F.one_hot(y.long(), num_classes = 21).contiguous().float()\n",
    "    y_pred   = F.one_hot(y_pred, num_classes = 21).contiguous().float()\n",
    "    \n",
    "    #y = Variable(y.float(), requires_grad=True)\n",
    "    #pred = Variable(pred.float(), requires_grad=True)\n",
    "    #y.requires_grad = True\n",
    "    #y_pred.requires_grad = True\n",
    "    \n",
    "    y_pred = y_pred.view(-1)\n",
    "    y = y.view(-1)\n",
    "    #y_pred = y_pred.squeeze(1)\n",
    "    #y = y.squeeze(1)\n",
    "    \n",
    "    \n",
    "    smooth = 1.\n",
    "    intersection = (y_pred * y).sum()\n",
    "    loss =  1 - ((2. * intersection + smooth)/(y_pred.sum() + y.sum() + smooth))\n",
    "    #print(loss)\n",
    "    #return bce_loss(y_pred,y)\n",
    "    #return bce\n",
    "    return loss\n",
    "\n",
    "\n",
    "### Cross Entropy\n",
    "def loss_fn(y_pred, y):\n",
    "    #y_pred.requires_grad = True\n",
    "    y_pred = torch.sigmoid(y_pred)\n",
    "    loss = nn.CrossEntropyLoss(ignore_index=0)(y_pred, y.long())\n",
    "    return loss\n",
    "\n",
    "\n",
    "#"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Up(nn.Module):\n",
    "\n",
    "    def __init__(self, in_channels, out_channels, down):\n",
    "        super().__init__()\n",
    "\n",
    "        self.up = nn.ConvTranspose2d(in_channels , in_channels // 2, kernel_size=2, stride=2)\n",
    "        if(down==1):\n",
    "            self.conv = Down(in_channels, out_channels,pooling=False)\n",
    "        else:\n",
    "            self.conv = Down2(in_channels, out_channels,pooling=False)\n",
    "\n",
    "    def forward(self, x1, x2):\n",
    "        x1 = self.up(x1)\n",
    "        diffY = x2.shape[2] - x1.shape[2]\n",
    "        diffX = x2.shape[3] - x1.shape[3]\n",
    "\n",
    "        x1 = F.pad(x1, [diffX // 2, diffX - diffX // 2,\n",
    "                        diffY // 2, diffY - diffY // 2]) \n",
    "\n",
    "        x = torch.cat([x2, x1], dim=1)\n",
    "        return self.conv(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Down(nn.Module):\n",
    "    def __init__(self, in_channels, out_channels,pooling=True):\n",
    "        super().__init__()\n",
    "        self.pooling = pooling\n",
    "        self.maxpool = nn.MaxPool2d(2)\n",
    "        self.double_conv = nn.Sequential(\n",
    "            nn.Conv2d(in_channels, out_channels,kernel_size=3, padding=1),\n",
    "            nn.BatchNorm2d(out_channels),\n",
    "            nn.ReLU(inplace=True),\n",
    "            nn.Conv2d(out_channels, out_channels,kernel_size=3, padding=1),\n",
    "            nn.BatchNorm2d(out_channels),\n",
    "            nn.ReLU(inplace=True)\n",
    "        )\n",
    "\n",
    "    def forward(self, x):\n",
    "        if(self.pooling):\n",
    "            return self.maxpool(self.double_conv(x))\n",
    "        else:\n",
    "            return self.double_conv(x)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Down2(nn.Module):\n",
    "    def __init__(self, in_channels, out_channels,pooling=True):\n",
    "        super().__init__()\n",
    "        self.pooling = pooling\n",
    "        self.maxpool = nn.MaxPool2d(2)\n",
    "        self.double_conv = nn.Sequential(\n",
    "            nn.Conv2d(in_channels, out_channels,kernel_size=3, padding=1),\n",
    "            nn.BatchNorm2d(out_channels),\n",
    "            nn.ReLU(inplace=True),\n",
    "            nn.Conv2d(out_channels, out_channels,kernel_size=3, padding=1),\n",
    "            nn.BatchNorm2d(out_channels),\n",
    "            nn.ReLU(inplace=True),\n",
    "            nn.Conv2d(out_channels, out_channels,kernel_size=3, padding=1),\n",
    "            nn.BatchNorm2d(out_channels),\n",
    "            nn.ReLU(inplace=True)\n",
    "        )\n",
    "\n",
    "    def forward(self, x):\n",
    "        if(self.pooling):\n",
    "            return self.maxpool(self.double_conv(x))\n",
    "        else:\n",
    "            return self.double_conv(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Model(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(Model, self).__init__()\n",
    "        self.down1 = Down(3,64,pooling=False)\n",
    "        self.down2 = Down(64,128,pooling=True)\n",
    "        self.down3 = Down2(128,256,pooling=True)\n",
    "        self.down4 = Down2(256,512,pooling=True)\n",
    "        self.down5 = Down2(512,1024,pooling=True)\n",
    "\n",
    "        self.up1 = Up(1024,512,down=2)\n",
    "        self.up2 = Up(512, 256,down=2)\n",
    "        self.up3 = Up(256, 128,down=2)\n",
    "        self.up4 = Up(128, 64,down=1)\n",
    "        #self.maxpool = nn.MaxPool2d(2)\n",
    "        self.conv = nn.Conv2d(64, 21, kernel_size=1)\n",
    "\n",
    "\n",
    "    def forward(self, x):\n",
    "\n",
    "        x1 = self.down1(x)\n",
    "        x2 = self.down2(x1)\n",
    "        x3 = self.down3(x2)\n",
    "        x4 = self.down4(x3)\n",
    "        x5 = self.down5(x4)\n",
    "        x = self.up1(x5,x4)\n",
    "        x = self.up2(x, x3)\n",
    "        x = self.up3(x, x2)\n",
    "        x = self.up4(x, x1)\n",
    "        #x = self.maxpool(x)\n",
    "        x = self.conv(x)\n",
    "        return x"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "### !! \n",
    "### <span style=\"color:red\"> At this point, we highly recommend restarting your notebook for part 2 and beginning modifying/training the  model</span>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "jupyter": {
     "outputs_hidden": false
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import gc\n",
    "import time\n",
    "import datetime\n",
    "\n",
    "os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0\"\n",
    "\n",
    "epochs = 30\n",
    "batch_size = 8\n",
    "learning_rate = 0.001\n",
    "workers = 1 # The number of parallel processes used to read data\n",
    "gpu_id = [0] # only modify if you machine has more than one GPU card"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "jupyter": {
     "outputs_hidden": false
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1464\n",
      "1449\n"
     ]
    }
   ],
   "source": [
    "if __name__ == '__main__':\n",
    "    #from loaders import get_seg_loaders\n",
    "    train_loader, valid_loader = get_seg_loaders(root_dir='./VOC2012',batch_size=batch_size,workers=workers)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ready to train.\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.0539,  0.1481, -0.0740],\n",
      "          [-0.1039, -0.0240,  0.1576],\n",
      "          [ 0.0599,  0.2654,  0.1292]],\n",
      "\n",
      "         [[-0.1220, -0.2229, -0.1288],\n",
      "          [-0.3446, -0.2570, -0.1199],\n",
      "          [-0.0532,  0.0773,  0.1688]],\n",
      "\n",
      "         [[-0.2067, -0.1569,  0.0709],\n",
      "          [ 0.1021, -0.0654,  0.2164],\n",
      "          [ 0.0104,  0.1280,  0.3457]]],\n",
      "\n",
      "\n",
      "        [[[-0.2683, -0.1467, -0.1384],\n",
      "          [-0.1243,  0.1643, -0.2545],\n",
      "          [-0.2217, -0.2093, -0.4134]],\n",
      "\n",
      "         [[-0.0999,  0.2399,  0.1376],\n",
      "          [ 0.1466,  0.1076, -0.0800],\n",
      "          [ 0.0663, -0.1049, -0.1745]],\n",
      "\n",
      "         [[-0.1062,  0.1747,  0.2021],\n",
      "          [-0.0396,  0.0587,  0.1663],\n",
      "          [ 0.2437,  0.1327,  0.0421]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1658, -0.1141,  0.0476],\n",
      "          [-0.1681, -0.1933, -0.1895],\n",
      "          [ 0.1157,  0.0162, -0.2306]],\n",
      "\n",
      "         [[ 0.2075,  0.2097,  0.0747],\n",
      "          [ 0.0947,  0.0767,  0.1017],\n",
      "          [ 0.3196, -0.1195, -0.1265]],\n",
      "\n",
      "         [[ 0.1279,  0.1714,  0.1894],\n",
      "          [ 0.1840, -0.0114, -0.2595],\n",
      "          [ 0.0429, -0.2004, -0.3234]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.0539, -0.0881, -0.2034],\n",
      "          [ 0.0738,  0.0296, -0.2042],\n",
      "          [-0.0569,  0.1392,  0.1318]],\n",
      "\n",
      "         [[-0.0184, -0.1606, -0.0939],\n",
      "          [ 0.0114, -0.2093, -0.2773],\n",
      "          [ 0.0849,  0.1311, -0.1552]],\n",
      "\n",
      "         [[ 0.2848, -0.0233,  0.0562],\n",
      "          [ 0.4733,  0.2438,  0.0396],\n",
      "          [ 0.6161,  0.2066,  0.0273]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0463,  0.0632,  0.1623],\n",
      "          [-0.1719, -0.1760, -0.1384],\n",
      "          [-0.3191,  0.0698, -0.1842]],\n",
      "\n",
      "         [[-0.2984, -0.0988, -0.3063],\n",
      "          [-0.2416, -0.0025, -0.2990],\n",
      "          [ 0.0113,  0.0604, -0.1342]],\n",
      "\n",
      "         [[ 0.1628,  0.0187,  0.1898],\n",
      "          [ 0.2577,  0.1241,  0.1974],\n",
      "          [-0.0799,  0.0501,  0.0430]]],\n",
      "\n",
      "\n",
      "        [[[-0.2554,  0.2150, -0.0949],\n",
      "          [-0.2516, -0.2070,  0.0678],\n",
      "          [-0.2138, -0.0381,  0.0805]],\n",
      "\n",
      "         [[ 0.1283,  0.1984, -0.1090],\n",
      "          [-0.1264,  0.1364,  0.0155],\n",
      "          [ 0.2292,  0.1485,  0.1340]],\n",
      "\n",
      "         [[-0.1838,  0.2793, -0.1592],\n",
      "          [-0.0948, -0.0016, -0.0971],\n",
      "          [ 0.0860,  0.1770, -0.2278]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.1277, -0.1815,  0.0583,  0.1347,  0.0642,  0.2311, -0.0026, -0.0091,\n",
      "        -0.0532, -0.1716,  0.1248,  0.0802, -0.1613,  0.2013,  0.0188,  0.0940,\n",
      "        -0.0924, -0.0725,  0.0023, -0.1381, -0.1541, -0.0421, -0.0436,  0.3551,\n",
      "         0.0161, -0.2026,  0.0220, -0.0976, -0.2137,  0.0685, -0.0202,  0.1689,\n",
      "        -0.1304, -0.2282, -0.0829, -0.0449, -0.0917, -0.0433,  0.1423,  0.2290,\n",
      "         0.1476, -0.0760, -0.2398, -0.0043,  0.1886,  0.0395, -0.1232,  0.2959,\n",
      "        -0.0640, -0.2033,  0.0326,  0.0529,  0.1296,  0.0494, -0.0170,  0.0267,\n",
      "         0.0524, -0.0712, -0.0384, -0.2660,  0.1121,  0.0588, -0.1335,  0.1965],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1.1568, 0.7174, 0.8814, 0.9615, 0.8051, 0.7845, 1.2450, 0.8673, 1.1660,\n",
      "        0.7072, 0.8013, 0.5602, 0.5262, 0.7026, 0.8284, 0.7677, 0.6319, 0.8307,\n",
      "        0.5404, 1.1519, 0.4568, 0.9609, 1.5480, 1.0604, 0.6648, 0.5382, 1.4583,\n",
      "        1.4278, 1.7090, 0.6289, 0.9347, 0.7811, 1.0482, 1.4912, 1.2648, 0.7450,\n",
      "        1.0011, 0.5199, 0.6770, 0.7055, 1.0670, 0.7183, 0.7968, 0.7884, 0.8880,\n",
      "        1.2135, 0.8850, 0.9508, 0.7422, 0.7780, 0.6646, 0.9604, 0.9656, 0.9467,\n",
      "        0.5673, 0.8028, 0.6395, 1.0314, 1.0073, 1.4344, 0.9159, 0.6235, 0.6552,\n",
      "        0.9276], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.4156, -0.0205,  0.2710, -0.1572, -0.4984,  0.2761,  0.1462, -0.1169,\n",
      "        -0.1740, -0.1284, -0.2082, -0.5616, -0.0814, -0.3813, -0.2306, -0.4061,\n",
      "        -0.3627, -0.4019, -0.0748, -0.3558, -0.3553,  0.1104,  0.4092,  0.0790,\n",
      "        -0.0103, -0.2130, -0.0831, -0.0818, -0.0234, -0.5916, -0.2175, -0.1750,\n",
      "         0.2552, -0.1001,  0.1989, -0.3342, -0.0098, -0.4097, -0.1484, -0.4111,\n",
      "         0.2124, -0.4729, -0.0872, -0.1564, -0.1283, -0.1706, -0.1755,  0.1482,\n",
      "         0.1330, -0.4331, -0.5120, -0.1899, -0.5309,  0.2387, -0.2200, -0.1703,\n",
      "        -0.4196, -0.0959,  0.3346,  0.1229, -0.1081, -0.1425, -0.0274,  0.0081],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.1150,  0.1809,  0.1544],\n",
      "          [-0.0465, -0.0443, -0.0309],\n",
      "          [-0.0374, -0.0602, -0.0112]],\n",
      "\n",
      "         [[-0.1781, -0.1498, -0.0146],\n",
      "          [-0.0129,  0.0957,  0.1591],\n",
      "          [ 0.0911,  0.1254,  0.2811]],\n",
      "\n",
      "         [[-0.0923, -0.1018, -0.1282],\n",
      "          [-0.0253, -0.0967,  0.0191],\n",
      "          [ 0.0088,  0.0121,  0.2153]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0536, -0.0736, -0.0556],\n",
      "          [ 0.0236,  0.0755,  0.0334],\n",
      "          [ 0.0248,  0.0912,  0.0101]],\n",
      "\n",
      "         [[-0.0889, -0.0774, -0.0801],\n",
      "          [-0.0156,  0.0481,  0.0453],\n",
      "          [ 0.1808,  0.1585,  0.1429]],\n",
      "\n",
      "         [[-0.2308, -0.1281, -0.0214],\n",
      "          [-0.1665, -0.1262, -0.0134],\n",
      "          [ 0.0459,  0.1305,  0.1981]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0463, -0.0565, -0.2194],\n",
      "          [-0.1300, -0.1323, -0.2434],\n",
      "          [-0.1373, -0.1111, -0.0793]],\n",
      "\n",
      "         [[-0.0369,  0.1031,  0.0927],\n",
      "          [ 0.0664,  0.0961,  0.0577],\n",
      "          [ 0.0303,  0.0985,  0.0433]],\n",
      "\n",
      "         [[ 0.0509,  0.0068, -0.0438],\n",
      "          [ 0.1939,  0.1272,  0.0602],\n",
      "          [ 0.1543,  0.2007,  0.1294]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.1731,  0.0946,  0.1022],\n",
      "          [ 0.1222,  0.0629,  0.0994],\n",
      "          [ 0.0774,  0.0486, -0.0061]],\n",
      "\n",
      "         [[-0.1116,  0.0051, -0.0171],\n",
      "          [-0.0207,  0.0253, -0.0359],\n",
      "          [ 0.0437,  0.0150, -0.0415]],\n",
      "\n",
      "         [[-0.0159,  0.1281, -0.0077],\n",
      "          [-0.0162,  0.0868, -0.0478],\n",
      "          [ 0.0061,  0.0907, -0.0318]]],\n",
      "\n",
      "\n",
      "        [[[-0.0833, -0.1790, -0.1134],\n",
      "          [ 0.1285,  0.0648, -0.0109],\n",
      "          [ 0.0906,  0.1171,  0.0722]],\n",
      "\n",
      "         [[-0.0406,  0.2480,  0.0781],\n",
      "          [-0.0144,  0.1440,  0.0670],\n",
      "          [-0.1005,  0.1010, -0.0166]],\n",
      "\n",
      "         [[-0.0197,  0.0254,  0.0485],\n",
      "          [-0.0746,  0.0728,  0.0290],\n",
      "          [-0.2861, -0.0032, -0.0156]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0340, -0.0790, -0.1049],\n",
      "          [-0.0204,  0.0176, -0.0363],\n",
      "          [ 0.1092,  0.1203,  0.0973]],\n",
      "\n",
      "         [[-0.1260, -0.0391, -0.1396],\n",
      "          [ 0.0359,  0.1210,  0.0797],\n",
      "          [-0.0034,  0.1241, -0.0163]],\n",
      "\n",
      "         [[-0.3335, -0.0302, -0.1736],\n",
      "          [-0.0849,  0.1022, -0.0501],\n",
      "          [-0.0242,  0.1323, -0.0659]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.1149,  0.1600,  0.0280],\n",
      "          [-0.1857, -0.2544, -0.3036],\n",
      "          [ 0.0500,  0.0347,  0.0459]],\n",
      "\n",
      "         [[-0.1112, -0.0306,  0.1447],\n",
      "          [-0.0033,  0.0571,  0.2465],\n",
      "          [ 0.0972,  0.1159,  0.1750]],\n",
      "\n",
      "         [[-0.2111, -0.2349, -0.1684],\n",
      "          [ 0.0639, -0.0248,  0.1771],\n",
      "          [ 0.0749,  0.0330,  0.2437]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0379,  0.0751,  0.0125],\n",
      "          [ 0.0266,  0.0300,  0.0796],\n",
      "          [ 0.0741,  0.0512,  0.0737]],\n",
      "\n",
      "         [[-0.1906, -0.0698, -0.0750],\n",
      "          [-0.0047, -0.0131,  0.0827],\n",
      "          [ 0.0607,  0.0752,  0.0676]],\n",
      "\n",
      "         [[-0.2279, -0.0759,  0.1075],\n",
      "          [-0.2422, -0.1046,  0.0427],\n",
      "          [-0.0347,  0.1154,  0.1466]]],\n",
      "\n",
      "\n",
      "        [[[-0.2758, -0.2790, -0.3136],\n",
      "          [-0.3277, -0.3160, -0.2013],\n",
      "          [-0.4003, -0.3045, -0.1244]],\n",
      "\n",
      "         [[ 0.0840,  0.1430,  0.0768],\n",
      "          [ 0.1194,  0.1022,  0.1188],\n",
      "          [ 0.1452,  0.1187,  0.1207]],\n",
      "\n",
      "         [[ 0.2644,  0.1303,  0.1233],\n",
      "          [ 0.0702, -0.0425, -0.1019],\n",
      "          [ 0.1026, -0.0201, -0.1136]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0040,  0.0216,  0.0181],\n",
      "          [ 0.0156, -0.0097, -0.0128],\n",
      "          [-0.0867, -0.0318, -0.0546]],\n",
      "\n",
      "         [[ 0.0860,  0.1887,  0.1931],\n",
      "          [ 0.1490,  0.1362,  0.1256],\n",
      "          [ 0.0955,  0.1153,  0.1736]],\n",
      "\n",
      "         [[ 0.0925,  0.0840, -0.0013],\n",
      "          [ 0.0553,  0.0629, -0.0704],\n",
      "          [-0.1344, -0.1771, -0.2166]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1372,  0.0514,  0.0364],\n",
      "          [ 0.0577,  0.0020,  0.0016],\n",
      "          [ 0.0656, -0.0234, -0.1299]],\n",
      "\n",
      "         [[ 0.0947,  0.1086,  0.0376],\n",
      "          [ 0.0738,  0.0752,  0.0141],\n",
      "          [ 0.0064,  0.0191, -0.0283]],\n",
      "\n",
      "         [[-0.1435, -0.2199, -0.1998],\n",
      "          [-0.2180, -0.2301, -0.2165],\n",
      "          [-0.1817, -0.1450, -0.1022]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.2473, -0.1948, -0.1835],\n",
      "          [-0.2623, -0.2359, -0.2362],\n",
      "          [-0.2758, -0.2260, -0.2364]],\n",
      "\n",
      "         [[ 0.0841,  0.1002,  0.0887],\n",
      "          [ 0.0012,  0.0432, -0.0199],\n",
      "          [-0.0480, -0.0330, -0.0017]],\n",
      "\n",
      "         [[ 0.1182,  0.0650,  0.0247],\n",
      "          [ 0.0614,  0.0427,  0.0335],\n",
      "          [ 0.0037, -0.0373, -0.0866]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0030,  0.0309, -0.0457, -0.0216,  0.0422, -0.0196,  0.0310,  0.0271,\n",
      "         0.0240, -0.0204, -0.0031, -0.0014,  0.0327, -0.0306, -0.0101, -0.0049,\n",
      "         0.0273, -0.0045,  0.0118, -0.0327,  0.0073,  0.0099, -0.0313, -0.0092,\n",
      "         0.0379,  0.0053,  0.0424, -0.0430, -0.0450, -0.0009, -0.0378, -0.0095,\n",
      "         0.0204, -0.0333,  0.0263,  0.0660,  0.0350, -0.0299, -0.0469, -0.0108,\n",
      "         0.0030, -0.0205,  0.0225,  0.0647,  0.0008, -0.0057, -0.0334,  0.0391,\n",
      "        -0.0100,  0.0336,  0.0371,  0.0048, -0.0432,  0.0199,  0.0299,  0.0481,\n",
      "         0.0455, -0.0234, -0.0580, -0.0260, -0.0329, -0.0234, -0.0019,  0.0359],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1.1431, 1.0058, 1.3317, 0.9262, 1.3532, 0.9705, 0.9106, 0.8921, 0.9348,\n",
      "        0.9404, 0.8871, 0.9462, 1.2477, 0.8878, 0.9681, 1.2654, 0.7737, 1.1258,\n",
      "        1.0333, 0.9915, 0.9670, 0.9613, 0.9486, 0.9530, 0.9365, 0.9495, 0.9870,\n",
      "        0.8580, 1.1891, 0.7903, 0.9391, 0.9492, 1.2625, 0.9933, 1.0854, 1.2825,\n",
      "        0.9471, 1.0488, 0.9972, 1.0972, 1.0197, 0.9951, 0.9352, 1.2701, 1.1585,\n",
      "        0.8491, 0.9554, 1.2223, 1.0215, 1.2090, 1.2448, 1.1546, 0.9213, 0.9344,\n",
      "        0.9984, 0.8744, 0.9107, 0.8964, 0.9759, 0.8910, 0.9618, 1.0933, 0.8997,\n",
      "        0.9017], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.1598, -0.1151, -0.1245, -0.0743, -0.1671, -0.3023, -0.2734, -0.3060,\n",
      "        -0.1266, -0.1973, -0.2712, -0.3856, -0.0970, -0.2375, -0.1614, -0.0750,\n",
      "        -0.2517, -0.1139, -0.0664, -0.3170, -0.1891, -0.1648, -0.0664, -0.1066,\n",
      "        -0.0976,  0.0715, -0.0726, -0.3862, -0.0835,  0.0131, -0.0563, -0.0862,\n",
      "        -0.1252, -0.1189, -0.2140, -0.1577, -0.2825, -0.1350, -0.5739, -0.1372,\n",
      "        -0.3629, -0.0374, -0.3815, -0.2500, -0.2405, -0.2854, -0.1523, -0.1952,\n",
      "        -0.1417, -0.0957, -0.0008, -0.0893, -0.2570, -0.0325, -0.1035, -0.2414,\n",
      "        -0.1371, -0.4380, -0.0919, -0.2277, -0.1736, -0.2543, -0.2189, -0.1844],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 1.4852e-01,  7.7962e-02,  1.2694e-01],\n",
      "          [ 2.8021e-02,  1.7567e-01,  2.6899e-01],\n",
      "          [ 8.2322e-03,  1.3708e-01,  1.7495e-01]],\n",
      "\n",
      "         [[-1.7317e-01, -1.1531e-01, -2.0575e-02],\n",
      "          [-8.4782e-02,  6.7462e-02, -7.3985e-04],\n",
      "          [-1.1027e-02,  3.2948e-02, -2.5343e-02]],\n",
      "\n",
      "         [[-1.9165e-01, -2.9829e-02,  1.3329e-01],\n",
      "          [ 1.3506e-02,  1.7831e-01,  3.3060e-01],\n",
      "          [ 5.7352e-02,  6.1517e-02,  2.5075e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.7182e-02,  6.1134e-03,  1.2473e-01],\n",
      "          [-1.5183e-01, -7.0757e-03,  1.9788e-01],\n",
      "          [-1.0766e-01,  1.1788e-01,  2.1202e-01]],\n",
      "\n",
      "         [[-7.4983e-03, -1.7914e-02, -5.3119e-02],\n",
      "          [ 7.1295e-02,  2.5027e-02, -2.2146e-02],\n",
      "          [ 1.0819e-01,  4.2240e-02, -1.1799e-02]],\n",
      "\n",
      "         [[ 6.9913e-03,  8.0714e-02,  8.0281e-02],\n",
      "          [ 1.5316e-01,  1.3554e-01,  7.8990e-02],\n",
      "          [ 1.3086e-01,  1.1543e-01,  5.3252e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 6.4047e-02, -4.3832e-02, -2.8400e-02],\n",
      "          [-2.0885e-01, -2.9519e-01, -2.5981e-01],\n",
      "          [ 4.0668e-01,  2.8108e-01,  1.1661e-01]],\n",
      "\n",
      "         [[ 7.0127e-02, -3.6912e-02, -2.6157e-02],\n",
      "          [ 3.8595e-02, -2.7255e-03, -1.0753e-01],\n",
      "          [-3.7009e-02,  9.5877e-03, -7.2870e-02]],\n",
      "\n",
      "         [[-3.6933e-02,  8.5055e-03, -7.2176e-02],\n",
      "          [-2.6147e-03,  5.1009e-02,  1.6974e-01],\n",
      "          [ 7.7120e-03, -8.5480e-02,  8.0270e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.6334e-01,  4.4400e-02,  1.5656e-01],\n",
      "          [-5.7881e-02, -1.0415e-01, -1.7272e-01],\n",
      "          [ 9.7832e-02,  4.6786e-02, -1.7090e-02]],\n",
      "\n",
      "         [[-5.2147e-04, -6.2630e-02, -2.9246e-01],\n",
      "          [-1.7905e-03, -8.9921e-02, -3.1838e-01],\n",
      "          [ 2.2569e-02, -1.2327e-01, -2.3140e-01]],\n",
      "\n",
      "         [[ 9.2887e-02,  6.8338e-02, -5.5432e-02],\n",
      "          [-8.9843e-02, -1.8389e-02, -9.6073e-03],\n",
      "          [-8.6515e-02,  1.9728e-02,  3.0083e-02]]],\n",
      "\n",
      "\n",
      "        [[[-3.6964e-02,  6.5820e-02,  1.2277e-01],\n",
      "          [-6.5187e-02, -2.2058e-02, -1.3635e-02],\n",
      "          [-9.7256e-02, -2.4829e-01, -2.3341e-01]],\n",
      "\n",
      "         [[-2.1245e-01, -9.1722e-02,  7.8806e-03],\n",
      "          [-1.0447e-01, -8.7721e-02, -1.6466e-02],\n",
      "          [-1.7607e-01, -1.2789e-01, -1.3305e-01]],\n",
      "\n",
      "         [[-4.3679e-01, -4.0643e-01, -3.2639e-01],\n",
      "          [-2.0836e-01, -1.7544e-02, -4.9389e-02],\n",
      "          [-2.4580e-01, -1.3441e-01, -1.2317e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-8.3769e-02, -6.8873e-02,  9.1683e-02],\n",
      "          [-9.0618e-02, -9.6923e-02, -4.6890e-02],\n",
      "          [ 6.6207e-02, -3.4077e-02, -1.6477e-01]],\n",
      "\n",
      "         [[-2.1645e-01, -2.9682e-01, -2.8702e-01],\n",
      "          [-2.3485e-01, -3.0665e-01, -3.3288e-01],\n",
      "          [-1.6421e-01, -2.4946e-01, -3.1899e-01]],\n",
      "\n",
      "         [[ 3.0495e-02,  5.8400e-03, -3.2714e-02],\n",
      "          [ 6.4679e-02,  6.6299e-02, -4.0480e-03],\n",
      "          [ 7.4873e-02,  3.6746e-03, -4.2682e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 4.1402e-02, -1.2767e-01, -4.3951e-02],\n",
      "          [-1.3027e-02, -1.5742e-01, -1.4307e-01],\n",
      "          [ 2.8937e-01,  2.2505e-01,  8.7307e-02]],\n",
      "\n",
      "         [[ 1.9951e-02,  9.7763e-02,  4.5109e-02],\n",
      "          [-2.9274e-02,  7.7638e-03, -1.6847e-02],\n",
      "          [-9.4206e-02, -8.6872e-03, -1.1843e-01]],\n",
      "\n",
      "         [[ 1.3613e-01,  1.8570e-01, -1.6003e-01],\n",
      "          [ 3.3134e-01,  2.4897e-01,  1.0727e-01],\n",
      "          [ 3.2094e-01,  1.8364e-01,  1.4093e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.7335e-01, -5.8567e-02,  1.4336e-01],\n",
      "          [ 1.5933e-01,  6.3454e-02,  9.8769e-02],\n",
      "          [ 2.5065e-01,  1.5325e-01,  4.9431e-02]],\n",
      "\n",
      "         [[-1.1639e-02, -4.1695e-02, -2.6603e-01],\n",
      "          [ 4.9198e-02, -7.0598e-02, -2.6802e-01],\n",
      "          [ 1.2944e-02, -2.6312e-02, -1.3806e-01]],\n",
      "\n",
      "         [[ 8.1534e-02,  1.6543e-01,  1.0425e-01],\n",
      "          [-6.8691e-02, -9.2172e-03,  2.7418e-03],\n",
      "          [-2.9866e-02,  2.0865e-02,  3.5076e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 2.1326e-01,  3.1527e-02, -2.8911e-02],\n",
      "          [ 1.6314e-01,  3.3666e-02,  7.0781e-02],\n",
      "          [ 1.9608e-01,  1.9839e-01,  9.8009e-02]],\n",
      "\n",
      "         [[-5.7579e-02,  4.1000e-02, -3.5366e-02],\n",
      "          [ 3.4385e-02,  1.1449e-01,  3.6144e-02],\n",
      "          [-3.3660e-03,  6.0413e-02,  9.5318e-02]],\n",
      "\n",
      "         [[-3.4344e-01, -2.4311e-01, -5.2931e-01],\n",
      "          [ 4.3928e-02,  2.0615e-01,  5.5286e-02],\n",
      "          [-8.4929e-02,  1.0800e-02, -2.0658e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.3414e-01,  1.1682e-02, -1.1538e-02],\n",
      "          [ 3.1218e-01,  1.7032e-01,  1.7400e-01],\n",
      "          [ 9.7802e-02,  2.5180e-02,  8.7306e-02]],\n",
      "\n",
      "         [[-9.8248e-02,  3.0605e-02, -4.2798e-02],\n",
      "          [-4.8209e-02, -4.8416e-02, -5.1354e-02],\n",
      "          [ 7.0468e-02, -3.5888e-02, -9.5959e-02]],\n",
      "\n",
      "         [[-1.3585e-01, -7.0117e-02, -1.2010e-01],\n",
      "          [-7.9559e-02, -1.8568e-03, -1.1911e-02],\n",
      "          [ 5.0198e-02,  7.1233e-02,  3.4654e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 1.3990e-01,  1.9136e-01,  1.8205e-01],\n",
      "          [ 2.8374e-01,  3.8967e-01,  3.9519e-01],\n",
      "          [ 1.4259e-01,  2.1963e-01,  1.9304e-01]],\n",
      "\n",
      "         [[-3.2587e-02,  4.9065e-02,  1.1977e-01],\n",
      "          [-1.0444e-02,  2.5539e-02,  6.7800e-02],\n",
      "          [-2.4797e-02, -1.5279e-02,  4.8947e-02]],\n",
      "\n",
      "         [[-2.5375e-01, -1.5501e-01, -6.9011e-03],\n",
      "          [-7.9264e-04,  6.8480e-02,  1.2744e-01],\n",
      "          [-1.8763e-02, -1.0735e-02,  2.0464e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 7.5245e-02,  9.9215e-02,  7.9747e-02],\n",
      "          [ 2.1340e-01,  2.4593e-01,  3.2920e-01],\n",
      "          [ 1.5267e-01,  2.6376e-01,  2.6350e-01]],\n",
      "\n",
      "         [[-2.1109e-01, -1.6040e-01, -1.5562e-01],\n",
      "          [-9.7580e-02, -1.4563e-01, -1.7889e-01],\n",
      "          [-8.9759e-04, -6.2324e-02, -3.1333e-02]],\n",
      "\n",
      "         [[ 4.1047e-02,  3.3960e-04,  3.6020e-02],\n",
      "          [ 9.6987e-02,  9.9889e-03, -4.6481e-03],\n",
      "          [ 9.6136e-02,  1.1128e-02,  4.9107e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0111, -0.0362, -0.0134,  0.0070,  0.0198,  0.0221, -0.0205, -0.0270,\n",
      "         0.0064,  0.0415,  0.0272,  0.0394, -0.0203,  0.0451, -0.0031,  0.0281,\n",
      "        -0.0214, -0.0416, -0.0173,  0.0216,  0.0078,  0.0025, -0.0406, -0.0064,\n",
      "        -0.0104, -0.0061, -0.0273,  0.0362, -0.0023,  0.0262,  0.0183, -0.0090,\n",
      "        -0.0125,  0.0400, -0.0170,  0.0382,  0.0242,  0.0147,  0.0293,  0.0044,\n",
      "        -0.0169, -0.0060, -0.0230,  0.0172, -0.0241, -0.0171,  0.0067, -0.0037,\n",
      "         0.0092,  0.0081, -0.0401, -0.0262,  0.0222,  0.0248, -0.0335,  0.0183,\n",
      "        -0.0005, -0.0253,  0.0305, -0.0330, -0.0014, -0.0110,  0.0469, -0.0307,\n",
      "         0.0368, -0.0048,  0.0006, -0.0261, -0.0241, -0.0412,  0.0215, -0.0125,\n",
      "        -0.0288, -0.0218,  0.0132,  0.0317, -0.0277, -0.0201, -0.0283,  0.0003,\n",
      "         0.0351, -0.0275,  0.0026, -0.0310,  0.0236, -0.0144, -0.0296,  0.0109,\n",
      "        -0.0019,  0.0377,  0.0252, -0.0257,  0.0261,  0.0397, -0.0199, -0.0136,\n",
      "         0.0210,  0.0045, -0.0003,  0.0244, -0.0121,  0.0288,  0.0073, -0.0252,\n",
      "         0.0313,  0.0094, -0.0240,  0.0189,  0.0137,  0.0256,  0.0149, -0.0448,\n",
      "         0.0243,  0.0199, -0.0420, -0.0020, -0.0343, -0.0143,  0.0012, -0.0431,\n",
      "         0.0149, -0.0344,  0.0122,  0.0101, -0.0416,  0.0221, -0.0252,  0.0356],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.8210, 1.3261, 1.0139, 1.0014, 1.0057, 0.8920, 0.9267, 0.8777, 1.0359,\n",
      "        1.1922, 0.8267, 0.9781, 0.8812, 0.9574, 1.0617, 0.9666, 0.7036, 0.8440,\n",
      "        0.9417, 1.0318, 1.0423, 0.8883, 1.2040, 1.1558, 0.8960, 0.8933, 1.3576,\n",
      "        0.7596, 0.9929, 0.9520, 0.8799, 0.8563, 0.7147, 0.8512, 0.9533, 0.9129,\n",
      "        0.8404, 1.1047, 0.9755, 0.8679, 0.8343, 0.9964, 0.8361, 0.8598, 0.8578,\n",
      "        1.0740, 0.7246, 0.8868, 1.3620, 0.8553, 0.9037, 0.9018, 0.7985, 1.0767,\n",
      "        1.0531, 0.7939, 1.0896, 1.0573, 1.0465, 0.7606, 0.9095, 0.9494, 0.9704,\n",
      "        0.9266, 1.2445, 1.0453, 0.9223, 1.4145, 1.0005, 1.0865, 1.1423, 0.9834,\n",
      "        1.4414, 1.2262, 1.1875, 0.9577, 0.8115, 0.8448, 0.9117, 0.8146, 1.0447,\n",
      "        0.8823, 0.7870, 0.9301, 1.0345, 0.9767, 1.0307, 0.9395, 0.8113, 1.1772,\n",
      "        1.0420, 0.7981, 0.9345, 0.7178, 0.9199, 0.9343, 0.7968, 1.0511, 0.8487,\n",
      "        0.8405, 1.5302, 1.0444, 0.9085, 1.0203, 0.8636, 0.8496, 0.7879, 0.8089,\n",
      "        1.3127, 1.2472, 1.0043, 0.8109, 0.9476, 1.0700, 1.0162, 1.0826, 1.1735,\n",
      "        0.8586, 0.9556, 1.2964, 0.9260, 1.2231, 0.9792, 0.8259, 0.9350, 1.0612,\n",
      "        1.3131, 1.0876], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.2630,  0.0079, -0.1785, -0.2693, -0.3048, -0.1085, -0.2909, -0.0997,\n",
      "        -0.1808,  0.3168, -0.4784, -0.2646, -0.0497, -0.1724,  0.2199, -0.1539,\n",
      "        -0.3582, -0.2224, -0.1541, -0.3967,  0.0094, -0.2276,  0.4629,  0.1405,\n",
      "         0.0281,  0.0444,  0.3529, -0.2975, -0.2744, -0.1933, -0.0210, -0.1440,\n",
      "        -0.1978, -0.0752, -0.1613, -0.3837, -0.3170, -0.1970, -0.0241, -0.1939,\n",
      "        -0.1645, -0.1846, -0.2613, -0.1481, -0.1562, -0.3651, -0.1979, -0.0152,\n",
      "         0.5714, -0.0269, -0.3328, -0.3615, -0.0899, -0.2263,  0.0439, -0.4282,\n",
      "        -0.1700, -0.1125, -0.2881, -0.2879, -0.1573, -0.2293, -0.4681, -0.1305,\n",
      "         0.1819, -0.2209, -0.2461,  0.2692,  0.0551, -0.4869, -0.1993,  0.0039,\n",
      "         0.2626,  0.0953,  0.0845, -0.4260, -0.1792, -0.3553, -0.2753, -0.0538,\n",
      "        -0.1379, -0.1663, -0.1333, -0.3302, -0.0168, -0.0921, -0.0581, -0.0491,\n",
      "        -0.3562,  0.1686,  0.0172, -0.4457,  0.0254, -0.3492,  0.1100, -0.2880,\n",
      "        -0.1076, -0.1294, -0.3216, -0.2083,  0.3512, -0.0631,  0.0955, -0.0435,\n",
      "        -0.2379, -0.2105, -0.2015, -0.1937,  0.5775,  0.0866, -0.1707, -0.2165,\n",
      "         0.0047, -0.0818, -0.2566, -0.2522,  0.0165,  0.0419, -0.3668,  0.2044,\n",
      "        -0.0833,  0.2581,  0.0325,  0.0088, -0.2494, -0.1853,  0.6744,  0.1345],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-1.0975e-01,  9.8568e-02,  1.5499e-01],\n",
      "          [ 2.1832e-02,  1.5483e-01,  1.8114e-01],\n",
      "          [-9.7641e-02, -4.4766e-02, -1.0350e-03]],\n",
      "\n",
      "         [[-1.0143e-01, -9.6702e-02,  4.9442e-02],\n",
      "          [-2.8693e-02, -1.3382e-01, -4.5466e-02],\n",
      "          [-1.8946e-02,  6.3203e-02,  1.2503e-01]],\n",
      "\n",
      "         [[-1.9142e-01, -8.6642e-02,  3.4059e-02],\n",
      "          [-5.4999e-02,  3.7306e-02,  1.3055e-01],\n",
      "          [ 6.0128e-02,  1.0263e-01,  1.1153e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-8.9758e-02, -4.8683e-02,  9.3139e-02],\n",
      "          [ 2.2155e-03, -3.5249e-04,  3.6617e-02],\n",
      "          [ 3.9310e-02,  1.0360e-01,  2.2126e-01]],\n",
      "\n",
      "         [[-1.1582e-01, -2.0919e-02,  2.1678e-01],\n",
      "          [-3.4103e-02,  1.7488e-02,  1.4522e-01],\n",
      "          [-1.3299e-01,  7.5381e-02,  2.6206e-01]],\n",
      "\n",
      "         [[-4.3686e-01, -3.7820e-01, -1.8487e-01],\n",
      "          [-2.9843e-01, -2.1581e-01, -6.8069e-02],\n",
      "          [-2.7209e-01, -1.9716e-01, -6.6781e-02]]],\n",
      "\n",
      "\n",
      "        [[[-4.9977e-02, -6.4966e-02, -4.6453e-02],\n",
      "          [ 4.5613e-03, -9.4180e-03, -5.1915e-02],\n",
      "          [ 9.8672e-02,  9.9072e-02, -3.3114e-02]],\n",
      "\n",
      "         [[ 3.0194e-01,  3.1567e-01,  2.8155e-01],\n",
      "          [ 2.2122e-01,  1.6143e-01,  2.3926e-02],\n",
      "          [-3.4164e-01, -3.3526e-01, -2.3067e-01]],\n",
      "\n",
      "         [[-1.5773e-01, -9.5263e-02, -3.0247e-02],\n",
      "          [ 1.0301e-02,  7.0975e-02,  1.0567e-01],\n",
      "          [ 1.4880e-01,  2.1335e-01,  1.6009e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 9.1101e-02,  9.2372e-02,  6.6025e-02],\n",
      "          [-3.9509e-02, -7.6852e-02, -2.2695e-02],\n",
      "          [-3.6829e-01, -1.3650e-01,  1.2301e-02]],\n",
      "\n",
      "         [[ 2.2942e-01,  2.9757e-01,  2.1652e-01],\n",
      "          [ 1.9757e-01,  1.4749e-01,  5.0904e-02],\n",
      "          [-4.2812e-01, -4.4438e-01, -3.3648e-01]],\n",
      "\n",
      "         [[ 1.8863e-01,  8.8925e-02,  6.3470e-02],\n",
      "          [ 7.9336e-02,  6.9362e-02,  2.6758e-02],\n",
      "          [ 1.6715e-02, -1.2422e-02, -1.2805e-01]]],\n",
      "\n",
      "\n",
      "        [[[-2.9497e-01, -1.1308e-01, -1.1526e-01],\n",
      "          [ 5.3848e-03,  1.9136e-01,  1.0333e-01],\n",
      "          [ 1.6621e-01,  2.6649e-01,  6.7164e-02]],\n",
      "\n",
      "         [[-5.4209e-02, -5.4205e-02, -3.9039e-02],\n",
      "          [-7.7037e-02, -4.7965e-02, -4.7603e-02],\n",
      "          [ 9.9461e-03, -6.7066e-02, -4.9292e-02]],\n",
      "\n",
      "         [[-2.3546e-01, -1.8384e-01, -2.0967e-01],\n",
      "          [-7.7858e-02, -4.3044e-02, -1.5213e-02],\n",
      "          [ 3.1252e-03,  6.7950e-03,  8.6670e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.7294e-01, -6.1936e-02, -1.2661e-01],\n",
      "          [ 4.8559e-02,  1.4336e-02, -1.0574e-01],\n",
      "          [ 1.4138e-01,  8.0266e-02,  1.8317e-03]],\n",
      "\n",
      "         [[-2.3663e-01, -2.6163e-01, -1.6328e-01],\n",
      "          [-4.9844e-02, -5.8746e-04, -2.8070e-02],\n",
      "          [-6.9919e-02, -2.7263e-02, -1.1049e-01]],\n",
      "\n",
      "         [[-2.2039e-01, -1.0710e-01, -1.1156e-01],\n",
      "          [ 3.4823e-02,  1.5889e-01,  1.5239e-01],\n",
      "          [ 1.8410e-01,  2.6207e-01,  1.9661e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 1.0598e-01,  1.1682e-01,  2.2350e-02],\n",
      "          [ 1.2372e-02,  1.7155e-02, -3.5856e-02],\n",
      "          [ 4.8096e-02,  5.8937e-02, -5.0412e-03]],\n",
      "\n",
      "         [[-1.7662e-01,  2.6518e-01,  1.4287e-01],\n",
      "          [ 9.1261e-02,  3.5298e-01,  3.0942e-01],\n",
      "          [-3.2458e-01,  1.2355e-01,  5.1279e-02]],\n",
      "\n",
      "         [[-3.7565e-01, -3.8403e-01, -3.5770e-01],\n",
      "          [-3.0092e-01, -2.8572e-01, -2.5459e-01],\n",
      "          [-2.5069e-01, -2.0013e-01, -9.3733e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-8.5109e-02,  9.7122e-02,  1.8090e-01],\n",
      "          [-8.3134e-02,  7.2535e-02,  1.6896e-01],\n",
      "          [-2.1329e-01,  7.9824e-02,  1.4233e-01]],\n",
      "\n",
      "         [[-7.7938e-02,  1.3319e-01,  2.5890e-01],\n",
      "          [ 8.0562e-02,  2.8707e-01,  3.9667e-01],\n",
      "          [-1.7831e-01,  6.1044e-02,  8.0829e-02]],\n",
      "\n",
      "         [[ 7.5707e-02,  6.4625e-02,  3.3723e-02],\n",
      "          [-2.2865e-04, -3.2974e-02,  1.6841e-02],\n",
      "          [ 2.0426e-02, -6.6786e-02, -4.3822e-02]]],\n",
      "\n",
      "\n",
      "        [[[-7.7683e-02, -7.3559e-02,  1.8579e-03],\n",
      "          [-2.0962e-02,  7.4690e-02,  7.5549e-02],\n",
      "          [ 1.1845e-02,  1.0556e-01, -1.9360e-02]],\n",
      "\n",
      "         [[ 2.6446e-01, -6.7852e-02, -2.6683e-01],\n",
      "          [ 5.8895e-02, -1.8395e-01, -2.2201e-01],\n",
      "          [ 3.2755e-02, -2.9190e-01, -3.3699e-01]],\n",
      "\n",
      "         [[ 6.6710e-02,  2.8154e-02,  2.0587e-02],\n",
      "          [ 1.5361e-01,  2.0499e-02, -3.1137e-02],\n",
      "          [ 7.9775e-02, -6.3031e-02, -1.1227e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3373e-01, -4.6539e-01, -4.0853e-01],\n",
      "          [-2.0130e-01, -4.4285e-01, -3.6483e-01],\n",
      "          [ 1.9551e-01, -7.4814e-02, -6.2058e-02]],\n",
      "\n",
      "         [[ 1.5139e-01,  1.3115e-01,  7.4547e-02],\n",
      "          [ 1.0837e-01,  2.9194e-01,  2.3317e-01],\n",
      "          [ 1.0810e-01,  1.2586e-01, -1.4834e-01]],\n",
      "\n",
      "         [[ 2.9877e-01,  1.6424e-01,  1.7008e-02],\n",
      "          [ 2.2591e-01,  2.1756e-01,  1.3807e-01],\n",
      "          [ 1.2644e-01,  1.2216e-01, -2.2379e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.5639e-01, -2.1746e-01,  2.3504e-02],\n",
      "          [-1.7799e-01,  2.4689e-02,  2.0996e-01],\n",
      "          [-3.0366e-02,  7.2768e-02,  9.6908e-02]],\n",
      "\n",
      "         [[-2.0874e-02,  2.6982e-01,  2.4361e-01],\n",
      "          [-3.3883e-02,  3.3118e-01,  6.9658e-02],\n",
      "          [ 1.0346e-01,  2.3161e-01, -1.1708e-01]],\n",
      "\n",
      "         [[-1.5966e-01, -1.7088e-01, -2.4791e-02],\n",
      "          [-2.7984e-02, -1.0988e-01,  7.3817e-02],\n",
      "          [-5.1670e-02, -9.3160e-02,  6.3642e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.8499e-02,  1.3014e-01,  5.0184e-02],\n",
      "          [ 1.5238e-01,  7.9397e-02, -5.8795e-02],\n",
      "          [ 1.1133e-01,  1.3866e-01, -2.8603e-02]],\n",
      "\n",
      "         [[-3.9997e-01, -2.9213e-01, -5.6526e-02],\n",
      "          [-1.2514e-01,  3.1881e-02,  1.7074e-01],\n",
      "          [ 8.1545e-02,  1.7011e-01,  1.6606e-01]],\n",
      "\n",
      "         [[-1.7120e-01, -3.2988e-01, -1.3345e-01],\n",
      "          [-1.1493e-01, -6.9883e-02,  7.0015e-02],\n",
      "          [ 8.7608e-02,  1.9593e-01,  1.6738e-01]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0140,  0.0210,  0.0036, -0.0001, -0.0229,  0.0093,  0.0086,  0.0118,\n",
      "         0.0148,  0.0070,  0.0092,  0.0036,  0.0243, -0.0111, -0.0067,  0.0216,\n",
      "         0.0281, -0.0186, -0.0248, -0.0179,  0.0018, -0.0270, -0.0069,  0.0270,\n",
      "         0.0234, -0.0118, -0.0186, -0.0246,  0.0006, -0.0213,  0.0130,  0.0016,\n",
      "         0.0207, -0.0193,  0.0116, -0.0284,  0.0211,  0.0078, -0.0122,  0.0171,\n",
      "         0.0226,  0.0262, -0.0043, -0.0215,  0.0295,  0.0122, -0.0030,  0.0138,\n",
      "         0.0053, -0.0105,  0.0051,  0.0095,  0.0194,  0.0044,  0.0216,  0.0072,\n",
      "        -0.0278, -0.0104,  0.0048,  0.0115, -0.0204, -0.0267, -0.0225, -0.0210,\n",
      "        -0.0146, -0.0258, -0.0271, -0.0126,  0.0111,  0.0220, -0.0073, -0.0072,\n",
      "        -0.0214,  0.0028, -0.0040,  0.0202, -0.0082,  0.0124,  0.0319, -0.0281,\n",
      "        -0.0125, -0.0302,  0.0011, -0.0041,  0.0191, -0.0175, -0.0123,  0.0269,\n",
      "         0.0038,  0.0057,  0.0166, -0.0108, -0.0048,  0.0075, -0.0270, -0.0071,\n",
      "         0.0216,  0.0051, -0.0100,  0.0230,  0.0024, -0.0148, -0.0213,  0.0186,\n",
      "         0.0108, -0.0078, -0.0169, -0.0208, -0.0253,  0.0162,  0.0173, -0.0001,\n",
      "        -0.0201, -0.0221,  0.0105,  0.0119,  0.0077, -0.0124, -0.0120, -0.0130,\n",
      "         0.0125,  0.0078,  0.0295,  0.0107, -0.0255, -0.0280,  0.0011, -0.0150],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.6823, 1.4300, 1.1744, 0.7619, 1.2339, 1.0661, 0.8293, 1.0567, 0.9092,\n",
      "        1.3144, 0.6449, 0.8716, 0.9072, 0.8837, 0.9178, 1.0681, 0.9781, 0.8858,\n",
      "        0.7882, 0.8634, 0.8763, 1.1155, 0.9484, 1.1062, 0.9073, 0.7888, 1.2448,\n",
      "        0.8531, 0.7985, 1.0690, 1.1397, 1.2014, 1.1885, 0.8297, 0.9012, 1.0593,\n",
      "        0.9857, 0.7980, 0.9237, 1.0870, 1.0407, 0.7946, 0.6184, 0.9839, 0.8933,\n",
      "        1.3318, 0.6520, 0.7044, 1.0494, 1.3998, 0.9346, 0.8559, 0.7328, 1.0962,\n",
      "        1.1554, 1.1993, 1.0613, 0.5959, 0.9504, 0.9221, 0.7754, 0.7361, 1.0371,\n",
      "        1.1360, 1.2724, 0.9740, 0.9549, 0.7438, 0.8032, 0.9887, 0.8837, 0.7971,\n",
      "        0.7867, 0.8837, 1.2199, 1.1195, 0.8114, 1.2290, 1.0396, 0.9338, 0.8467,\n",
      "        0.9942, 1.1563, 1.3486, 0.9839, 1.0038, 1.0430, 0.9483, 0.9049, 1.0463,\n",
      "        1.1908, 0.8840, 0.9155, 0.8525, 1.1399, 0.9226, 1.0179, 1.0934, 0.9694,\n",
      "        0.9363, 0.8073, 0.9181, 0.8842, 1.0412, 0.8399, 1.3173, 0.9835, 0.9320,\n",
      "        1.1162, 0.7818, 1.0865, 0.6810, 0.8553, 0.8764, 0.8588, 0.8872, 0.7633,\n",
      "        0.9283, 1.0217, 0.8722, 0.9985, 1.1230, 0.9562, 1.0577, 1.0479, 0.9387,\n",
      "        0.8651, 1.4570], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-6.8757e-02, -1.1531e-01,  1.2450e-02, -4.3971e-01, -3.1222e-02,\n",
      "         1.7276e-01,  1.1827e-01,  4.1448e-04, -1.7871e-01,  5.3905e-03,\n",
      "        -3.3426e-01, -2.2959e-01, -2.0311e-01, -3.3523e-01, -1.9143e-01,\n",
      "        -2.5002e-01,  8.4495e-02, -1.0377e-01, -3.2164e-01, -5.0378e-02,\n",
      "        -2.4156e-01,  1.7304e-01, -3.0451e-01, -9.2180e-02, -8.4239e-02,\n",
      "        -2.2991e-01,  2.0453e-01, -3.0314e-01, -2.7863e-01, -3.4798e-02,\n",
      "         8.3739e-02,  2.0281e-01, -1.6417e-01, -4.0987e-01, -1.5836e-01,\n",
      "        -1.5719e-01, -1.2098e-01, -4.2182e-01, -6.6396e-02, -3.1680e-02,\n",
      "        -2.0883e-02, -2.2970e-01, -1.5762e-01, -1.9393e-01, -9.4639e-02,\n",
      "         2.0652e-01, -1.4823e-01, -2.7488e-02,  1.4161e-02,  2.9002e-01,\n",
      "        -1.8885e-01, -2.7495e-01, -5.3939e-02,  1.0273e-01, -4.4763e-02,\n",
      "        -1.7941e-01, -1.6430e-01, -1.6738e-01, -5.1522e-02,  2.0630e-02,\n",
      "        -4.6706e-01, -4.2390e-01, -3.4173e-01, -1.2991e-01, -6.1270e-02,\n",
      "        -2.6821e-01, -3.9500e-01, -3.0286e-01, -2.4662e-01,  5.5657e-02,\n",
      "        -4.8475e-02, -1.9287e-01, -2.3008e-01, -2.8600e-01,  4.4176e-02,\n",
      "         7.3387e-02, -1.2559e-01,  9.3643e-02, -9.4681e-02, -1.7069e-01,\n",
      "        -3.1935e-01, -1.8833e-01, -5.0609e-02, -1.6392e-01,  6.0291e-02,\n",
      "         6.5435e-02,  1.8521e-02, -4.7548e-02, -1.3262e-01, -7.1205e-02,\n",
      "        -1.1631e-02, -2.0973e-01, -1.7720e-01, -2.0855e-01,  9.0547e-02,\n",
      "         2.9170e-02, -7.2439e-02, -7.7479e-02, -3.7683e-02, -2.1969e-01,\n",
      "        -3.3149e-01, -1.3544e-01, -2.6662e-01, -2.9930e-01, -3.6775e-01,\n",
      "        -1.6637e-01, -9.7127e-02, -2.8107e-01, -1.3184e-01, -2.6444e-01,\n",
      "        -1.1968e-01, -7.6324e-02, -8.2204e-02, -1.0652e-01, -3.8488e-01,\n",
      "        -6.7952e-02, -1.0745e-01, -1.2055e-01, -3.8280e-02, -2.0577e-01,\n",
      "        -1.0931e-01, -9.8245e-02, -1.3159e-01, -7.2472e-02,  2.9750e-01,\n",
      "        -9.7628e-02, -2.0488e-01,  1.2574e-01], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-4.4358e-01, -1.1602e-01, -1.2804e-02],\n",
      "          [-2.9738e-01, -7.3104e-02, -8.9921e-03],\n",
      "          [-3.8369e-02,  3.6245e-02,  2.1044e-01]],\n",
      "\n",
      "         [[ 1.5362e-01,  4.5806e-02,  6.4631e-02],\n",
      "          [ 1.5941e-01,  4.7544e-02,  3.9134e-02],\n",
      "          [-7.2049e-03, -1.1824e-01, -2.7957e-01]],\n",
      "\n",
      "         [[-4.7035e-02, -2.0130e-02, -3.4302e-02],\n",
      "          [-1.9002e-01, -1.3222e-01,  1.5712e-02],\n",
      "          [-1.3746e-01, -8.9944e-02, -1.8496e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.4866e-01,  4.6028e-02, -2.4651e-03],\n",
      "          [ 1.9083e-01,  3.1203e-02, -5.5708e-03],\n",
      "          [ 1.4881e-01,  1.6684e-02, -9.7770e-02]],\n",
      "\n",
      "         [[ 1.5964e-01,  2.5693e-01,  8.0679e-02],\n",
      "          [-6.2550e-04,  8.3722e-02,  1.1411e-02],\n",
      "          [-8.0524e-02, -1.2230e-01, -6.3448e-02]],\n",
      "\n",
      "         [[ 2.7746e-01,  1.2810e-01, -4.2267e-02],\n",
      "          [ 1.7421e-01,  3.6004e-02, -6.4471e-03],\n",
      "          [ 3.0302e-01,  1.8557e-01, -1.2157e-01]]],\n",
      "\n",
      "\n",
      "        [[[-4.9923e-02,  1.3902e-01, -7.7057e-03],\n",
      "          [ 5.4525e-02,  1.1755e-01, -3.4116e-02],\n",
      "          [ 1.6827e-02, -3.2696e-02, -2.7556e-02]],\n",
      "\n",
      "         [[-2.5702e-02, -1.6175e-01, -1.6298e-01],\n",
      "          [-1.5135e-01, -2.5425e-01, -3.8638e-01],\n",
      "          [-2.0377e-01, -1.9475e-01, -1.9079e-01]],\n",
      "\n",
      "         [[-1.6428e-02, -2.3460e-01, -2.5825e-01],\n",
      "          [-4.9613e-03, -1.1114e-01, -1.0472e-01],\n",
      "          [ 1.6067e-01, -4.2310e-02,  8.7649e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.3177e-02, -4.2506e-02, -1.3975e-02],\n",
      "          [ 1.7894e-01, -8.2700e-02, -7.1576e-02],\n",
      "          [ 3.2580e-02, -2.5445e-01, -1.0717e-01]],\n",
      "\n",
      "         [[-3.7299e-02,  8.2364e-02, -1.1955e-02],\n",
      "          [-3.0529e-02,  2.4230e-02, -9.8593e-02],\n",
      "          [ 1.9230e-02, -2.4579e-02, -1.2153e-01]],\n",
      "\n",
      "         [[-4.6967e-02, -1.2016e-01, -2.2929e-01],\n",
      "          [-1.0175e-01, -2.7321e-01, -5.1930e-02],\n",
      "          [-4.6648e-02, -2.5846e-01,  3.5929e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 4.6913e-04,  4.7275e-02, -1.2504e-01],\n",
      "          [-2.0731e-02, -9.9785e-03, -6.1154e-02],\n",
      "          [-1.7473e-02, -1.8300e-02, -3.2894e-02]],\n",
      "\n",
      "         [[-3.8026e-01, -2.1723e-01, -3.2118e-01],\n",
      "          [-2.0054e-01, -1.9695e-01, -2.3463e-01],\n",
      "          [-3.0169e-02,  7.3667e-03,  3.8581e-02]],\n",
      "\n",
      "         [[-1.6560e-01, -1.4087e-01, -1.4098e-01],\n",
      "          [ 1.5382e-01,  2.5711e-01,  1.8868e-01],\n",
      "          [-1.8769e-01, -1.0536e-01, -1.2340e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.5135e-01, -5.6539e-02,  6.9344e-02],\n",
      "          [-4.3501e-02,  2.4482e-02,  1.1385e-01],\n",
      "          [-1.8856e-01, -6.7648e-02,  3.9203e-02]],\n",
      "\n",
      "         [[-1.6728e-01, -5.9335e-02, -4.8026e-02],\n",
      "          [-6.2493e-02,  8.3954e-02,  1.4278e-01],\n",
      "          [-6.9828e-02,  7.3589e-02,  6.1623e-02]],\n",
      "\n",
      "         [[-3.5996e-01, -9.6139e-02,  1.8739e-01],\n",
      "          [-8.3422e-02,  2.5778e-01,  3.8356e-01],\n",
      "          [-1.8377e-01,  1.9388e-01,  2.0464e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 2.2739e-01,  1.0086e-01, -5.9348e-02],\n",
      "          [ 7.3645e-03, -4.4966e-02, -8.6541e-02],\n",
      "          [-8.8416e-02, -1.7860e-01, -9.0662e-02]],\n",
      "\n",
      "         [[ 4.1298e-02, -1.2229e-01, -1.9255e-01],\n",
      "          [-1.6606e-01, -1.9624e-01, -1.6316e-01],\n",
      "          [ 1.6446e-01,  7.2553e-02,  2.4022e-02]],\n",
      "\n",
      "         [[-1.4600e-01,  6.3524e-02,  2.5586e-02],\n",
      "          [-6.1774e-02,  6.4177e-02, -1.2840e-02],\n",
      "          [-1.0917e-01, -1.0970e-01, -2.2060e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.7767e-01, -5.7515e-02,  1.6864e-01],\n",
      "          [-8.7648e-02,  2.2626e-02,  1.5049e-01],\n",
      "          [ 6.0015e-02,  1.2424e-01,  1.5080e-01]],\n",
      "\n",
      "         [[ 6.7489e-02,  1.1173e-01,  2.3408e-01],\n",
      "          [-1.4614e-02,  7.2300e-02,  8.9232e-02],\n",
      "          [ 3.8657e-02,  5.7551e-02,  5.2673e-02]],\n",
      "\n",
      "         [[-4.8954e-01,  1.5817e-01,  4.1787e-01],\n",
      "          [-2.5172e-01,  1.8401e-01,  3.5315e-01],\n",
      "          [-2.5435e-01, -5.5986e-02, -2.2519e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.0133e-01, -1.2076e-01,  6.1535e-02],\n",
      "          [ 6.1114e-02,  1.2125e-01,  1.0338e-02],\n",
      "          [ 1.4201e-01, -5.0680e-02, -2.8662e-01]],\n",
      "\n",
      "         [[ 1.8794e-01,  1.1893e-01, -2.9223e-02],\n",
      "          [-8.9869e-02,  4.2094e-03, -9.7847e-02],\n",
      "          [ 1.0549e-01, -1.3689e-02, -1.8432e-01]],\n",
      "\n",
      "         [[ 4.1908e-02, -5.4052e-02, -1.6118e-01],\n",
      "          [ 5.9259e-02, -1.2017e-01, -9.3691e-02],\n",
      "          [ 3.0097e-01,  7.8557e-02, -2.8337e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.4589e-02,  2.0477e-02,  6.9584e-02],\n",
      "          [ 1.2424e-02,  5.1344e-02, -1.6477e-02],\n",
      "          [-1.4323e-01, -1.1246e-01, -1.2547e-01]],\n",
      "\n",
      "         [[-7.3349e-02, -5.9223e-02, -8.4648e-03],\n",
      "          [ 1.0564e-01,  4.1931e-02, -1.1254e-01],\n",
      "          [ 3.0839e-01,  1.4242e-01, -2.0441e-01]],\n",
      "\n",
      "         [[ 2.5200e-01,  1.6830e-02, -9.0851e-02],\n",
      "          [-7.3583e-03, -3.4706e-01, -3.3979e-01],\n",
      "          [ 2.0791e-01,  4.3009e-02, -3.0374e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.4734e-01,  2.1527e-02, -7.8870e-02],\n",
      "          [-1.8003e-03,  6.0904e-02, -9.0073e-02],\n",
      "          [-8.9489e-02, -1.1358e-01, -9.0190e-02]],\n",
      "\n",
      "         [[ 8.6795e-02, -5.4552e-02,  5.8930e-02],\n",
      "          [-1.7358e-02, -1.8886e-01, -2.9209e-01],\n",
      "          [-2.8873e-01, -4.6258e-01, -2.9814e-01]],\n",
      "\n",
      "         [[-2.0391e-02, -5.1552e-02, -3.6090e-02],\n",
      "          [-5.2889e-02, -1.9785e-01, -5.0081e-02],\n",
      "          [ 5.9867e-02,  4.5359e-02,  2.2095e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.7188e-01, -1.1844e-01, -4.2682e-02],\n",
      "          [-1.2510e-01, -1.8982e-01, -2.2666e-01],\n",
      "          [-1.3076e-01, -1.9298e-01, -1.1144e-01]],\n",
      "\n",
      "         [[-1.0895e-01,  1.9112e-01,  9.8995e-02],\n",
      "          [ 6.6842e-02,  9.3125e-02,  5.6225e-02],\n",
      "          [ 1.8187e-01,  1.4411e-02,  1.5530e-02]],\n",
      "\n",
      "         [[ 8.2077e-02, -1.4673e-02, -8.3353e-02],\n",
      "          [-6.9197e-02, -1.9975e-01, -6.0985e-02],\n",
      "          [-6.7275e-02, -1.3199e-02,  2.2261e-01]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-8.6824e-03, -4.8270e-03,  2.2600e-02, -1.9733e-02,  1.6405e-02,\n",
      "        -9.8734e-03, -1.5418e-02,  2.7110e-02, -6.9139e-05,  2.9186e-02,\n",
      "        -1.6006e-02,  6.8262e-03,  9.2897e-03,  2.5791e-03,  1.6714e-02,\n",
      "        -7.5817e-03,  1.3083e-02,  3.3701e-03, -4.1239e-04, -1.2214e-02,\n",
      "         2.2123e-03, -4.8038e-03, -2.1261e-03,  5.5221e-03,  3.0222e-03,\n",
      "        -5.0791e-03, -2.6095e-02, -4.2184e-04,  7.8787e-03,  2.8511e-02,\n",
      "         2.4659e-02,  2.8181e-02, -4.0031e-03, -2.7840e-02,  9.4234e-03,\n",
      "         2.6705e-02,  1.9861e-02,  1.8985e-02, -1.2972e-02, -2.2643e-02,\n",
      "        -5.9772e-03, -2.1505e-02, -2.6549e-04,  1.6558e-02, -9.9443e-03,\n",
      "        -2.4507e-04,  9.6972e-03,  1.4007e-02, -2.8099e-02, -1.7069e-02,\n",
      "         2.3904e-02, -2.4859e-02, -6.9981e-03, -2.3671e-02,  1.3788e-02,\n",
      "         2.5938e-02,  2.9004e-02,  1.3472e-02, -2.4342e-02, -2.8153e-02,\n",
      "        -6.8044e-03, -2.8126e-02, -1.7839e-02,  2.7783e-02, -2.3614e-02,\n",
      "         2.5319e-02,  1.5947e-02, -8.1077e-03,  1.4422e-02, -1.2035e-02,\n",
      "        -1.2948e-02, -1.6899e-02, -4.6880e-03,  1.7720e-02,  2.8117e-02,\n",
      "         9.5282e-03, -1.4014e-02, -1.3653e-02,  1.6873e-02,  4.9783e-03,\n",
      "         3.1423e-03, -5.3170e-03, -2.7521e-02,  2.7719e-02,  6.9510e-03,\n",
      "        -1.1063e-02,  2.3124e-02, -2.6830e-02, -1.8895e-02,  1.9039e-02,\n",
      "         1.5130e-03,  3.9335e-03,  2.3599e-02, -2.7413e-02, -2.3648e-02,\n",
      "         5.0667e-03,  2.8706e-02, -1.0948e-02,  5.7575e-03,  2.0747e-02,\n",
      "         1.4095e-03,  1.2721e-02, -2.3582e-02, -2.0094e-04,  2.5349e-03,\n",
      "        -4.2046e-03, -8.5272e-03,  2.2172e-02,  1.2256e-02, -6.4063e-03,\n",
      "        -3.6062e-03, -6.9497e-03, -1.4061e-02,  1.1972e-03, -2.2285e-02,\n",
      "         2.3662e-04,  1.8573e-02, -7.5747e-03, -8.1514e-03, -2.0308e-02,\n",
      "         1.1148e-02, -8.2278e-03,  2.4967e-02, -1.9451e-03, -1.7227e-02,\n",
      "         2.4261e-02,  6.7847e-03, -2.8955e-02,  3.9523e-03, -9.4914e-03,\n",
      "        -2.0343e-02,  2.8551e-02, -4.3656e-04,  1.2876e-02, -1.4830e-02,\n",
      "         2.0594e-02,  1.6225e-02,  8.6796e-03, -1.7095e-02, -2.2698e-02,\n",
      "         2.3158e-02, -3.9551e-04, -7.1950e-03, -5.8654e-03, -1.9895e-02,\n",
      "         1.9529e-02, -1.8177e-02, -2.6791e-02, -1.3988e-03, -7.1485e-03,\n",
      "        -4.0168e-03,  9.2640e-03, -1.4981e-02,  5.6111e-03,  2.6790e-02,\n",
      "        -1.3422e-02,  7.2216e-03,  1.6212e-02,  5.1138e-03, -6.8578e-03,\n",
      "         1.6664e-02,  8.8914e-03, -9.3503e-04, -7.0827e-04, -1.7362e-02,\n",
      "        -1.8731e-02,  2.2980e-02,  1.0151e-02, -2.7663e-02,  2.1166e-02,\n",
      "         8.0931e-03, -7.4352e-03, -2.4155e-02, -2.2626e-02,  1.7919e-02,\n",
      "        -8.9806e-03, -2.9164e-02, -1.5995e-03, -2.8750e-02, -8.7639e-03,\n",
      "        -2.6585e-02,  1.4027e-03, -2.0109e-03,  2.1595e-02,  1.1817e-02,\n",
      "         6.1953e-03,  2.5384e-03,  5.5888e-03,  2.2757e-02,  1.8497e-02,\n",
      "        -1.9810e-02, -2.1925e-02,  8.7432e-03,  1.6261e-02, -4.8707e-03,\n",
      "         9.4123e-03, -9.4173e-03, -1.8128e-02, -5.1486e-03, -1.3055e-02,\n",
      "         1.0194e-02,  2.0390e-02,  1.1149e-02, -1.5291e-02,  4.5223e-03,\n",
      "         1.4757e-02, -1.9378e-02,  1.3518e-02,  1.1842e-02,  2.0928e-02,\n",
      "         4.9615e-03, -9.0779e-08, -1.8749e-02,  2.0222e-02,  2.4985e-02,\n",
      "        -1.5977e-02, -1.5968e-03,  8.9724e-04,  1.9664e-02, -2.4256e-02,\n",
      "         1.1192e-02,  2.1983e-02, -1.3954e-02, -2.8159e-02, -1.1566e-02,\n",
      "         1.8636e-02, -2.4104e-02,  4.9225e-03, -1.3944e-02,  1.1562e-02,\n",
      "         2.3755e-02,  1.0170e-02, -2.6475e-02, -4.0240e-04, -8.1007e-04,\n",
      "         1.8383e-02, -2.3029e-02,  1.6005e-02,  2.0221e-02, -2.5802e-03,\n",
      "        -2.2536e-02,  1.2275e-02,  6.1427e-03,  2.0804e-02,  2.4714e-02,\n",
      "         1.3043e-03,  1.6186e-02, -1.7865e-02, -9.0901e-03, -2.1159e-02,\n",
      "        -2.2820e-02, -1.8354e-02, -2.1517e-02, -2.1288e-02,  1.3329e-02,\n",
      "        -1.6984e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1.1118, 0.6829, 1.0286, 0.6629, 0.8376, 0.6198, 0.8859, 0.7385, 0.7470,\n",
      "        0.9850, 1.0877, 0.6387, 1.1390, 1.0990, 0.9239, 1.0492, 1.0661, 0.8547,\n",
      "        1.0166, 1.1552, 0.9719, 0.9769, 0.6498, 1.1617, 1.0391, 0.8516, 0.8952,\n",
      "        1.0801, 1.0859, 1.1055, 0.8474, 0.7669, 0.7518, 0.7329, 1.0622, 0.8795,\n",
      "        1.1111, 0.9585, 0.5766, 0.5764, 1.0725, 0.8216, 0.6654, 0.5520, 0.6301,\n",
      "        0.6555, 1.0999, 0.9129, 1.1193, 0.8577, 0.7099, 1.0250, 0.8540, 0.6241,\n",
      "        0.7452, 0.9868, 0.9875, 0.9981, 0.7533, 0.7604, 1.1450, 0.8358, 1.0478,\n",
      "        0.6052, 0.7809, 1.1444, 0.9705, 0.9342, 0.6502, 0.7078, 1.0746, 0.7531,\n",
      "        1.0038, 0.9799, 0.7823, 1.0525, 0.7534, 0.8753, 0.7376, 1.0257, 0.8045,\n",
      "        1.0104, 1.0183, 1.1866, 1.0563, 0.8222, 0.8892, 1.1235, 0.7552, 1.0147,\n",
      "        0.7634, 0.9699, 0.8177, 1.0370, 1.0666, 1.0519, 1.0029, 0.9753, 0.6499,\n",
      "        1.0349, 1.0358, 1.0013, 1.0280, 1.1688, 1.0790, 0.9622, 0.8000, 1.0575,\n",
      "        1.0324, 1.0046, 0.8727, 0.6471, 0.9560, 0.7442, 1.0233, 0.7074, 1.0237,\n",
      "        1.0487, 0.9679, 1.0631, 1.0322, 0.6483, 1.2004, 0.9863, 1.0739, 0.9617,\n",
      "        0.9850, 0.7611, 0.9814, 0.9858, 1.1521, 0.8346, 0.9114, 0.9311, 1.1348,\n",
      "        0.9535, 0.9675, 0.6943, 0.8171, 1.0043, 1.0457, 0.8114, 0.9503, 1.2728,\n",
      "        0.5809, 1.2193, 1.1872, 0.6841, 1.0720, 1.0502, 0.7618, 0.9134, 1.1252,\n",
      "        1.0317, 0.5876, 0.7540, 0.7417, 0.9938, 0.5846, 0.6548, 0.8322, 0.7579,\n",
      "        0.6113, 0.6411, 0.6193, 1.0241, 1.1776, 1.0799, 1.3000, 0.9587, 1.2395,\n",
      "        0.9819, 1.0254, 0.6089, 0.9621, 0.9690, 0.6889, 0.6716, 0.6905, 0.6544,\n",
      "        0.7587, 0.6871, 1.2951, 1.1694, 0.8835, 1.0231, 1.1013, 0.6315, 0.6970,\n",
      "        1.0843, 1.0448, 0.7377, 1.0612, 0.9423, 0.8749, 0.8986, 0.7822, 0.8969,\n",
      "        0.6161, 0.6715, 0.9658, 0.6568, 0.9602, 0.7058, 1.1806, 1.0280, 0.5679,\n",
      "        0.7767, 0.9968, 0.9802, 1.2018, 1.0354, 1.0024, 0.9853, 0.8280, 1.0224,\n",
      "        1.0012, 1.0089, 0.9051, 0.6368, 0.9509, 1.1433, 0.6426, 0.7831, 0.7902,\n",
      "        0.6288, 0.7165, 1.0909, 1.1843, 0.8411, 0.9035, 1.0137, 1.0768, 0.9277,\n",
      "        0.8597, 0.9807, 0.8892, 0.7977, 0.9209, 1.0712, 0.6143, 1.2169, 1.0721,\n",
      "        0.8975, 0.6281, 0.7172, 1.0875, 0.9918, 0.6651, 1.0452, 1.1852, 0.7119,\n",
      "        0.9551, 1.0067, 1.2380, 0.5923], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0452, -0.5270, -0.3480, -0.4936, -0.1324, -0.5191, -0.2603, -0.0444,\n",
      "        -0.0749, -0.3195,  0.0598, -0.2905, -0.1453, -0.1491, -0.4250, -0.2266,\n",
      "        -0.2908, -0.1544, -0.2111,  0.0656, -0.0167, -0.1426, -0.2060,  0.0732,\n",
      "        -0.2106,  0.0456,  0.1348, -0.1927,  0.0566,  0.1636, -0.3080, -0.2714,\n",
      "        -0.3252, -0.1460,  0.0717, -0.1961,  0.1400, -0.2509, -0.4252, -0.3383,\n",
      "        -0.1712, -0.0730, -0.4398, -0.2610, -0.3445, -0.4054, -0.3057, -0.2535,\n",
      "        -0.0050, -0.2597, -0.0871, -0.2100, -0.1001, -0.4074, -0.3901, -0.2798,\n",
      "        -0.1660, -0.1515, -0.0518, -0.2727,  0.1228,  0.0419,  0.0923, -0.4373,\n",
      "        -0.1755, -0.0917, -0.4277, -0.2658, -0.3186, -0.5138, -0.2116, -0.1137,\n",
      "        -0.2388, -0.1710, -0.2914, -0.0109, -0.0179, -0.6071, -0.3510, -0.2082,\n",
      "        -0.2783, -0.0777, -0.3444, -0.0993,  0.0280,  0.1221, -0.2409, -0.2773,\n",
      "        -0.4909,  0.0221,  0.0212, -0.2127, -0.0926, -0.0293, -0.0423, -0.1237,\n",
      "        -0.2540, -0.2208, -0.3973, -0.0634, -0.3775, -0.3376, -0.2696,  0.1863,\n",
      "        -0.2555, -0.1730,  0.1594, -0.1525, -0.2761, -0.2302,  0.1128, -0.4820,\n",
      "        -0.1468, -0.3038,  0.0811, -0.3391, -0.0934, -0.1721, -0.2083, -0.1152,\n",
      "        -0.2476, -0.4226,  0.2402, -0.1479, -0.1162, -0.1910, -0.3509, -0.2803,\n",
      "         0.0657, -0.0346, -0.0571, -0.1148, -0.1277, -0.3749,  0.0760, -0.2334,\n",
      "        -0.2423, -0.4544, -0.2890,  0.0230, -0.1310, -0.1505, -0.1788, -0.3772,\n",
      "        -0.4861,  0.1576,  0.0773, -0.3213, -0.1025, -0.2045, -0.1037, -0.1560,\n",
      "        -0.1951, -0.2857, -0.3930, -0.1104, -0.3030, -0.1651, -0.4787, -0.3908,\n",
      "        -0.0334, -0.0878, -0.3359, -0.4949, -0.4644, -0.1188,  0.1111,  0.1309,\n",
      "         0.0910, -0.0915, -0.3274,  0.0611, -0.2720, -0.2921,  0.0528, -0.0627,\n",
      "        -0.5226, -0.5863, -0.4674, -0.3347, -0.4354, -0.0331,  0.0261,  0.0619,\n",
      "        -0.1544,  0.0132, -0.2983, -0.5521, -0.1771, -0.2057, -0.2728, -0.4181,\n",
      "        -0.1655, -0.3556,  0.0707, -0.2553, -0.4784, -0.2498, -0.5531, -0.4292,\n",
      "        -0.1679, -0.5191, -0.2083, -0.2543,  0.0100,  0.0827, -0.4271, -0.2564,\n",
      "        -0.2663, -0.2390,  0.0423, -0.0112, -0.1023, -0.0694, -0.0252, -0.3995,\n",
      "        -0.0604, -0.2469, -0.3097, -0.5279, -0.2597,  0.0441, -0.1578, -0.3819,\n",
      "         0.1307, -0.4899, -0.1777,  0.0734,  0.0249, -0.4550, -0.3106, -0.0146,\n",
      "         0.0410, -0.1987, -0.1638,  0.0597,  0.1126, -0.1422, -0.1851, -0.1956,\n",
      "        -0.4667,  0.1689,  0.2458, -0.1874, -0.3393, -0.0604,  0.2139, -0.0885,\n",
      "        -0.1443, -0.0896,  0.0848, -0.4202, -0.1386, -0.1540, -0.1043, -0.3974],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-3.2131e-01, -3.0212e-01, -2.5088e-01],\n",
      "          [-2.9398e-01, -4.5601e-01, -2.8741e-01],\n",
      "          [-1.2367e-01, -1.3150e-01,  9.2732e-03]],\n",
      "\n",
      "         [[ 1.0578e-01,  2.3518e-01,  1.4689e-01],\n",
      "          [ 1.9083e-01,  2.4107e-01,  3.1285e-02],\n",
      "          [ 1.8829e-01,  7.7203e-02, -2.2914e-02]],\n",
      "\n",
      "         [[-3.4545e-01, -1.6268e-01, -1.0453e-01],\n",
      "          [ 9.2339e-02,  1.8389e-01,  1.5788e-01],\n",
      "          [ 3.0059e-02,  2.2687e-01,  1.6076e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.6569e-01,  6.8717e-02,  2.4597e-01],\n",
      "          [-2.3583e-01, -1.1888e-02,  1.2892e-01],\n",
      "          [-9.7259e-02,  1.5736e-01,  1.3191e-01]],\n",
      "\n",
      "         [[ 1.0156e-01,  2.0187e-01,  7.3709e-02],\n",
      "          [ 2.3029e-02,  3.4401e-02, -3.2205e-02],\n",
      "          [-3.7938e-02, -6.4883e-02, -1.6898e-01]],\n",
      "\n",
      "         [[ 9.6445e-02,  3.2698e-02, -5.5172e-02],\n",
      "          [ 1.2605e-01,  2.0753e-02, -3.0343e-02],\n",
      "          [ 1.3158e-01, -3.5531e-02, -4.5945e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.0200e-01, -6.1035e-02, -1.7512e-01],\n",
      "          [-1.7765e-02,  7.4002e-02, -1.1963e-01],\n",
      "          [ 1.1632e-01,  1.6352e-01, -1.1247e-02]],\n",
      "\n",
      "         [[-1.6652e-01,  1.5271e-01,  2.3168e-01],\n",
      "          [ 3.3408e-03,  2.2012e-01,  8.6260e-02],\n",
      "          [ 1.7717e-01,  1.2360e-01, -8.5666e-02]],\n",
      "\n",
      "         [[ 1.0150e-02, -1.4562e-01, -1.9036e-01],\n",
      "          [-1.5148e-01, -1.7524e-01, -6.7025e-02],\n",
      "          [ 9.7733e-02,  1.1794e-01,  1.2670e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1230e-01,  9.6060e-02, -1.6757e-02],\n",
      "          [-1.1962e-01, -1.4383e-01, -7.3192e-02],\n",
      "          [-3.4153e-01, -1.3879e-02,  2.5606e-02]],\n",
      "\n",
      "         [[-2.9470e-02,  3.9016e-01,  3.2173e-01],\n",
      "          [ 1.6390e-01,  4.4036e-01, -6.4952e-02],\n",
      "          [ 2.0582e-01, -9.0218e-02, -3.7516e-01]],\n",
      "\n",
      "         [[-1.7426e-01, -1.0462e-01, -8.7131e-02],\n",
      "          [-1.1792e-01,  8.7053e-02, -1.1281e-01],\n",
      "          [ 1.0712e-01,  6.7332e-02, -1.3839e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 7.6218e-02,  1.3697e-01,  1.0906e-01],\n",
      "          [ 1.5399e-01,  1.9522e-01,  9.9807e-02],\n",
      "          [ 1.6417e-01,  1.3010e-01,  2.6012e-02]],\n",
      "\n",
      "         [[-2.0951e-01,  9.9708e-02,  9.2863e-02],\n",
      "          [ 3.0189e-02,  1.9386e-01,  1.2045e-02],\n",
      "          [ 1.6487e-01,  7.1538e-02, -1.3844e-01]],\n",
      "\n",
      "         [[-1.6620e-01, -1.7376e-01, -2.4456e-01],\n",
      "          [-9.9244e-02, -4.9290e-02, -5.5980e-02],\n",
      "          [-7.8336e-02,  9.7157e-02,  1.1922e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3932e-01, -2.8724e-01, -3.7479e-01],\n",
      "          [-9.6351e-02, -2.2667e-01, -3.1826e-01],\n",
      "          [-1.9071e-01, -1.0741e-01, -1.6906e-01]],\n",
      "\n",
      "         [[-4.5949e-02,  3.9776e-02, -6.0024e-02],\n",
      "          [ 1.4164e-01,  1.2839e-01, -3.5004e-03],\n",
      "          [ 1.1988e-01, -1.3111e-01, -1.7019e-01]],\n",
      "\n",
      "         [[-1.8333e-01, -7.4934e-03,  5.3369e-02],\n",
      "          [-5.5858e-02,  1.2796e-01,  8.3166e-03],\n",
      "          [ 3.1213e-02,  4.6592e-02, -7.4986e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-1.4382e-01, -1.8187e-02, -3.0273e-03],\n",
      "          [-2.6397e-02,  1.0050e-01,  4.6099e-02],\n",
      "          [ 3.6077e-02,  2.0804e-02, -1.0199e-01]],\n",
      "\n",
      "         [[-1.9770e-01, -3.1197e-02,  6.0930e-02],\n",
      "          [ 7.0118e-05,  1.2298e-01, -5.7754e-02],\n",
      "          [ 8.5192e-02,  3.6984e-02, -1.8406e-01]],\n",
      "\n",
      "         [[-1.2883e-01, -6.4074e-02, -7.0948e-02],\n",
      "          [-1.6366e-01,  1.6340e-02,  1.3171e-02],\n",
      "          [-1.4751e-01,  5.5676e-02,  1.2566e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.5889e-01,  2.0171e-02, -2.5718e-01],\n",
      "          [-1.2560e-01, -3.8628e-02, -2.6048e-01],\n",
      "          [-1.9089e-01, -1.1289e-01, -1.5505e-01]],\n",
      "\n",
      "         [[-7.5598e-02,  1.3735e-01,  6.3798e-02],\n",
      "          [ 6.0578e-02,  9.2034e-02, -2.8428e-01],\n",
      "          [ 1.4954e-01, -1.6626e-01, -4.6137e-01]],\n",
      "\n",
      "         [[-1.6533e-01, -4.7994e-02,  3.5698e-02],\n",
      "          [-3.3017e-02,  1.4439e-01,  1.3654e-02],\n",
      "          [ 9.8202e-02,  5.4012e-02, -8.7475e-02]]],\n",
      "\n",
      "\n",
      "        [[[-9.5127e-02, -8.2800e-02, -1.0273e-01],\n",
      "          [ 2.5098e-02,  3.1938e-02, -9.2767e-02],\n",
      "          [ 1.0572e-01,  9.6447e-02, -1.8348e-02]],\n",
      "\n",
      "         [[-2.9420e-01,  1.1947e-01,  2.8138e-01],\n",
      "          [-6.9855e-02,  2.0783e-01,  6.9648e-02],\n",
      "          [ 1.0477e-01,  8.9679e-02, -1.7032e-01]],\n",
      "\n",
      "         [[-6.8537e-02, -1.6720e-01, -8.6608e-02],\n",
      "          [-7.6924e-02, -1.3347e-01, -4.0441e-02],\n",
      "          [ 6.4361e-02,  2.4363e-02,  1.0216e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.9974e-02,  4.0821e-01,  1.9590e-01],\n",
      "          [-6.5197e-02,  7.7451e-02, -2.9670e-03],\n",
      "          [-2.5008e-01,  1.3132e-01,  7.1600e-02]],\n",
      "\n",
      "         [[-9.2586e-02,  3.5948e-01,  2.7122e-01],\n",
      "          [ 2.8068e-01,  5.3912e-01, -3.7221e-02],\n",
      "          [ 2.8710e-01, -2.9001e-02, -3.1489e-01]],\n",
      "\n",
      "         [[-1.8550e-01, -1.3886e-01, -1.3660e-01],\n",
      "          [-1.4700e-01,  9.6953e-02, -3.4246e-03],\n",
      "          [ 1.4638e-01,  1.4003e-01,  4.7822e-03]]],\n",
      "\n",
      "\n",
      "        [[[-3.6697e-01, -2.3622e-01, -6.8562e-02],\n",
      "          [-2.2735e-01, -2.9028e-01, -1.7055e-01],\n",
      "          [ 9.3403e-02,  2.2216e-03,  8.2615e-02]],\n",
      "\n",
      "         [[-8.4421e-02, -3.7230e-03, -3.5721e-02],\n",
      "          [-1.6431e-03,  7.2702e-02, -7.5403e-02],\n",
      "          [ 5.0238e-02,  6.1116e-02, -8.5806e-02]],\n",
      "\n",
      "         [[-3.8949e-01, -2.2895e-01, -1.7887e-01],\n",
      "          [ 1.2835e-01,  1.6232e-01,  1.8931e-01],\n",
      "          [ 5.5192e-02,  2.0111e-01,  1.8400e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.7841e-01, -4.2806e-02,  1.0806e-01],\n",
      "          [-2.4050e-01, -1.0256e-01,  7.0260e-02],\n",
      "          [-1.8604e-01, -6.4882e-03,  9.7605e-02]],\n",
      "\n",
      "         [[ 7.0123e-02,  1.5268e-01,  1.2680e-01],\n",
      "          [-1.2833e-01, -8.9599e-03,  8.9460e-02],\n",
      "          [-9.6299e-02, -1.1247e-01, -7.7807e-02]],\n",
      "\n",
      "         [[-6.7783e-02, -8.2980e-02, -1.2716e-01],\n",
      "          [ 1.3588e-03, -7.0187e-02, -1.1622e-01],\n",
      "          [ 7.2378e-02, -2.8338e-02, -4.8409e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 4.1805e-04, -8.5407e-03,  4.9663e-03,  1.0213e-04, -1.7540e-02,\n",
      "        -4.5136e-03, -7.1971e-04, -5.0781e-03,  1.4805e-02, -3.3578e-03,\n",
      "        -1.3227e-02,  5.8942e-04, -2.0610e-02,  1.2865e-02, -2.0437e-02,\n",
      "        -3.9456e-03,  8.7400e-03, -1.8284e-02, -1.1104e-02, -1.1498e-02,\n",
      "         1.6399e-02,  1.3891e-02,  1.3382e-02,  1.6582e-02, -7.9531e-03,\n",
      "         7.2340e-03,  4.5824e-03,  4.1340e-03, -1.5889e-02, -1.8216e-02,\n",
      "        -1.0614e-02, -1.4098e-03, -1.4758e-02,  6.7495e-03,  1.4406e-02,\n",
      "         4.1678e-03, -1.8877e-02, -1.2911e-02,  1.6634e-02, -1.7452e-02,\n",
      "        -2.0739e-02, -1.7699e-02,  6.5576e-03, -1.3523e-02,  2.0616e-02,\n",
      "        -9.2918e-04, -1.8227e-02,  1.1079e-02, -4.6670e-04, -1.0882e-03,\n",
      "        -1.2170e-02,  1.6802e-02, -3.1475e-03, -2.1399e-03,  1.8368e-02,\n",
      "        -8.9174e-04, -1.0126e-02,  6.5852e-03,  2.0361e-03, -1.7436e-02,\n",
      "         9.7289e-03, -1.4906e-02,  1.6879e-03, -2.1151e-03,  2.4399e-04,\n",
      "        -1.4601e-02, -1.8757e-02,  1.3574e-02,  1.3782e-02,  1.4493e-02,\n",
      "        -2.7550e-03,  1.9356e-02, -1.5354e-02, -8.3722e-04,  1.1730e-03,\n",
      "         1.5099e-02, -4.6258e-03,  2.3462e-03,  1.7389e-02,  6.5680e-03,\n",
      "         7.3625e-03, -7.7544e-05,  1.4682e-02, -1.8583e-02,  1.9118e-02,\n",
      "        -1.6364e-02, -6.5957e-03,  1.7639e-02,  1.3801e-02,  1.6582e-02,\n",
      "        -1.0904e-02, -8.5971e-03, -4.3010e-03,  8.0956e-03, -5.7471e-03,\n",
      "         1.9933e-02, -1.1749e-03, -3.0827e-03,  1.1897e-02,  4.3465e-03,\n",
      "        -1.9359e-02, -3.8643e-03, -1.8386e-02,  1.8578e-03, -2.6598e-04,\n",
      "         1.1442e-02, -1.3504e-02,  1.7787e-02,  1.9324e-02, -5.3833e-03,\n",
      "         1.8570e-02,  1.2404e-02, -1.8535e-02, -1.2695e-02,  7.4508e-05,\n",
      "         4.9579e-03,  1.1245e-02,  5.7914e-03, -1.5645e-02, -4.1225e-03,\n",
      "         1.9587e-02, -4.9400e-03,  5.1123e-03,  7.1663e-03, -1.4914e-02,\n",
      "        -1.0686e-02, -9.9574e-03, -1.4488e-02,  1.2889e-02,  1.8034e-02,\n",
      "        -1.0902e-02, -7.0864e-03,  1.6683e-02, -3.2684e-03, -1.6473e-02,\n",
      "        -1.1677e-02,  1.8843e-02,  4.9705e-03,  1.7885e-02,  1.1284e-02,\n",
      "         1.6542e-03,  1.6477e-02,  1.7652e-02, -4.7664e-03,  1.9422e-04,\n",
      "         3.6691e-03,  1.3806e-02, -1.8328e-02,  5.3511e-03,  1.4735e-03,\n",
      "         7.9241e-03,  1.5504e-02, -8.1813e-03,  1.9853e-02,  8.9140e-03,\n",
      "         1.6533e-02, -3.6716e-03, -1.6625e-02, -2.2060e-03, -1.0688e-02,\n",
      "        -1.5497e-02,  1.4860e-02, -1.5480e-03,  5.2881e-03,  1.0520e-02,\n",
      "         1.0856e-02,  5.3608e-03,  9.5628e-03,  1.9308e-02, -2.3271e-03,\n",
      "         1.5694e-02, -4.7758e-03, -2.8962e-03, -3.5161e-03,  8.9289e-03,\n",
      "         5.5983e-03, -3.1455e-03,  1.1728e-02,  1.2836e-02, -6.7364e-03,\n",
      "        -7.1274e-03,  1.5113e-02,  3.0016e-03,  1.3057e-02, -1.8082e-02,\n",
      "        -1.2478e-02,  1.7416e-02,  1.9175e-02,  1.8046e-02,  9.1946e-03,\n",
      "        -1.5293e-02, -1.1211e-02,  8.0106e-03,  1.3691e-02, -8.0799e-03,\n",
      "         1.4567e-02,  1.9779e-02,  4.1161e-03,  3.7143e-03,  1.0150e-02,\n",
      "        -1.7351e-02, -2.0768e-02, -1.8648e-02, -1.7377e-02, -6.2934e-03,\n",
      "        -8.7139e-03,  7.1175e-03, -8.6710e-03, -5.1823e-03, -1.9998e-02,\n",
      "        -1.4629e-02, -9.2676e-03, -1.9093e-02,  1.6351e-02, -2.9447e-03,\n",
      "        -3.7806e-03, -7.2370e-03,  1.7951e-02, -1.3177e-03,  1.8946e-02,\n",
      "         7.7176e-04, -1.1973e-02, -1.0593e-03, -7.5900e-03, -6.8877e-05,\n",
      "         7.4396e-03, -4.5636e-03, -3.2774e-03, -1.1328e-02, -9.1991e-03,\n",
      "        -1.6711e-02,  4.6150e-03,  1.5765e-02, -9.5693e-03, -1.3485e-02,\n",
      "         1.9271e-02,  6.5528e-04,  1.1735e-02, -1.4169e-02, -1.2497e-02,\n",
      "        -1.1318e-02,  1.4337e-02, -1.4934e-03, -5.3639e-03, -3.9739e-03,\n",
      "         8.5209e-03,  4.1525e-04, -1.4913e-02, -7.5085e-03,  1.9971e-02,\n",
      "        -1.2309e-02,  2.7150e-03, -1.8174e-02, -7.0223e-03,  6.6845e-03,\n",
      "         1.4863e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.9496, 1.0551, 0.7996, 0.9751, 0.8970, 0.9097, 1.1509, 1.0251, 1.1385,\n",
      "        0.9690, 1.0124, 0.8631, 0.7444, 0.8972, 0.8957, 1.1839, 0.9083, 0.9885,\n",
      "        0.9356, 0.9594, 0.8712, 0.9757, 1.0452, 0.9907, 1.2774, 0.9161, 1.2239,\n",
      "        0.9502, 0.8165, 0.7575, 0.9968, 0.8445, 0.8932, 0.9137, 0.9010, 0.9297,\n",
      "        1.1037, 1.0031, 1.0335, 0.8944, 0.9144, 1.1352, 0.9854, 0.9116, 0.9042,\n",
      "        0.8328, 0.9393, 1.0846, 1.0647, 0.8834, 0.9973, 0.8652, 1.1809, 0.9077,\n",
      "        1.0626, 0.8739, 0.9605, 0.9053, 0.8582, 0.9833, 0.8019, 0.8651, 0.8399,\n",
      "        1.2934, 0.9609, 0.9763, 1.0522, 0.8505, 1.2576, 0.8109, 0.8701, 1.0898,\n",
      "        0.9076, 1.1814, 0.9258, 0.9459, 0.9569, 0.9762, 1.0147, 0.7923, 0.8423,\n",
      "        0.9141, 1.2946, 1.2350, 0.8167, 1.2110, 0.7963, 1.0944, 0.9545, 0.8636,\n",
      "        0.9218, 0.9317, 0.9486, 0.8850, 0.9898, 1.1355, 0.7745, 0.8832, 0.7910,\n",
      "        0.9222, 0.8274, 1.2569, 0.8904, 0.8888, 1.0107, 1.0846, 1.0606, 0.8296,\n",
      "        1.0014, 0.9135, 1.1694, 0.9069, 0.9104, 0.9146, 0.9985, 1.1704, 0.8695,\n",
      "        0.8097, 0.9145, 1.0418, 0.8341, 1.1402, 1.0496, 0.8537, 1.2138, 0.9632,\n",
      "        0.9445, 1.0596, 1.1856, 0.8428, 1.1041, 0.9920, 1.0784, 0.7899, 0.7775,\n",
      "        1.0617, 0.9201, 0.8695, 0.7859, 1.0806, 0.8822, 0.7609, 0.9931, 0.8090,\n",
      "        0.9272, 0.9148, 1.1541, 1.0433, 0.8699, 0.9801, 1.0995, 0.9376, 0.9046,\n",
      "        1.0763, 0.8624, 0.8785, 0.8832, 1.1985, 0.9693, 0.8687, 0.9644, 0.9995,\n",
      "        1.0328, 0.9311, 0.9302, 0.8419, 0.9665, 1.2132, 0.8622, 0.8544, 0.9106,\n",
      "        0.8777, 1.4284, 0.9290, 0.9132, 1.0622, 0.8385, 1.1620, 0.8335, 0.8811,\n",
      "        1.0926, 1.1361, 0.8674, 0.9421, 0.8743, 0.8473, 0.8577, 1.0268, 0.8999,\n",
      "        0.8497, 0.7488, 0.8631, 0.8544, 1.5665, 0.8859, 0.8651, 1.0481, 0.9244,\n",
      "        0.9466, 0.7792, 0.8848, 0.9843, 0.9578, 1.3294, 0.8360, 0.9673, 0.8343,\n",
      "        0.8691, 0.8379, 1.1237, 1.2151, 0.8509, 0.8614, 0.8948, 0.9709, 0.9178,\n",
      "        0.8069, 1.0726, 1.0194, 0.9637, 0.9675, 1.0523, 0.9872, 1.0231, 1.1118,\n",
      "        0.9303, 0.9085, 0.8954, 0.9877, 1.0768, 0.9227, 1.0339, 0.9092, 0.8236,\n",
      "        1.2955, 1.0440, 0.8997, 0.7401, 0.9161, 1.0963, 0.7624, 0.8624, 1.1244,\n",
      "        0.8984, 0.9477, 0.9538, 1.1283, 0.9394, 0.8273, 1.1403, 0.9491, 1.1985,\n",
      "        1.1679, 0.9688, 1.3544, 0.8541], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0865,  0.0407, -0.1676, -0.2381, -0.2569, -0.2062, -0.0748, -0.2703,\n",
      "        -0.0483, -0.0284, -0.0363, -0.1193, -0.2335, -0.1698, -0.1987, -0.0152,\n",
      "        -0.3995, -0.1328, -0.3412, -0.0443, -0.0954, -0.1253, -0.0968,  0.0467,\n",
      "         0.0910, -0.1005,  0.0154, -0.1498, -0.2612, -0.0741, -0.1196, -0.1423,\n",
      "        -0.3496, -0.4485, -0.1332, -0.2888, -0.3434, -0.2254, -0.0258, -0.3699,\n",
      "        -0.2317, -0.1195, -0.2025, -0.0731, -0.3187, -0.2155,  0.0008, -0.0707,\n",
      "        -0.0394, -0.2789, -0.1345, -0.0834, -0.1515, -0.3714, -0.1476, -0.2780,\n",
      "         0.0750, -0.1980, -0.1763, -0.2106, -0.2039, -0.3513, -0.3814,  0.0941,\n",
      "        -0.0696, -0.1918, -0.1642, -0.1728,  0.0258, -0.2470, -0.2767,  0.0159,\n",
      "        -0.3597, -0.1934, -0.2311, -0.3485, -0.1780, -0.1018, -0.1316, -0.2346,\n",
      "        -0.0978, -0.1449,  0.1588, -0.1832, -0.4544, -0.1576, -0.3111, -0.0233,\n",
      "        -0.3496, -0.0536, -0.1152, -0.0138, -0.0068, -0.3249, -0.1235, -0.0029,\n",
      "        -0.2760, -0.1008, -0.2706, -0.1424, -0.2286,  0.0857, -0.0900, -0.2046,\n",
      "        -0.0159, -0.1500, -0.1318, -0.1927, -0.2432, -0.3490,  0.0528, -0.1494,\n",
      "        -0.1483, -0.2294, -0.0890, -0.1865, -0.3716, -0.3500, -0.1645, -0.0858,\n",
      "        -0.1781, -0.0232, -0.0900, -0.1845, -0.1285, -0.0963, -0.0422, -0.0738,\n",
      "         0.0303, -0.1774, -0.0700, -0.0930, -0.1732, -0.2836, -0.0841, -0.0684,\n",
      "        -0.3375, -0.2181, -0.2782,  0.1501, -0.3972, -0.2664, -0.2365, -0.1214,\n",
      "         0.0038, -0.2753, -0.1740, -0.1616, -0.2358, -0.0852, -0.0621, -0.1888,\n",
      "        -0.3643, -0.2746, -0.1399, -0.3678, -0.0321, -0.1188, -0.0289, -0.2248,\n",
      "        -0.1236, -0.1847, -0.1493, -0.3055, -0.2931, -0.3137, -0.1565, -0.1055,\n",
      "        -0.1226, -0.2410, -0.1706, -0.1145,  0.1444, -0.2871, -0.2606, -0.1134,\n",
      "        -0.1196,  0.1389, -0.1080, -0.2163, -0.3756, -0.3078, -0.0677, -0.0569,\n",
      "        -0.2501, -0.1977, -0.2465, -0.1286, -0.0884, -0.1879, -0.2546, -0.2760,\n",
      "        -0.3371,  0.0869, -0.1827, -0.0531, -0.1745, -0.1727, -0.2098, -0.2948,\n",
      "        -0.1906, -0.0224, -0.3144,  0.1169, -0.1795, -0.2334, -0.1568, -0.2386,\n",
      "        -0.2938, -0.1630, -0.0734, -0.3137, -0.0986, -0.1774, -0.1935, -0.1365,\n",
      "        -0.3324,  0.0719, -0.0900, -0.2421, -0.2693, -0.0934, -0.2537, -0.3690,\n",
      "        -0.0074, -0.2126, -0.3214, -0.1256,  0.0170, -0.1591, -0.2394, -0.1190,\n",
      "        -0.2921, -0.2646,  0.0122, -0.0694, -0.3530, -0.1903, -0.2126, -0.2280,\n",
      "        -0.1709, -0.1923, -0.4142, -0.2599, -0.0671, -0.0059, -0.1806, -0.1916,\n",
      "        -0.2078, -0.1514, -0.0763,  0.0120,  0.1041,  0.0037,  0.1303, -0.3130],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-1.4116e-01, -9.4350e-02, -2.7574e-02],\n",
      "          [ 1.5851e-03,  6.3567e-02,  1.2967e-01],\n",
      "          [ 1.6120e-01,  1.2374e-01,  5.5197e-02]],\n",
      "\n",
      "         [[ 2.2182e-01,  8.9531e-02,  1.0720e-01],\n",
      "          [ 2.2893e-01,  6.3507e-02,  6.9470e-02],\n",
      "          [ 5.8266e-02, -2.1250e-01, -2.3215e-01]],\n",
      "\n",
      "         [[ 1.8879e-02,  4.5590e-02,  9.4827e-02],\n",
      "          [-3.4495e-02, -3.0070e-02,  7.3534e-02],\n",
      "          [-7.0200e-02, -2.2606e-02,  1.1740e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.1339e-01,  2.7666e-01,  2.6484e-01],\n",
      "          [ 2.0285e-01,  1.9614e-01,  1.4448e-01],\n",
      "          [ 1.9091e-02, -3.0817e-02, -1.1297e-01]],\n",
      "\n",
      "         [[ 1.4343e-02,  1.2780e-02,  1.4644e-02],\n",
      "          [ 1.5892e-01,  8.1078e-02, -1.5734e-01],\n",
      "          [ 8.7503e-02, -2.1849e-01, -5.7144e-01]],\n",
      "\n",
      "         [[-1.4905e-01, -3.0763e-01, -2.8330e-01],\n",
      "          [-6.5446e-03, -5.6542e-02,  5.1448e-02],\n",
      "          [ 1.0086e-01,  7.9734e-02,  8.6960e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.6432e-01, -8.7653e-02,  1.0848e-01],\n",
      "          [-1.1106e-02, -5.7701e-02,  1.1206e-01],\n",
      "          [-3.6461e-02,  5.4122e-02,  2.2569e-01]],\n",
      "\n",
      "         [[ 1.0518e-01,  1.0693e-01,  4.3147e-02],\n",
      "          [ 5.1538e-02,  1.4097e-01,  6.3495e-02],\n",
      "          [ 1.8479e-01,  1.8985e-01,  1.9890e-01]],\n",
      "\n",
      "         [[ 1.3089e-03, -3.5968e-02,  7.8006e-02],\n",
      "          [-5.8515e-02, -1.2320e-01, -3.4972e-02],\n",
      "          [-1.5033e-01, -2.2442e-01, -2.2902e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 7.3589e-02,  1.1825e-01,  1.8123e-02],\n",
      "          [ 9.2385e-02,  3.0814e-02, -6.9288e-02],\n",
      "          [ 1.1826e-01,  3.3225e-02, -4.6974e-02]],\n",
      "\n",
      "         [[-1.9227e-02,  4.2746e-02,  1.5041e-02],\n",
      "          [-1.1438e-01,  9.4476e-02, -8.8173e-03],\n",
      "          [ 5.5397e-02,  7.1521e-02,  1.7030e-01]],\n",
      "\n",
      "         [[-1.0511e-01, -1.4631e-01,  8.8651e-03],\n",
      "          [ 5.2281e-02, -4.6108e-02,  1.9072e-02],\n",
      "          [-1.5802e-02, -8.7936e-03,  1.1281e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 7.5859e-02,  1.2407e-01,  7.6931e-02],\n",
      "          [ 1.0355e-01,  1.6936e-01,  1.9641e-01],\n",
      "          [-1.2398e-02,  6.0988e-02, -5.5153e-04]],\n",
      "\n",
      "         [[ 4.2153e-02,  1.1637e-01,  3.1911e-02],\n",
      "          [ 1.3353e-01,  1.2372e-01,  8.8146e-02],\n",
      "          [ 2.0920e-02, -1.6799e-02, -1.4681e-02]],\n",
      "\n",
      "         [[-7.7310e-02, -3.9084e-02, -2.5072e-02],\n",
      "          [-4.4674e-02, -4.5217e-02, -1.2811e-01],\n",
      "          [-2.8516e-02, -1.3643e-01, -1.1449e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-7.8847e-02, -4.3293e-02, -7.8910e-02],\n",
      "          [-3.9047e-02, -3.0907e-02, -1.1363e-01],\n",
      "          [-8.8807e-02, -1.2372e-01, -1.3327e-01]],\n",
      "\n",
      "         [[ 2.6121e-02,  9.6187e-02,  1.9654e-02],\n",
      "          [ 1.1668e-01,  1.2277e-01,  7.3715e-02],\n",
      "          [ 3.2905e-02, -3.1876e-02, -5.3464e-02]],\n",
      "\n",
      "         [[ 2.1362e-01,  1.1617e-01,  4.4019e-02],\n",
      "          [ 1.8997e-01,  2.5053e-01,  2.3849e-01],\n",
      "          [-4.7446e-02, -7.8281e-03, -1.3729e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-1.3129e-01,  4.0714e-02, -3.9551e-02],\n",
      "          [-9.0313e-02,  5.6880e-02, -4.2967e-02],\n",
      "          [-1.4691e-02,  4.8210e-02, -3.8660e-02]],\n",
      "\n",
      "         [[-2.1948e-01,  1.3028e-01,  1.8861e-01],\n",
      "          [ 1.2817e-01,  2.4221e-01, -1.5519e-01],\n",
      "          [ 9.9429e-02, -1.6768e-01, -3.2697e-01]],\n",
      "\n",
      "         [[-1.6310e-01,  4.7258e-03,  2.6140e-02],\n",
      "          [-5.0114e-02,  6.2239e-02, -2.9668e-02],\n",
      "          [-5.7592e-02, -4.8597e-02, -1.6656e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.5862e-01,  1.0747e-01,  1.2982e-01],\n",
      "          [ 1.0166e-01,  1.5979e-01, -6.0994e-02],\n",
      "          [ 2.0472e-01, -4.4936e-02, -2.1493e-01]],\n",
      "\n",
      "         [[-3.7071e-01,  1.6643e-01,  2.1729e-01],\n",
      "          [ 9.9987e-02,  3.1376e-01, -1.4252e-01],\n",
      "          [ 8.9431e-02, -1.0049e-01, -4.0723e-01]],\n",
      "\n",
      "         [[ 3.7712e-02,  5.1984e-02, -3.9248e-02],\n",
      "          [ 5.1211e-02,  3.9917e-02, -3.9190e-02],\n",
      "          [ 1.4197e-02,  1.0762e-02, -1.5833e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.6655e-01,  4.2321e-03,  1.4350e-01],\n",
      "          [ 3.0159e-02,  1.4798e-01,  2.2750e-01],\n",
      "          [-9.4769e-02,  1.7585e-01,  1.5019e-01]],\n",
      "\n",
      "         [[-3.9115e-02, -3.2315e-02, -3.1966e-02],\n",
      "          [ 7.4346e-02,  1.2937e-02, -5.7188e-02],\n",
      "          [ 9.3561e-02,  1.0900e-01,  7.3688e-02]],\n",
      "\n",
      "         [[-3.1430e-02, -6.5849e-02, -6.6448e-02],\n",
      "          [-3.9290e-02, -9.6545e-02, -1.0343e-01],\n",
      "          [-1.7064e-01, -2.5561e-01, -1.9519e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.4863e-03, -1.6034e-02, -6.3078e-02],\n",
      "          [ 9.6830e-02,  9.3673e-04, -6.9551e-02],\n",
      "          [ 7.8595e-02,  1.1311e-02, -6.1872e-02]],\n",
      "\n",
      "         [[-6.1246e-02, -6.6515e-02, -7.3357e-02],\n",
      "          [ 2.0470e-02,  5.1760e-02, -2.2959e-02],\n",
      "          [ 7.5754e-02,  1.2014e-01,  7.4194e-02]],\n",
      "\n",
      "         [[-7.3215e-02, -1.0015e-01,  1.5721e-02],\n",
      "          [ 7.9844e-02,  5.5500e-02,  7.2501e-02],\n",
      "          [-1.1821e-01, -1.6961e-02,  3.2024e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 1.3490e-01,  2.1616e-01,  1.4172e-01],\n",
      "          [ 8.1797e-02,  1.9825e-01,  1.7104e-01],\n",
      "          [-1.1596e-01,  4.9338e-02, -1.9501e-02]],\n",
      "\n",
      "         [[-2.4138e-04,  9.9292e-02,  5.4779e-02],\n",
      "          [ 5.6881e-02,  9.8636e-02,  5.0938e-02],\n",
      "          [-3.2443e-02, -4.2351e-02, -5.7019e-02]],\n",
      "\n",
      "         [[-1.9397e-01, -1.0866e-01, -3.5155e-02],\n",
      "          [-2.1592e-01, -2.1765e-01, -2.5816e-01],\n",
      "          [-4.7396e-02, -1.5207e-01, -1.6807e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0404e-01, -1.0165e-01, -1.2232e-01],\n",
      "          [-1.1021e-01, -8.6113e-02, -1.8359e-01],\n",
      "          [-8.4835e-02, -1.0567e-01, -1.6126e-01]],\n",
      "\n",
      "         [[-5.7654e-02,  1.2720e-01,  6.8931e-02],\n",
      "          [-8.5818e-03,  8.8396e-02,  6.1136e-02],\n",
      "          [-7.1029e-02, -5.4202e-02, -1.6839e-03]],\n",
      "\n",
      "         [[ 2.3827e-01,  1.9358e-01,  1.1793e-01],\n",
      "          [ 1.8138e-01,  2.7852e-01,  2.3824e-01],\n",
      "          [-7.3311e-02,  6.2162e-03, -1.5458e-01]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0162, -0.0074, -0.0005,  0.0020, -0.0031, -0.0051,  0.0020,  0.0198,\n",
      "        -0.0120,  0.0190,  0.0043,  0.0124, -0.0031, -0.0114, -0.0116, -0.0155,\n",
      "        -0.0033, -0.0116,  0.0075,  0.0007, -0.0109, -0.0101, -0.0123, -0.0123,\n",
      "         0.0204, -0.0060, -0.0123, -0.0068, -0.0035,  0.0049,  0.0197,  0.0033,\n",
      "         0.0168,  0.0074,  0.0092, -0.0181, -0.0021,  0.0192,  0.0132,  0.0135,\n",
      "        -0.0195,  0.0099,  0.0032,  0.0059, -0.0185, -0.0157,  0.0199, -0.0103,\n",
      "         0.0128, -0.0071,  0.0060, -0.0017,  0.0193, -0.0058,  0.0088,  0.0186,\n",
      "         0.0204, -0.0083, -0.0048,  0.0203, -0.0055, -0.0006,  0.0091,  0.0208,\n",
      "         0.0058, -0.0205, -0.0191,  0.0023,  0.0120, -0.0082,  0.0052, -0.0067,\n",
      "         0.0011, -0.0206,  0.0206,  0.0155, -0.0099,  0.0152,  0.0142, -0.0187,\n",
      "         0.0036, -0.0102,  0.0036,  0.0060, -0.0188,  0.0154,  0.0024, -0.0159,\n",
      "         0.0125,  0.0064, -0.0159,  0.0122,  0.0144,  0.0046, -0.0181,  0.0091,\n",
      "         0.0059,  0.0046,  0.0191, -0.0092, -0.0105,  0.0195, -0.0141,  0.0063,\n",
      "         0.0032, -0.0074, -0.0033,  0.0153,  0.0035,  0.0159,  0.0099,  0.0168,\n",
      "         0.0093, -0.0178,  0.0173,  0.0112, -0.0092,  0.0096,  0.0187,  0.0168,\n",
      "        -0.0038, -0.0013, -0.0086,  0.0180, -0.0043, -0.0161,  0.0164, -0.0091,\n",
      "        -0.0002,  0.0050, -0.0205,  0.0182,  0.0077, -0.0025,  0.0104,  0.0086,\n",
      "         0.0056, -0.0038, -0.0012, -0.0185,  0.0052,  0.0153,  0.0203,  0.0065,\n",
      "         0.0204, -0.0044,  0.0005, -0.0086,  0.0170, -0.0118, -0.0096,  0.0001,\n",
      "        -0.0014,  0.0133, -0.0098,  0.0088, -0.0134,  0.0200,  0.0110, -0.0175,\n",
      "         0.0163,  0.0173,  0.0052, -0.0116,  0.0155,  0.0175, -0.0198,  0.0057,\n",
      "        -0.0061,  0.0011, -0.0118, -0.0044, -0.0129, -0.0028, -0.0193,  0.0087,\n",
      "         0.0121, -0.0088,  0.0181,  0.0009, -0.0090, -0.0133,  0.0120, -0.0093,\n",
      "         0.0019, -0.0097,  0.0034, -0.0001,  0.0036, -0.0055, -0.0165, -0.0055,\n",
      "         0.0023,  0.0122,  0.0154,  0.0129, -0.0126,  0.0046,  0.0005, -0.0034,\n",
      "        -0.0135, -0.0080, -0.0091,  0.0079,  0.0019, -0.0028,  0.0124, -0.0207,\n",
      "        -0.0122, -0.0084,  0.0140, -0.0076, -0.0108,  0.0066, -0.0204,  0.0159,\n",
      "        -0.0133,  0.0129, -0.0106,  0.0193,  0.0166,  0.0097, -0.0012, -0.0034,\n",
      "        -0.0080,  0.0195,  0.0057,  0.0071, -0.0106, -0.0094,  0.0178, -0.0125,\n",
      "        -0.0083, -0.0041,  0.0047, -0.0032, -0.0199,  0.0021,  0.0109,  0.0171,\n",
      "        -0.0109, -0.0144, -0.0091, -0.0039, -0.0053, -0.0063, -0.0170,  0.0057,\n",
      "        -0.0195, -0.0075, -0.0072, -0.0166, -0.0098, -0.0068, -0.0082, -0.0203],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.8220, 0.9648, 0.8099, 0.9963, 1.0072, 1.3474, 1.0021, 0.8548, 0.8131,\n",
      "        1.1362, 0.9010, 0.9249, 0.9493, 1.2444, 1.3977, 0.8335, 0.9395, 1.0658,\n",
      "        1.0129, 1.2027, 1.0239, 0.8571, 1.0727, 0.8883, 1.0237, 0.9067, 1.1989,\n",
      "        0.8713, 0.9228, 0.9729, 1.0627, 0.8406, 0.9651, 0.9987, 0.8459, 0.9768,\n",
      "        0.9203, 0.8972, 0.8708, 1.1544, 0.9470, 0.9381, 1.0315, 0.8699, 1.0535,\n",
      "        0.9866, 0.8249, 1.1933, 1.0213, 0.9513, 0.9728, 0.9965, 0.8593, 0.9743,\n",
      "        1.0987, 1.0363, 1.3997, 0.9855, 1.2589, 1.0525, 0.9223, 0.8904, 0.8863,\n",
      "        1.1204, 1.0956, 0.8690, 0.8878, 0.9409, 1.0419, 1.0088, 1.0152, 0.8500,\n",
      "        1.4130, 0.9242, 1.0035, 1.2945, 1.2093, 1.4239, 0.9162, 0.9935, 1.0829,\n",
      "        1.0206, 0.8899, 0.8806, 0.8741, 1.0569, 0.8737, 0.9345, 1.0307, 0.9682,\n",
      "        1.0025, 0.9166, 0.9524, 1.0017, 1.1243, 1.2006, 0.8196, 1.0110, 1.0174,\n",
      "        0.8583, 1.3141, 0.9462, 0.9623, 0.8859, 0.9275, 0.9948, 0.8402, 0.8517,\n",
      "        0.8900, 1.0716, 1.0344, 0.9789, 0.7986, 0.9046, 1.0953, 0.8973, 0.8811,\n",
      "        0.8100, 0.9723, 1.1412, 1.1951, 0.9528, 0.9212, 1.0027, 1.0530, 1.0257,\n",
      "        1.3062, 0.8993, 0.9966, 1.5252, 1.0862, 1.2747, 0.9020, 1.1523, 1.0403,\n",
      "        1.1512, 0.8582, 1.1354, 1.0734, 1.1295, 1.1138, 1.1005, 1.0582, 0.8521,\n",
      "        0.9692, 1.0476, 0.8453, 1.2231, 1.3762, 1.0323, 0.9001, 0.8854, 1.1007,\n",
      "        0.9023, 0.9561, 1.4079, 0.8891, 0.9728, 1.0668, 0.8421, 0.8170, 0.9186,\n",
      "        0.8647, 1.0709, 0.9716, 0.9382, 0.9625, 1.0668, 1.0338, 0.8848, 1.0071,\n",
      "        0.8719, 1.0627, 0.8674, 0.9543, 0.9245, 0.8564, 0.9735, 0.9431, 1.4663,\n",
      "        1.3584, 0.9287, 1.1121, 0.8848, 1.1514, 0.9391, 1.1177, 0.8164, 1.0321,\n",
      "        0.9085, 1.0981, 0.9661, 1.0206, 0.9316, 0.9162, 1.2622, 1.1180, 0.9296,\n",
      "        1.0645, 0.9826, 0.8581, 1.1380, 0.9411, 1.1742, 0.8854, 0.8763, 1.0234,\n",
      "        1.2108, 0.8791, 1.3830, 0.9507, 1.0107, 1.2671, 0.7123, 1.0351, 0.8160,\n",
      "        0.8060, 0.9278, 0.8986, 0.8842, 0.9423, 1.0635, 1.2291, 0.9227, 1.0784,\n",
      "        0.9362, 1.0485, 0.9059, 0.9476, 1.0629, 0.9373, 0.9328, 1.1658, 1.1181,\n",
      "        0.9962, 0.9900, 0.9311, 1.0602, 0.8902, 0.9737, 1.0271, 0.8512, 1.2280,\n",
      "        0.9175, 1.0348, 0.8291, 0.9523, 0.9035, 1.1150, 0.9567, 1.0996, 1.0058,\n",
      "        0.9571, 1.0087, 1.1096, 0.9343], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.3526, -0.2620, -0.2046, -0.1812, -0.3980,  0.0951, -0.1173, -0.3246,\n",
      "        -0.4784,  0.3530, -0.1936, -0.2485, -0.0722, -0.0032,  0.0584, -0.2023,\n",
      "        -0.3547,  0.3243, -0.2309, -0.0338, -0.2404, -0.3411, -0.0741, -0.1528,\n",
      "        -0.3352, -0.2451, -0.0264, -0.1695, -0.1554, -0.1484, -0.1073, -0.3010,\n",
      "        -0.1089,  0.0933, -0.3782, -0.1207, -0.3063, -0.3493, -0.1797, -0.1244,\n",
      "        -0.1622, -0.1559, -0.3351, -0.4148,  0.3338, -0.3189, -0.2121, -0.1284,\n",
      "        -0.2064, -0.2248, -0.1258, -0.1055, -0.2378, -0.1379, -0.1096, -0.1183,\n",
      "         0.2437, -0.1956, -0.0343, -0.2046, -0.3457, -0.3612, -0.1760, -0.2439,\n",
      "         0.3920, -0.2635, -0.2829, -0.2910, -0.0871, -0.1279, -0.3912, -0.2975,\n",
      "         0.2067, -0.3608, -0.1962, -0.2418,  0.0392,  0.2182, -0.2775, -0.1553,\n",
      "        -0.1173, -0.2967, -0.3582, -0.2422, -0.2680,  0.2550, -0.3179, -0.1024,\n",
      "        -0.0619, -0.3645, -0.0785, -0.2676, -0.2841,  0.1045,  0.3169,  0.1109,\n",
      "        -0.2862, -0.4050, -0.1956, -0.2705,  0.1760, -0.3180, -0.3284, -0.1943,\n",
      "        -0.3764, -0.0972, -0.1924, -0.2375, -0.2068, -0.3305, -0.2314, -0.1410,\n",
      "        -0.3023, -0.2629, -0.3132, -0.2569, -0.2267, -0.3474, -0.1602, -0.0744,\n",
      "         0.0616, -0.2730, -0.2579, -0.3249, -0.0983, -0.1751, -0.0202, -0.1435,\n",
      "        -0.1203,  0.2664, -0.1443, -0.0383, -0.3809, -0.0599, -0.2872,  0.2604,\n",
      "        -0.2899, -0.1578,  0.2289, -0.2682,  0.3349, -0.1356,  0.2759, -0.3256,\n",
      "        -0.2802, -0.3298, -0.1768,  0.0621,  0.1337, -0.1355, -0.3019, -0.3963,\n",
      "        -0.0619, -0.0936, -0.3116, -0.0598, -0.2963, -0.1535,  0.3453, -0.2700,\n",
      "        -0.3480, -0.2233, -0.3761,  0.3738, -0.1563, -0.1701, -0.1799,  0.3883,\n",
      "        -0.2377, -0.4000, -0.1106, -0.2770, -0.2053, -0.3337, -0.1349, -0.2287,\n",
      "        -0.2329, -0.1803, -0.4163,  0.1688, -0.0432, -0.2074,  0.2963, -0.3144,\n",
      "        -0.1440, -0.3517,  0.3118, -0.3117,  0.2600, -0.1346,  0.3879, -0.1638,\n",
      "        -0.4019, -0.4073, -0.3512,  0.2566, -0.0540, -0.3249, -0.2814, -0.0837,\n",
      "        -0.1945,  0.0453, -0.3950, -0.1051, -0.2671, -0.3210, -0.1321,  0.0746,\n",
      "        -0.1821,  0.1097, -0.1126, -0.0765,  0.0022, -0.1688, -0.0247, -0.2105,\n",
      "        -0.2352, -0.1584, -0.3125, -0.2140, -0.2977, -0.2788,  0.1150, -0.3124,\n",
      "         0.3119, -0.1828, -0.2745, -0.1964, -0.1374, -0.2576, -0.1690, -0.1835,\n",
      "         0.0149, -0.1863, -0.2433, -0.1742, -0.2778,  0.3255, -0.2536, -0.3649,\n",
      "        -0.1271, -0.3147,  0.2380, -0.1952, -0.2004, -0.3249, -0.2280, -0.1862,\n",
      "        -0.0966, -0.1723, -0.1246, -0.3137, -0.0988, -0.2258, -0.0352, -0.1791],\n",
      "       device='cuda:0', requires_grad=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter containing:\n",
      "tensor([[[[-1.9918e-03, -2.3639e-02, -1.1989e-01],\n",
      "          [ 1.8385e-02, -4.2591e-02, -1.7737e-01],\n",
      "          [ 2.8478e-02,  4.1234e-02, -2.8041e-04]],\n",
      "\n",
      "         [[-1.3575e-01, -1.5918e-01, -6.2477e-02],\n",
      "          [-1.3571e-01, -1.7520e-03, -3.9676e-02],\n",
      "          [-1.2926e-01,  1.7080e-01,  2.0880e-01]],\n",
      "\n",
      "         [[ 8.4388e-02,  6.9358e-04,  1.9223e-02],\n",
      "          [ 1.6025e-01,  1.9000e-01,  4.4132e-02],\n",
      "          [ 9.1221e-02,  5.4645e-01,  5.3348e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.6202e-02, -5.2383e-02,  9.4684e-02],\n",
      "          [ 1.4714e-02, -7.7329e-02,  9.4319e-02],\n",
      "          [ 2.3973e-02,  8.6878e-02,  1.5263e-01]],\n",
      "\n",
      "         [[ 5.7618e-02,  5.0230e-02,  1.9995e-01],\n",
      "          [ 1.2355e-02,  1.7803e-01,  2.1755e-01],\n",
      "          [-1.8260e-02,  2.7472e-01,  3.5664e-01]],\n",
      "\n",
      "         [[ 8.8070e-02,  5.2456e-02,  1.0516e-01],\n",
      "          [ 1.2544e-01,  1.5053e-01,  7.9762e-02],\n",
      "          [ 5.3360e-02,  5.0203e-01,  4.2249e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 3.7023e-02,  5.0233e-02, -9.6163e-02],\n",
      "          [ 4.6485e-03,  1.4343e-02, -4.2688e-02],\n",
      "          [ 6.6379e-02,  6.4921e-02,  5.7166e-03]],\n",
      "\n",
      "         [[-1.0430e-01,  4.7898e-02,  1.2006e-01],\n",
      "          [-1.8037e-01,  6.5628e-02,  3.4693e-02],\n",
      "          [-7.4042e-02,  5.6053e-02,  9.2602e-02]],\n",
      "\n",
      "         [[-4.6809e-02,  3.9909e-02,  7.7675e-02],\n",
      "          [ 2.6597e-02,  3.7909e-01,  3.7779e-01],\n",
      "          [-1.3219e-01,  2.7735e-01,  3.7145e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 6.4098e-02, -4.4853e-02,  3.1869e-02],\n",
      "          [ 2.3873e-02, -2.4477e-02,  9.7233e-02],\n",
      "          [ 5.1341e-02,  9.1891e-02,  9.6650e-02]],\n",
      "\n",
      "         [[ 8.3144e-02,  2.2657e-01,  3.2655e-01],\n",
      "          [ 7.1272e-03,  2.5501e-01,  3.2737e-01],\n",
      "          [ 2.2267e-02,  2.7747e-01,  3.8892e-01]],\n",
      "\n",
      "         [[ 1.1131e-02,  9.1623e-02,  1.3542e-01],\n",
      "          [ 1.5562e-02,  4.2295e-01,  3.8873e-01],\n",
      "          [-7.0015e-02,  2.9194e-01,  3.2276e-01]]],\n",
      "\n",
      "\n",
      "        [[[-2.0458e-01, -1.9695e-01, -3.1349e-01],\n",
      "          [-5.0134e-02, -4.1512e-02, -7.1708e-02],\n",
      "          [ 1.7992e-01,  1.9017e-01,  1.0060e-01]],\n",
      "\n",
      "         [[-1.8480e-01, -1.1511e-01, -2.3313e-02],\n",
      "          [ 3.1776e-03,  7.4661e-02,  6.8825e-02],\n",
      "          [ 2.7802e-01,  2.3269e-01,  3.8366e-02]],\n",
      "\n",
      "         [[-1.8129e-01, -8.9919e-02,  3.5352e-02],\n",
      "          [-1.7825e-01, -6.0401e-02,  1.3263e-02],\n",
      "          [-3.2361e-02, -6.6155e-02, -1.1169e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.9394e-03, -3.3822e-02, -3.1680e-01],\n",
      "          [-7.8636e-02, -3.1711e-02, -9.5154e-02],\n",
      "          [ 1.7885e-01,  1.6837e-01,  6.1426e-02]],\n",
      "\n",
      "         [[-1.1539e-01, -8.9171e-02,  1.7450e-02],\n",
      "          [-2.2448e-02, -4.7758e-03, -1.9710e-02],\n",
      "          [-2.3499e-02, -2.7237e-02, -1.2139e-01]],\n",
      "\n",
      "         [[-2.2327e-01, -2.2391e-01, -9.1260e-02],\n",
      "          [-1.0407e-01, -6.1429e-02, -2.4635e-02],\n",
      "          [-4.3878e-02, -7.6412e-02, -9.3371e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 3.8195e-02,  7.2401e-03, -6.7761e-02],\n",
      "          [ 1.2469e-01,  8.7156e-02, -4.9538e-02],\n",
      "          [ 3.0496e-02,  7.8287e-02,  3.5766e-03]],\n",
      "\n",
      "         [[ 6.8145e-04, -1.6906e-01, -1.2977e-01],\n",
      "          [ 6.8830e-03,  1.6512e-01,  4.7913e-02],\n",
      "          [-1.5670e-01,  1.1982e-01,  2.0840e-01]],\n",
      "\n",
      "         [[ 1.9828e-02,  9.4693e-02,  8.0703e-02],\n",
      "          [-9.0147e-02,  3.6201e-02, -3.5158e-02],\n",
      "          [-1.6316e-01,  2.8911e-01,  3.3475e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.1339e-02, -1.6888e-01, -1.3052e-01],\n",
      "          [ 6.3073e-02, -1.3972e-01, -3.0001e-02],\n",
      "          [-1.1736e-02, -2.6003e-02, -5.9259e-02]],\n",
      "\n",
      "         [[-1.9525e-02,  7.6070e-02,  1.1443e-01],\n",
      "          [-1.1782e-01,  1.8197e-01,  2.2070e-01],\n",
      "          [-2.3657e-01,  1.7296e-01,  2.5246e-01]],\n",
      "\n",
      "         [[ 9.2865e-02,  1.2484e-01,  1.4154e-01],\n",
      "          [-7.0300e-02,  6.8725e-02,  4.4400e-02],\n",
      "          [-1.3229e-01,  3.2741e-01,  3.7670e-01]]],\n",
      "\n",
      "\n",
      "        [[[-2.1512e-01, -1.6806e-01, -1.8359e-01],\n",
      "          [-6.6155e-02,  1.2797e-02, -1.2627e-03],\n",
      "          [ 1.0238e-01,  1.1670e-01,  7.7294e-02]],\n",
      "\n",
      "         [[-4.2781e-01, -1.9600e-01, -1.0646e-01],\n",
      "          [-1.4030e-01, -9.8827e-02, -9.7837e-02],\n",
      "          [ 2.0932e-01,  1.7714e-01,  1.4589e-01]],\n",
      "\n",
      "         [[-1.4262e-01, -1.0621e-01, -3.5611e-02],\n",
      "          [-2.0509e-01, -2.3988e-01, -1.0338e-01],\n",
      "          [ 5.1872e-02,  4.9441e-02,  2.6504e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.3667e-02, -1.4413e-02, -2.1330e-01],\n",
      "          [ 1.4756e-01,  1.5108e-01, -2.5733e-02],\n",
      "          [-1.1711e-02,  4.8586e-02,  1.7327e-02]],\n",
      "\n",
      "         [[-1.4696e-01, -2.0998e-01, -2.8516e-02],\n",
      "          [-1.1965e-01, -1.3380e-01, -1.3077e-01],\n",
      "          [ 1.7564e-01,  1.5733e-01,  4.6563e-02]],\n",
      "\n",
      "         [[-1.6682e-01, -1.7376e-01, -1.1154e-01],\n",
      "          [-1.5307e-01, -2.6414e-01, -1.2225e-01],\n",
      "          [ 2.0615e-02,  6.9249e-02,  3.3546e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 2.3680e-02, -5.6808e-02, -1.2846e-01],\n",
      "          [ 1.5670e-01,  6.7371e-02, -2.1829e-01],\n",
      "          [ 1.8019e-01,  1.2980e-01, -2.4052e-01]],\n",
      "\n",
      "         [[ 1.0192e-01,  7.5156e-02, -1.6092e-02],\n",
      "          [ 1.1380e-01,  1.3099e-01, -2.9257e-02],\n",
      "          [ 9.9139e-02,  2.4002e-02, -2.6221e-02]],\n",
      "\n",
      "         [[-9.8367e-02, -9.3137e-02,  1.5741e-01],\n",
      "          [ 7.1992e-02,  3.3164e-03, -2.4769e-02],\n",
      "          [-1.4173e-01, -1.6423e-01, -1.0667e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.1269e-02, -1.5016e-02, -1.0226e-01],\n",
      "          [ 4.3265e-02,  6.1051e-02, -1.3667e-01],\n",
      "          [ 9.9334e-02,  2.0542e-01, -4.5737e-02]],\n",
      "\n",
      "         [[ 6.3944e-02, -3.6418e-03,  2.3421e-01],\n",
      "          [ 6.5638e-02,  1.1619e-01,  5.8066e-02],\n",
      "          [-5.2186e-02,  7.6189e-02,  7.8721e-03]],\n",
      "\n",
      "         [[-1.7764e-02, -7.6753e-02,  1.8276e-01],\n",
      "          [ 1.9905e-01,  7.9523e-02, -1.6333e-02],\n",
      "          [-1.3255e-01, -1.5160e-01, -1.7329e-01]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 2.0250e-03,  1.2521e-02, -1.3703e-02, -6.9842e-03,  9.1494e-03,\n",
      "        -1.1736e-02,  5.9503e-04,  1.4882e-02,  8.2807e-03, -3.1070e-03,\n",
      "        -6.1878e-03, -9.5032e-03, -5.5010e-03,  6.5831e-03, -1.8899e-02,\n",
      "         5.4280e-03,  1.0101e-02,  1.8064e-02,  2.0106e-02,  9.8200e-03,\n",
      "        -1.2627e-02,  1.3702e-02,  1.0353e-02,  8.9936e-03, -1.5342e-02,\n",
      "         1.5346e-02, -2.4245e-03,  1.7429e-02, -1.1372e-02,  1.9062e-02,\n",
      "         7.6190e-03,  2.8818e-03,  5.4285e-03,  1.8590e-02,  1.3152e-02,\n",
      "        -9.5911e-03, -2.0296e-02,  1.1599e-02, -1.8518e-02,  7.3553e-03,\n",
      "        -1.5585e-02, -1.3177e-02, -1.2579e-02, -1.8820e-02,  3.2414e-04,\n",
      "         1.5092e-02, -1.8887e-02, -1.7841e-02, -7.0254e-03, -1.7724e-02,\n",
      "        -9.3461e-03,  2.3614e-03,  3.5909e-03, -1.8897e-02,  1.5369e-02,\n",
      "         1.7045e-02,  5.8925e-03,  1.8913e-02,  1.3432e-02, -1.6470e-02,\n",
      "         7.5231e-03, -3.5713e-03, -3.6071e-03, -2.0393e-02, -5.4769e-03,\n",
      "         1.7155e-02, -6.8773e-03,  2.7024e-03, -1.1082e-02,  6.0818e-03,\n",
      "         7.0627e-03,  6.7284e-03, -1.2585e-02,  1.9060e-02,  7.9338e-03,\n",
      "         1.3599e-02,  7.9368e-03, -1.1758e-02,  8.4282e-03,  1.7712e-02,\n",
      "         1.0628e-02, -1.4502e-02, -6.8418e-03,  2.0292e-02,  1.1492e-03,\n",
      "         6.7900e-03,  1.4750e-03,  1.4720e-02,  4.3148e-03, -1.4463e-02,\n",
      "         1.8894e-03, -2.8553e-03, -8.6732e-04, -1.1611e-02,  3.4895e-03,\n",
      "        -4.9476e-03,  1.4819e-02,  2.0011e-02, -1.6368e-02,  1.3253e-02,\n",
      "        -9.3010e-03, -3.4188e-03,  8.2179e-03,  1.1859e-02,  1.7155e-04,\n",
      "         1.6148e-02, -1.2502e-02, -2.0039e-02,  1.8846e-02, -8.0191e-03,\n",
      "         1.4591e-02, -9.1823e-03, -8.4324e-03,  1.9417e-02, -1.3978e-03,\n",
      "         1.8233e-03, -1.0242e-02,  1.2533e-03,  1.7275e-02,  2.4224e-03,\n",
      "        -3.3622e-03,  1.8076e-02,  7.6747e-03, -1.3117e-02, -1.0977e-02,\n",
      "        -9.1480e-03, -1.7759e-03,  1.0376e-02, -1.1760e-02,  1.1737e-02,\n",
      "         8.5275e-03, -1.3099e-02, -1.3735e-02,  1.8412e-02, -4.3123e-03,\n",
      "         7.8626e-03, -4.7074e-03,  6.1132e-03,  2.0478e-02,  4.3436e-04,\n",
      "         1.3731e-02,  1.8652e-02, -1.9928e-02,  2.0289e-02, -2.2936e-03,\n",
      "        -1.4296e-02, -1.3339e-02, -1.7498e-02, -9.3150e-03, -1.5258e-02,\n",
      "         1.5902e-02, -1.7047e-02, -1.5399e-03,  1.0005e-03,  2.0194e-02,\n",
      "        -9.8993e-03, -7.3854e-03,  7.3103e-04, -3.4400e-03, -1.2179e-02,\n",
      "         7.1236e-03, -1.4659e-02,  1.8866e-02,  1.6596e-02, -3.6084e-03,\n",
      "         8.2322e-03,  3.9545e-03, -1.6734e-03,  4.4085e-03, -1.0330e-03,\n",
      "         5.0220e-03, -2.0787e-02,  1.8712e-02,  1.3071e-02,  1.1348e-02,\n",
      "        -1.1103e-02,  1.1403e-02,  1.0522e-02, -9.0814e-03, -2.2419e-03,\n",
      "         1.0134e-03,  1.0243e-02,  6.8546e-04,  1.8858e-02, -7.0986e-05,\n",
      "        -1.9508e-02, -1.9095e-02,  5.9285e-03,  3.5044e-03,  6.8976e-03,\n",
      "        -3.6712e-03, -1.1934e-02, -1.6052e-02, -8.2549e-03, -1.1746e-02,\n",
      "         1.8158e-02,  1.8610e-02, -9.9192e-03,  8.0812e-03, -4.7442e-03,\n",
      "        -8.3675e-03,  1.2698e-02,  7.7997e-03,  1.4960e-02, -6.0414e-03,\n",
      "        -1.0931e-03,  8.8034e-03,  1.4927e-02,  1.3366e-02,  1.9841e-02,\n",
      "         2.0336e-02,  1.4204e-03, -5.6218e-03, -1.9253e-02,  2.6757e-03,\n",
      "        -1.3791e-02, -1.1450e-02, -2.2678e-03,  2.0371e-02,  6.9380e-03,\n",
      "        -1.1016e-02, -1.8980e-02, -9.9070e-03,  1.8502e-02, -1.8288e-02,\n",
      "        -2.5097e-03, -1.2384e-02, -1.3779e-02,  1.4783e-02,  1.4760e-02,\n",
      "         4.4340e-03, -1.6860e-02,  1.3529e-02,  5.1502e-03, -8.3208e-03,\n",
      "        -1.0282e-02, -5.3040e-03, -5.9240e-03,  4.5720e-03,  7.2582e-03,\n",
      "         5.7628e-03, -1.5291e-02, -9.3804e-04, -3.5139e-03,  1.9085e-02,\n",
      "         1.8638e-02, -1.3297e-02,  3.9866e-03,  9.5394e-03, -1.6180e-02,\n",
      "        -6.3953e-03,  1.9232e-02,  4.1225e-03,  8.7105e-03, -7.3695e-03,\n",
      "        -2.4691e-03, -1.2975e-02, -1.6899e-02, -7.7111e-03,  9.4803e-03,\n",
      "         1.2813e-02,  1.2317e-02, -5.2928e-03, -1.2217e-02, -8.4688e-03,\n",
      "         4.9629e-03,  1.3169e-04,  3.8420e-03,  9.0439e-03, -8.8744e-03,\n",
      "         1.7955e-02,  2.0361e-03, -8.2499e-03, -4.2938e-03,  1.1398e-02,\n",
      "        -5.2564e-03,  1.8706e-02,  1.7965e-02, -2.0680e-02,  1.0513e-02,\n",
      "        -1.2103e-02,  1.8319e-02, -1.2649e-02,  1.1587e-02,  8.2691e-03,\n",
      "        -1.6984e-02, -1.9184e-02,  7.5693e-03, -1.6938e-02,  4.0752e-03,\n",
      "        -3.3311e-03,  9.1168e-03,  5.0878e-03, -1.9704e-02, -7.4222e-03,\n",
      "         7.2180e-03,  2.9179e-03, -1.2591e-02,  2.0395e-02, -1.5101e-02,\n",
      "         1.7604e-02,  2.0211e-02, -1.8324e-02, -6.7246e-03, -7.6203e-03,\n",
      "        -8.8556e-03, -1.5567e-02, -1.1186e-02, -1.1621e-03,  1.5726e-03,\n",
      "        -1.8450e-02, -4.1610e-03, -1.6707e-02, -3.1631e-03, -1.1466e-03,\n",
      "        -1.8457e-02,  9.5778e-03,  1.1105e-03, -1.3583e-02,  1.3139e-02,\n",
      "         1.8620e-02, -1.3596e-02,  1.7407e-03, -9.4218e-03, -1.5746e-02,\n",
      "         1.7561e-02,  1.9971e-02, -3.7818e-03,  1.0361e-02,  1.8795e-02,\n",
      "        -1.7816e-02,  2.0812e-02, -1.4948e-02, -1.8134e-02,  5.9636e-03,\n",
      "         1.2488e-02, -4.0241e-03,  2.7279e-03,  1.0687e-02, -1.2671e-02,\n",
      "        -9.5359e-03, -5.8115e-03,  8.6473e-03, -1.4087e-02, -2.0264e-02,\n",
      "         1.9427e-02, -4.0437e-03, -7.2720e-03, -1.7862e-02,  7.4046e-03,\n",
      "        -1.3448e-02,  5.8220e-03,  8.9081e-03, -7.1851e-03, -8.0821e-03,\n",
      "         1.0554e-02,  1.0565e-02,  1.0227e-03, -7.9413e-03, -9.6249e-03,\n",
      "        -1.2678e-02,  2.9769e-03,  1.1662e-02, -1.8650e-02, -5.9271e-03,\n",
      "        -5.2097e-03, -2.3305e-03,  1.7477e-02,  2.8258e-03,  1.3740e-02,\n",
      "         6.8216e-03,  1.6112e-02,  1.6075e-02,  4.3578e-03, -1.5332e-03,\n",
      "         1.5347e-02, -5.1008e-03, -1.7260e-02, -4.8581e-03,  1.9393e-02,\n",
      "        -2.9141e-03, -1.8156e-02, -8.8234e-03, -1.9503e-02, -2.2656e-03,\n",
      "         1.6603e-02,  9.0380e-03,  3.9548e-03, -5.0168e-03,  5.6290e-03,\n",
      "        -1.1931e-02, -1.9206e-02,  2.0815e-02,  1.5761e-03,  1.3060e-02,\n",
      "         5.3039e-03, -6.3636e-03,  2.8235e-03,  1.4796e-02,  2.0493e-02,\n",
      "        -7.4604e-03,  1.0456e-02, -6.1401e-03,  1.7272e-03, -1.1812e-02,\n",
      "        -1.1730e-02,  1.4423e-02,  1.7069e-02,  9.1712e-03,  1.9018e-02,\n",
      "        -1.0430e-02, -1.1253e-02, -1.4071e-02,  1.8858e-02,  1.3424e-02,\n",
      "         3.2326e-03, -6.3511e-04,  1.3339e-02,  9.4946e-03, -1.6628e-02,\n",
      "         1.0358e-02, -1.0959e-02,  1.5595e-02,  2.5966e-03,  1.6955e-02,\n",
      "        -6.2598e-03,  7.9043e-03, -9.6797e-03, -5.5288e-03, -1.6775e-02,\n",
      "         1.7600e-02,  2.0271e-02,  2.3375e-03, -6.2585e-03, -1.6984e-02,\n",
      "         1.0702e-02,  1.9516e-02, -6.9168e-03,  2.7506e-03, -1.3227e-02,\n",
      "         2.3900e-03, -1.1599e-02,  1.3320e-02, -8.0647e-03,  9.5534e-03,\n",
      "        -7.6266e-03, -1.6840e-02,  1.2014e-02,  1.5904e-02,  1.0679e-02,\n",
      "         5.1096e-03, -1.4026e-02, -5.3405e-03,  1.4025e-02,  2.5679e-04,\n",
      "         1.5280e-03, -4.9735e-03,  1.3612e-02,  1.2625e-03,  1.8006e-02,\n",
      "        -1.1202e-02,  1.6967e-02,  5.0988e-03,  1.0142e-02,  1.4773e-02,\n",
      "        -1.5938e-02,  6.3394e-03, -3.5491e-03,  5.9111e-03, -1.2450e-02,\n",
      "         1.5242e-02,  2.7860e-03,  4.4151e-03, -1.3248e-02,  1.5850e-03,\n",
      "        -3.6832e-03,  2.7465e-03,  1.8738e-02,  1.8073e-02,  1.1221e-03,\n",
      "         7.9885e-03,  4.7880e-03,  1.0286e-02, -1.3681e-02, -4.7215e-03,\n",
      "         1.5622e-02, -1.5885e-02,  7.2832e-03,  1.7839e-02, -5.1066e-03,\n",
      "         8.9141e-03, -4.4323e-03, -1.1577e-02,  3.8459e-03, -1.7032e-02,\n",
      "        -5.5452e-03,  9.1290e-03,  6.3286e-03, -1.4848e-02, -1.1346e-02,\n",
      "         1.5170e-03, -1.3560e-02,  6.2591e-03, -1.9039e-02,  1.1309e-02,\n",
      "        -8.7275e-03,  1.0266e-02,  1.6981e-02, -3.0136e-03,  9.8372e-03,\n",
      "        -9.7055e-03,  1.2185e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.9869, 0.9631, 1.1438, 1.2929, 1.0111, 1.2373, 0.5367, 0.8920, 0.9462,\n",
      "        0.9126, 0.8173, 0.9951, 0.6472, 0.6237, 0.8607, 0.6452, 1.0718, 0.9129,\n",
      "        0.7441, 0.8988, 1.0706, 0.8167, 0.9656, 0.6873, 0.6841, 1.2597, 1.5962,\n",
      "        0.8791, 0.9283, 0.7707, 0.7776, 0.6685, 0.8018, 0.6135, 1.2269, 0.8686,\n",
      "        0.9062, 1.5287, 0.9345, 1.1681, 0.7903, 0.6455, 0.8853, 0.7894, 1.4982,\n",
      "        0.9775, 0.9263, 0.9354, 0.7524, 0.9935, 1.0705, 0.8676, 0.9045, 1.0856,\n",
      "        0.8833, 0.8122, 1.3631, 0.8484, 1.0000, 1.3713, 0.8958, 1.1035, 0.9241,\n",
      "        1.0223, 0.8240, 1.0273, 1.5117, 0.5911, 0.6385, 1.3989, 0.9207, 0.9740,\n",
      "        0.9936, 0.8689, 1.0578, 1.0378, 0.6295, 0.8970, 0.8714, 0.8707, 1.0055,\n",
      "        0.9429, 0.5927, 0.9681, 0.7874, 1.0059, 0.9383, 0.8187, 1.3161, 1.4163,\n",
      "        0.7179, 1.0075, 0.7710, 0.8173, 0.8619, 0.9606, 0.8308, 0.9059, 0.4921,\n",
      "        0.8484, 0.8273, 0.8020, 0.7889, 0.9053, 0.7431, 1.0068, 1.0839, 0.9332,\n",
      "        1.0527, 1.0383, 0.8864, 0.8081, 1.1342, 1.1276, 1.2498, 0.8628, 0.9789,\n",
      "        1.0998, 0.9900, 0.8499, 0.8213, 1.1207, 0.9139, 0.8878, 1.3814, 0.9828,\n",
      "        0.9739, 1.1101, 0.8980, 0.8858, 0.9312, 1.0296, 0.7385, 0.8775, 0.9248,\n",
      "        1.3395, 0.9254, 0.9816, 1.0058, 1.3912, 0.8823, 1.3846, 0.8886, 1.0102,\n",
      "        0.8791, 0.8152, 0.8982, 0.9413, 1.0582, 0.6407, 1.0146, 0.8891, 0.8626,\n",
      "        0.5983, 0.7430, 0.8120, 0.9468, 0.9118, 0.7965, 0.9080, 1.3761, 1.0110,\n",
      "        0.8689, 0.8271, 0.4998, 0.9379, 0.9223, 0.7734, 1.3147, 1.0589, 1.1881,\n",
      "        1.0344, 0.9966, 0.8377, 0.7398, 0.9791, 1.0220, 1.0213, 0.6911, 0.8403,\n",
      "        0.9036, 0.9819, 0.6971, 0.9023, 1.0565, 0.8793, 0.9921, 0.9755, 0.8690,\n",
      "        0.7608, 1.0203, 1.0645, 0.9022, 0.6364, 1.0094, 0.8581, 0.9954, 1.0610,\n",
      "        0.8364, 1.0790, 0.8301, 0.8053, 0.7282, 0.5436, 0.8760, 0.7936, 1.0237,\n",
      "        0.9208, 0.8566, 0.9853, 0.7045, 1.0116, 0.3984, 0.8269, 1.0271, 0.8754,\n",
      "        0.9711, 0.5733, 1.0023, 0.8533, 0.8001, 0.8870, 0.7594, 0.7134, 0.7459,\n",
      "        1.0824, 0.7742, 0.8235, 0.8798, 0.8278, 0.7294, 0.9106, 0.9263, 0.8522,\n",
      "        1.0260, 0.9914, 0.9324, 0.9242, 0.9343, 0.8436, 0.7772, 1.1187, 0.9676,\n",
      "        0.8769, 0.7781, 0.6591, 0.8723, 0.8333, 0.9775, 0.8352, 0.9847, 1.0139,\n",
      "        1.0042, 0.9170, 0.4514, 0.8088, 0.7596, 0.6791, 1.0344, 0.9719, 1.3733,\n",
      "        0.9513, 0.9865, 0.8483, 0.7010, 0.6956, 0.9816, 0.6714, 1.1657, 0.9656,\n",
      "        0.8734, 0.9612, 0.8389, 0.7900, 0.9404, 0.7286, 0.8600, 0.9246, 0.7213,\n",
      "        0.8361, 0.8568, 0.8875, 0.9452, 1.2201, 0.7216, 0.9334, 0.9333, 1.0067,\n",
      "        0.9337, 0.6676, 0.9746, 0.7377, 0.9286, 0.8943, 1.0868, 0.9151, 0.8787,\n",
      "        1.0006, 1.2810, 0.8104, 0.6219, 1.2590, 0.7698, 0.9471, 0.7135, 0.7927,\n",
      "        1.1891, 0.5943, 0.8069, 0.8137, 0.9092, 0.8088, 1.1518, 0.6618, 1.0230,\n",
      "        0.7555, 0.6420, 1.1158, 0.9791, 0.5490, 0.9506, 0.7184, 1.0588, 0.9706,\n",
      "        0.9362, 0.9770, 0.7607, 0.5559, 1.0295, 0.7628, 0.8741, 0.7388, 0.8536,\n",
      "        0.8459, 0.9451, 1.1066, 0.9376, 0.9984, 1.0044, 0.9859, 1.0803, 0.8589,\n",
      "        1.4399, 0.6361, 1.2347, 1.0870, 0.7225, 1.1810, 0.8158, 1.0931, 0.9638,\n",
      "        0.5416, 0.8889, 0.7062, 1.3131, 0.9227, 0.9831, 0.6659, 1.0184, 0.5560,\n",
      "        1.1400, 1.0136, 0.7462, 0.6180, 0.8547, 1.1096, 1.0539, 0.8979, 0.9537,\n",
      "        0.9163, 0.7599, 1.0453, 1.1340, 0.9473, 0.8779, 0.8896, 0.6926, 0.8840,\n",
      "        0.8351, 0.7135, 1.4314, 1.0312, 1.0331, 1.3982, 0.7491, 0.7975, 0.8568,\n",
      "        0.9669, 0.8696, 0.6438, 0.9839, 0.7618, 0.6930, 1.1673, 0.8494, 1.0981,\n",
      "        0.9408, 0.9346, 1.0206, 0.5820, 0.8245, 0.9340, 0.7955, 0.9968, 0.8490,\n",
      "        1.2353, 1.0391, 0.9397, 0.9834, 0.9616, 0.9041, 1.3148, 0.7365, 1.1153,\n",
      "        1.0288, 0.8947, 0.7993, 0.9108, 0.8583, 1.1112, 1.0802, 0.6554, 0.8806,\n",
      "        0.9434, 0.9621, 0.8448, 0.9119, 0.9079, 0.9393, 0.6854, 1.0011, 1.0107,\n",
      "        1.0410, 0.9707, 0.8710, 0.8990, 0.8260, 1.1275, 0.7759, 0.9092, 0.7847,\n",
      "        0.9078, 0.7275, 1.0529, 1.1165, 0.7886, 0.5825, 0.8135, 0.7897, 0.9271,\n",
      "        1.0175, 0.9545, 1.0118, 0.6271, 0.9282, 0.5832, 0.9949, 0.9007, 1.1571,\n",
      "        0.6316, 0.8303, 0.7933, 0.9131, 1.0342, 0.8870, 0.8097, 0.9381, 0.8039,\n",
      "        0.9750, 1.0107, 0.6040, 0.8428, 0.9966, 0.6787, 0.8422, 0.5172, 0.8631,\n",
      "        0.9780, 0.9679, 0.7978, 1.0479, 0.9929, 0.9079, 0.6596, 0.7468, 0.7288,\n",
      "        0.7072, 1.0125, 0.8768, 1.0938, 0.9607, 0.8523, 1.0474, 0.7986, 0.9452,\n",
      "        0.9164, 0.9415, 1.0412, 0.7770, 0.8317, 0.8509, 0.7835, 0.8303, 0.8414,\n",
      "        1.0035, 1.1894, 0.9186, 0.8881, 1.1036, 1.0186, 0.9649, 1.0530],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.1134, -0.1137,  0.0531,  0.2288, -0.2358,  0.0113, -0.2539, -0.1757,\n",
      "        -0.2341, -0.3326, -0.2757, -0.3549, -0.2822, -0.1541, -0.0821, -0.1324,\n",
      "        -0.1121,  0.0610, -0.1484, -0.4486, -0.2057, -0.1636,  0.0169, -0.2372,\n",
      "        -0.2237, -0.1956,  0.3134, -0.3439,  0.0110, -0.2236, -0.2557, -0.2317,\n",
      "        -0.2860, -0.3557,  0.0915, -0.0614, -0.1934,  0.5212, -0.3623, -0.0498,\n",
      "        -0.3191, -0.4558,  0.0526, -0.4007,  0.3951, -0.2403, -0.3098,  0.1044,\n",
      "        -0.2929, -0.1344, -0.1071,  0.0010,  0.0039, -0.1559, -0.2345, -0.3627,\n",
      "        -0.1127, -0.1237, -0.1938, -0.0225, -0.0043, -0.0204,  0.0241, -0.1065,\n",
      "        -0.1288,  0.0233,  0.4936, -0.2488, -0.3317, -0.0524, -0.1629,  0.0291,\n",
      "         0.0066, -0.0841, -0.1145, -0.1202, -0.3463, -0.4234,  0.0052, -0.2869,\n",
      "        -0.0031, -0.3006, -0.1653, -0.1126, -0.2055, -0.0116, -0.2143, -0.0731,\n",
      "         0.0547,  0.3445, -0.2951, -0.2105, -0.4163, -0.1447, -0.3407, -0.1623,\n",
      "         0.0408, -0.0334, -0.3157, -0.3029, -0.0798, -0.4369, -0.1594, -0.2983,\n",
      "        -0.3278,  0.0216,  0.0045, -0.2536,  0.1778, -0.0483, -0.2763, -0.3694,\n",
      "        -0.2786,  0.0389,  0.0890, -0.1630,  0.0220,  0.0456, -0.2969, -0.2355,\n",
      "        -0.0455, -0.0423, -0.1804, -0.3823,  0.1783,  0.0095, -0.3236, -0.2150,\n",
      "        -0.3675, -0.0955, -0.0312, -0.0990, -0.3841,  0.0443, -0.1213,  0.3368,\n",
      "        -0.1489,  0.0225, -0.3101,  0.1985, -0.2070,  0.2855, -0.2015, -0.2983,\n",
      "        -0.0896, -0.3515, -0.2608,  0.0066, -0.0858, -0.4692, -0.2363, -0.2624,\n",
      "        -0.1131, -0.2370, -0.3938, -0.3087, -0.3953, -0.3533, -0.0686, -0.3776,\n",
      "         0.4844, -0.0939, -0.4214, -0.4171, -0.3070, -0.0511, -0.0246, -0.3435,\n",
      "        -0.0550, -0.1893, -0.1237,  0.0113, -0.1667, -0.3053, -0.1732, -0.0106,\n",
      "        -0.1430, -0.1088, -0.2199, -0.2604, -0.1936, -0.3558, -0.2871, -0.3526,\n",
      "        -0.2012, -0.1429,  0.0153, -0.2161, -0.0998, -0.1040, -0.2349, -0.1707,\n",
      "        -0.0726, -0.2179, -0.2713,  0.0108, -0.2665, -0.1900, -0.2011, -0.1939,\n",
      "        -0.1514, -0.1283, -0.2704, -0.4174,  0.0400, -0.2243, -0.0696, -0.0236,\n",
      "        -0.3142, -0.2821, -0.3340, -0.0324, -0.2815, -0.1563, -0.2381, -0.0106,\n",
      "        -0.1674, -0.2039,  0.1274, -0.1861, -0.2273, -0.1569, -0.4014, -0.3090,\n",
      "        -0.0147, -0.1035, -0.2288, -0.0359, -0.0273, -0.1799, -0.3371,  0.0590,\n",
      "        -0.2079, -0.1114,  0.0079, -0.3154, -0.1636, -0.0185, -0.3624, -0.1754,\n",
      "        -0.3272,  0.0440, -0.2317, -0.3032, -0.3987, -0.1866, -0.3984, -0.0846,\n",
      "        -0.0672, -0.2544, -0.3423,  0.0253, -0.2814,  0.0850, -0.3626, -0.0305,\n",
      "        -0.3336, -0.0144, -0.0185, -0.1162,  0.1924, -0.2757, -0.1857, -0.3097,\n",
      "        -0.4088, -0.3098, -0.0729, -0.2376, -0.1300, -0.3940, -0.1472, -0.0039,\n",
      "        -0.1648, -0.1529, -0.1698, -0.2264, -0.1909, -0.2543, -0.3261, -0.3122,\n",
      "        -0.2584, -0.2083, -0.0106,  0.1077, -0.1370,  0.0308, -0.1861, -0.0691,\n",
      "        -0.1292, -0.3091, -0.3514, -0.2810, -0.1877, -0.0332, -0.0735, -0.0006,\n",
      "        -0.1521, -0.1388,  0.1101, -0.1258, -0.2509,  0.0454, -0.3046, -0.2172,\n",
      "        -0.3422,  0.0334, -0.0886, -0.2871, -0.2023, -0.3901,  0.0212,  0.0582,\n",
      "        -0.0552, -0.2198, -0.0622, -0.5109, -0.3136,  0.0658, -0.0681, -0.2457,\n",
      "         0.0577, -0.5375, -0.3426, -0.3310, -0.3251, -0.2094, -0.2459, -0.2660,\n",
      "        -0.1893, -0.2436, -0.3503, -0.4828, -0.1660, -0.3779,  0.0722, -0.1647,\n",
      "        -0.1832, -0.0017,  0.0280, -0.1036, -0.2093, -0.0272,  0.2362, -0.4392,\n",
      "         0.1150, -0.1246, -0.1364, -0.1301, -0.2127, -0.1068, -0.1746, -0.2213,\n",
      "         0.0350, -0.3051,  0.0825, -0.1911, -0.0885, -0.3617, -0.0818, -0.1632,\n",
      "         0.0066, -0.0587,  0.0537, -0.1972, -0.4381, -0.1233, -0.1669, -0.0668,\n",
      "         0.0706, -0.2593, -0.3500,  0.0274, -0.1746, -0.0551, -0.1812,  0.0414,\n",
      "        -0.2655,  0.0154, -0.2484, -0.3512,  0.1409, -0.1072, -0.2059, -0.1184,\n",
      "        -0.3739, -0.3497, -0.3696, -0.1530, -0.3231, -0.2452,  0.0914, -0.2561,\n",
      "        -0.1928, -0.0694, -0.2662, -0.0172, -0.1798, -0.3639, -0.3687, -0.2959,\n",
      "        -0.2589, -0.0921, -0.2112, -0.2680, -0.1228,  0.0510, -0.1554, -0.3588,\n",
      "        -0.1398, -0.2418, -0.0290,  0.1856, -0.2983, -0.1210,  0.0289, -0.1072,\n",
      "        -0.3060, -0.2317, -0.2961, -0.3915,  0.0035, -0.2988, -0.4149, -0.1598,\n",
      "        -0.0663, -0.0366, -0.1907, -0.1123,  0.0504, -0.3277, -0.2426,  0.0217,\n",
      "        -0.0968, -0.2592, -0.1661, -0.2571, -0.2967, -0.1637, -0.5021, -0.1913,\n",
      "        -0.2845,  0.0150, -0.3633, -0.2775, -0.1572, -0.3381, -0.1958, -0.1968,\n",
      "        -0.3361, -0.2126, -0.0885, -0.1395, -0.2786, -0.2277, -0.1697, -0.2008,\n",
      "        -0.1323, -0.3106, -0.0348, -0.4613, -0.4583, -0.3502, -0.3292, -0.1880,\n",
      "        -0.1740, -0.3503, -0.1684, -0.1358, -0.0240, -0.2892, -0.3184,  0.0312,\n",
      "        -0.1538, -0.1789, -0.0680, -0.1987,  0.0722, -0.3490, -0.1941, -0.1835,\n",
      "         0.1233, -0.0679, -0.1293, -0.3704, -0.2389, -0.1591, -0.1423, -0.1312,\n",
      "        -0.4746, -0.1538, -0.3349, -0.3346, -0.2550, -0.2723, -0.0794, -0.0726,\n",
      "        -0.1207, -0.3663, -0.1185, -0.3180,  0.1835, -0.2183, -0.3023, -0.0372,\n",
      "        -0.2919, -0.2449, -0.3862,  0.0081, -0.0836, -0.0711, -0.1003, -0.0425],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 8.8221e-02,  9.3766e-02, -1.0976e-02],\n",
      "          [ 5.7838e-02,  1.0417e-01,  6.2035e-02],\n",
      "          [ 1.1036e-01,  1.3598e-01,  1.6958e-01]],\n",
      "\n",
      "         [[ 1.1619e-01,  1.4354e-01,  6.8333e-02],\n",
      "          [ 7.0758e-02,  7.7529e-02, -1.7710e-02],\n",
      "          [ 9.8280e-02,  1.2522e-01,  9.4325e-02]],\n",
      "\n",
      "         [[-6.3877e-02,  1.3554e-02, -1.9364e-02],\n",
      "          [ 9.8914e-02,  8.1941e-02,  1.6547e-01],\n",
      "          [-1.6818e-02,  2.1275e-02,  1.8632e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 7.8761e-02,  8.3855e-02,  3.2246e-02],\n",
      "          [ 2.3740e-02,  4.8748e-02,  9.4471e-02],\n",
      "          [ 1.0185e-01,  1.2454e-01,  1.9248e-01]],\n",
      "\n",
      "         [[-4.8754e-02, -2.1881e-03, -1.4012e-02],\n",
      "          [ 1.3897e-01,  1.0999e-01,  5.4398e-02],\n",
      "          [-5.3081e-02,  8.1187e-03,  6.3251e-02]],\n",
      "\n",
      "         [[-8.9775e-02, -1.4353e-01,  1.0770e-01],\n",
      "          [ 2.2934e-02, -7.4970e-02, -4.6424e-02],\n",
      "          [ 4.6331e-02, -1.4879e-01, -1.5489e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.0333e-01, -1.8214e-01, -1.1287e-01],\n",
      "          [ 9.7614e-03, -1.1605e-01, -7.2845e-02],\n",
      "          [-9.8773e-02,  1.6388e-02,  3.8516e-02]],\n",
      "\n",
      "         [[-1.3163e-01, -1.3985e-01, -7.9486e-02],\n",
      "          [-1.1109e-01, -1.3134e-01, -8.8694e-02],\n",
      "          [-1.4043e-01, -2.5566e-02, -2.4135e-02]],\n",
      "\n",
      "         [[ 9.4651e-02, -1.9012e-01, -1.9717e-01],\n",
      "          [-8.1138e-02, -1.6015e-01, -4.2805e-02],\n",
      "          [-1.1700e-01, -3.0267e-02,  3.0798e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.7918e-02, -6.2994e-02, -3.4841e-02],\n",
      "          [ 7.6597e-02,  6.8864e-03,  1.2995e-02],\n",
      "          [ 3.6519e-02,  1.3225e-01,  6.9030e-02]],\n",
      "\n",
      "         [[ 1.1868e-02, -2.1154e-01, -5.5077e-02],\n",
      "          [-9.5820e-02, -9.0953e-02,  8.3742e-02],\n",
      "          [-3.9772e-02,  1.4469e-02,  2.1149e-01]],\n",
      "\n",
      "         [[-1.3475e-01,  1.0778e-01,  3.2475e-01],\n",
      "          [-1.9355e-01,  5.1307e-02,  2.8931e-01],\n",
      "          [-1.2048e-01, -5.3203e-02,  3.3769e-01]]],\n",
      "\n",
      "\n",
      "        [[[-3.1000e-01, -4.8898e-01, -5.4640e-01],\n",
      "          [-2.0800e-01, -4.1729e-01, -4.6424e-01],\n",
      "          [-1.7970e-01, -2.0172e-01, -1.8341e-01]],\n",
      "\n",
      "         [[-2.7402e-01, -4.3902e-01, -5.3213e-01],\n",
      "          [-3.1133e-01, -4.7840e-01, -4.7850e-01],\n",
      "          [-2.5733e-01, -3.7559e-01, -2.9931e-01]],\n",
      "\n",
      "         [[ 7.1539e-02,  5.7891e-02, -7.5439e-02],\n",
      "          [-1.0618e-01,  1.7407e-02,  2.6626e-02],\n",
      "          [-3.9070e-02,  6.2619e-03,  1.0419e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.0367e-01, -5.1655e-01, -6.1051e-01],\n",
      "          [-1.8412e-01, -4.1946e-01, -5.2196e-01],\n",
      "          [-1.8004e-01, -2.3705e-01, -2.7111e-01]],\n",
      "\n",
      "         [[-5.8920e-02, -7.3000e-02, -1.5602e-01],\n",
      "          [-6.2674e-02, -2.8186e-02, -3.3727e-03],\n",
      "          [-9.1120e-02, -4.1218e-02,  6.4841e-02]],\n",
      "\n",
      "         [[-1.1489e-01, -1.9228e-01, -2.0378e-01],\n",
      "          [-6.4345e-04, -1.6866e-02, -1.9030e-02],\n",
      "          [-1.1260e-02,  7.8515e-02, -1.1100e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-4.7268e-02, -5.9531e-02, -5.9724e-02],\n",
      "          [ 2.4659e-02,  7.8183e-04, -6.3444e-02],\n",
      "          [ 1.0060e-01,  1.5873e-01,  1.6565e-01]],\n",
      "\n",
      "         [[ 9.8615e-02,  3.5555e-02, -2.2677e-02],\n",
      "          [-1.9206e-02, -9.0600e-02, -1.0537e-01],\n",
      "          [ 9.5435e-03,  4.9905e-02,  3.7088e-02]],\n",
      "\n",
      "         [[ 2.3515e-01,  3.5050e-01,  2.3369e-01],\n",
      "          [ 3.4199e-01,  3.2136e-01,  9.2181e-03],\n",
      "          [ 7.7075e-02, -5.1909e-02, -9.2711e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.0966e-02, -1.2701e-01, -2.0611e-02],\n",
      "          [ 1.1054e-01,  6.9888e-02, -6.7295e-04],\n",
      "          [ 2.6818e-01,  2.9590e-01,  2.9924e-01]],\n",
      "\n",
      "         [[-3.6419e-02,  9.6061e-02,  3.9996e-02],\n",
      "          [ 1.2259e-01,  1.1776e-01,  4.6685e-02],\n",
      "          [-6.7579e-02, -4.8689e-02, -1.2605e-02]],\n",
      "\n",
      "         [[ 2.3768e-02,  3.4841e-02,  1.8476e-01],\n",
      "          [-1.7124e-02, -2.7861e-02,  1.4770e-01],\n",
      "          [-5.6979e-02,  2.7710e-02, -2.3492e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 6.3515e-02,  7.3224e-02, -8.3904e-03],\n",
      "          [ 4.3161e-02,  8.5497e-02,  1.1102e-01],\n",
      "          [ 1.4854e-01,  2.6653e-01,  2.0217e-01]],\n",
      "\n",
      "         [[ 1.1355e-01,  1.5115e-01, -3.9212e-02],\n",
      "          [ 5.5924e-02,  1.2284e-01,  6.2214e-02],\n",
      "          [ 1.2790e-01,  1.9873e-01,  1.5485e-01]],\n",
      "\n",
      "         [[-1.0487e-01, -2.0221e-01, -9.2466e-02],\n",
      "          [-4.2430e-02,  4.0023e-03,  1.0033e-01],\n",
      "          [ 5.8172e-02,  1.5995e-01,  1.6190e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.7498e-02,  2.0387e-02,  5.9318e-04],\n",
      "          [ 2.3372e-02,  6.6717e-02,  4.1080e-02],\n",
      "          [ 1.0155e-01,  1.3017e-01,  3.8570e-02]],\n",
      "\n",
      "         [[-2.5555e-01, -2.3790e-01, -1.5404e-01],\n",
      "          [-2.1274e-01, -1.6078e-01, -6.9355e-03],\n",
      "          [-1.2339e-02,  8.8893e-02,  6.2435e-02]],\n",
      "\n",
      "         [[-5.3226e-02, -1.5103e-01, -2.1848e-01],\n",
      "          [-1.6514e-01, -2.0811e-01, -3.1336e-01],\n",
      "          [-3.0957e-01, -2.3308e-01, -3.0493e-01]]],\n",
      "\n",
      "\n",
      "        [[[-2.7115e-02,  4.6483e-02, -9.1663e-02],\n",
      "          [-6.7817e-03,  1.6430e-01, -1.2593e-02],\n",
      "          [-1.4858e-01, -4.1267e-02, -8.4672e-02]],\n",
      "\n",
      "         [[-7.7601e-02,  4.5426e-03, -7.8456e-02],\n",
      "          [ 7.7507e-02,  1.3428e-01, -5.2709e-02],\n",
      "          [ 6.6056e-02,  1.0422e-01, -1.5182e-02]],\n",
      "\n",
      "         [[ 3.0310e-01,  2.5228e-01,  2.3852e-02],\n",
      "          [-5.1557e-02,  1.4272e-01,  1.2067e-01],\n",
      "          [-3.7778e-02, -9.0754e-02, -3.3257e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1842e-01, -1.0395e-02, -2.3549e-01],\n",
      "          [ 5.0484e-02,  6.9948e-02, -1.5727e-01],\n",
      "          [-1.3248e-01, -1.0062e-01, -1.7380e-01]],\n",
      "\n",
      "         [[ 3.3008e-01,  3.2656e-01,  3.4821e-02],\n",
      "          [-2.7107e-02,  4.4748e-02,  3.7456e-02],\n",
      "          [ 1.1060e-01,  6.7636e-02,  4.2752e-03]],\n",
      "\n",
      "         [[ 1.2849e-01, -3.6326e-02, -1.3949e-01],\n",
      "          [ 7.4541e-02, -4.0766e-02,  8.4367e-02],\n",
      "          [ 3.4279e-01,  6.9081e-02,  1.9268e-01]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 2.3832e-03,  5.3185e-03,  8.6742e-03,  5.9597e-03, -7.6645e-03,\n",
      "         4.8206e-03,  1.3985e-02, -1.1685e-02,  6.7686e-03,  6.7452e-03,\n",
      "        -6.3654e-03, -9.5975e-03, -9.6188e-03,  4.3688e-03, -1.1260e-02,\n",
      "        -2.7675e-03, -1.6976e-03,  1.3757e-02,  1.7251e-03, -2.2837e-03,\n",
      "         1.8492e-04, -1.3615e-02, -3.7552e-03, -2.2212e-03,  7.2274e-03,\n",
      "         6.1495e-03,  1.1240e-02,  8.1489e-03, -7.1381e-03, -1.1172e-02,\n",
      "        -1.1141e-03,  6.8687e-03, -5.5657e-03, -3.4569e-03, -3.0803e-03,\n",
      "         7.9565e-03, -8.1626e-03,  6.5999e-03, -3.2584e-03, -2.0496e-03,\n",
      "        -3.6577e-03,  1.3111e-02,  1.4526e-02, -6.6139e-03, -1.3674e-02,\n",
      "        -1.1952e-02,  6.1304e-03,  1.0020e-02,  4.1569e-03,  5.1541e-03,\n",
      "         3.7897e-03,  1.4645e-02, -8.1550e-03,  1.2316e-02,  6.1938e-03,\n",
      "         4.8443e-03,  1.3621e-02,  1.2917e-03,  5.5364e-03,  6.0238e-03,\n",
      "        -1.2842e-02, -4.9052e-03, -1.0497e-02,  1.3719e-02, -7.9451e-03,\n",
      "        -3.7366e-03, -1.4228e-02,  6.9823e-03,  3.5622e-03, -1.3195e-02,\n",
      "        -3.9647e-03, -1.2069e-02,  1.9501e-03,  1.2392e-02, -1.3087e-02,\n",
      "        -3.6558e-03,  8.1674e-03,  8.9155e-03, -7.1183e-04,  3.2149e-03,\n",
      "        -5.2865e-03, -3.4718e-03, -1.0988e-02, -1.4406e-02, -1.3219e-02,\n",
      "        -4.6452e-03, -5.8899e-03, -1.7812e-03, -1.1504e-02, -6.5668e-03,\n",
      "         1.1606e-02,  1.1619e-02,  4.8802e-03,  6.4320e-05,  1.2136e-02,\n",
      "        -2.3228e-03,  2.8216e-03,  4.3428e-03,  1.1489e-02, -2.8629e-03,\n",
      "         1.1371e-02,  3.7575e-03,  1.2693e-02, -7.4443e-04,  4.9662e-03,\n",
      "         1.1322e-02,  1.2470e-02,  1.2499e-02,  4.7235e-03,  1.3304e-02,\n",
      "        -3.9685e-03, -5.0632e-03, -1.1463e-02, -9.4608e-03,  1.2835e-03,\n",
      "        -9.2542e-03,  7.2384e-03,  8.1621e-04,  8.1226e-03, -7.7029e-03,\n",
      "        -6.6915e-06,  6.4671e-03, -1.5339e-05, -2.1124e-03,  4.4086e-03,\n",
      "        -1.5313e-03,  3.9897e-04,  1.4113e-03,  1.6813e-03,  9.7117e-03,\n",
      "        -1.2964e-02,  1.3562e-02,  9.5257e-03, -9.7882e-03,  8.1380e-03,\n",
      "         8.3032e-04,  2.5601e-03,  9.1212e-03,  3.5035e-03,  2.3168e-03,\n",
      "         6.5138e-03,  8.0411e-03, -6.8407e-03,  8.4660e-03, -1.0919e-02,\n",
      "        -6.2811e-03,  7.4758e-03,  7.1143e-03, -1.0729e-02,  8.3456e-03,\n",
      "        -6.6217e-03, -1.2641e-02, -9.3232e-03, -1.0405e-02, -1.0420e-02,\n",
      "         6.7480e-03,  6.6277e-03,  1.0621e-02,  1.1689e-02,  9.6300e-03,\n",
      "        -1.3810e-02, -2.3373e-03,  3.5859e-03, -1.3413e-02,  9.4752e-03,\n",
      "        -1.2578e-03,  2.2020e-03, -4.7639e-03,  2.5164e-03,  2.5904e-04,\n",
      "        -3.5195e-03,  7.7994e-03, -6.2982e-03,  6.1639e-03, -1.1335e-02,\n",
      "         6.7700e-03,  8.2236e-03,  4.2109e-03,  9.7323e-03, -5.3417e-03,\n",
      "         4.7408e-03,  1.2567e-02,  7.8772e-03, -1.8002e-03,  1.2946e-02,\n",
      "         2.9583e-03,  4.0866e-03, -7.0630e-03,  1.0990e-02, -1.1744e-02,\n",
      "         6.4864e-03, -4.1489e-03, -5.0921e-05,  3.0770e-03,  1.3850e-02,\n",
      "         6.0463e-03,  3.7128e-03, -5.6675e-03, -4.1537e-03,  1.7318e-03,\n",
      "        -1.3324e-02,  1.2553e-02,  6.1843e-03, -1.2462e-02,  3.0896e-03,\n",
      "        -5.0709e-04,  8.7928e-03, -8.2701e-04, -5.6556e-03,  1.0497e-02,\n",
      "        -1.3072e-02,  7.4538e-03, -2.5198e-04, -1.2922e-02,  1.3961e-02,\n",
      "         4.0027e-04, -8.1013e-03, -1.7834e-03,  3.1955e-03,  7.4066e-03,\n",
      "        -5.8705e-03, -6.8692e-03,  4.2099e-03,  1.4200e-02, -9.9827e-03,\n",
      "        -1.0661e-02,  1.1401e-02,  7.8870e-03, -1.3259e-03,  9.3625e-03,\n",
      "        -1.1966e-02, -6.4826e-03,  2.6985e-03, -1.1899e-02, -2.5974e-03,\n",
      "         5.9304e-03,  8.7905e-04,  1.2334e-02, -7.4220e-03, -1.0032e-02,\n",
      "        -1.2049e-02,  1.3040e-02,  2.9932e-04,  1.2609e-02,  1.2810e-02,\n",
      "         1.2356e-02, -4.5787e-03, -7.2724e-03,  1.9652e-04,  7.9618e-03,\n",
      "        -7.5484e-03, -7.0989e-03,  5.5538e-03, -9.8767e-03, -7.7392e-03,\n",
      "        -3.2342e-03, -5.8689e-03, -9.0177e-03, -1.0941e-02,  7.3350e-03,\n",
      "         2.6096e-03,  1.4430e-02, -7.1560e-03, -2.9142e-03, -3.5899e-03,\n",
      "         1.3045e-02,  1.3423e-02, -1.2859e-02,  4.0563e-03, -1.1368e-02,\n",
      "        -1.7690e-03,  1.8104e-03,  1.4034e-02,  1.4266e-02, -1.2182e-02,\n",
      "         3.0159e-03,  1.0848e-02, -1.3807e-02, -3.0098e-03,  1.2792e-04,\n",
      "         4.3750e-03, -6.6550e-03,  8.6589e-03, -2.3859e-03,  6.2825e-03,\n",
      "        -2.0493e-03, -9.5845e-03, -4.2139e-03,  1.1049e-02, -1.2254e-02,\n",
      "        -7.8240e-03,  4.7417e-03, -7.7070e-03, -9.3566e-03, -1.6292e-03,\n",
      "        -2.7680e-03, -1.1911e-02,  1.0970e-02, -1.1500e-02,  7.2330e-03,\n",
      "        -8.7649e-03, -6.4492e-03, -4.2326e-03, -6.2263e-03, -1.4181e-02,\n",
      "        -5.3508e-03, -7.8622e-03, -5.6479e-03,  1.0244e-02,  1.3021e-02,\n",
      "         4.2065e-04,  4.1678e-03,  1.3586e-03, -1.1715e-03, -1.1287e-02,\n",
      "         1.0536e-02, -1.4679e-02,  1.9520e-03, -7.2398e-03, -3.1034e-03,\n",
      "         1.5089e-03,  5.7932e-03, -1.4176e-02,  1.2821e-02,  4.9550e-03,\n",
      "        -1.2559e-02,  5.8075e-03, -4.8523e-03,  8.3406e-03,  1.0250e-02,\n",
      "        -1.1119e-02,  5.6691e-03,  1.1720e-02, -1.5280e-03, -1.5061e-03,\n",
      "         1.4470e-02,  8.6391e-03, -4.8518e-03,  1.3745e-02,  1.9803e-03,\n",
      "         8.4972e-03, -1.2634e-02,  1.2963e-02,  1.1865e-02,  7.3633e-03,\n",
      "        -1.3627e-02,  2.4409e-03,  9.4649e-03, -8.0866e-03, -1.2528e-02,\n",
      "        -4.6844e-04,  1.1176e-03,  2.3489e-04,  1.0955e-02, -4.9505e-03,\n",
      "        -4.4986e-03, -4.2687e-03, -3.8724e-03, -2.4728e-03,  7.1116e-03,\n",
      "        -4.5970e-03,  2.0184e-03,  4.5739e-03,  1.2828e-02,  5.6819e-03,\n",
      "         2.9645e-03,  9.4547e-03,  3.8577e-03, -1.2971e-02, -6.3092e-03,\n",
      "        -8.2647e-03, -7.2143e-03,  1.7746e-03,  2.7091e-03,  7.4647e-03,\n",
      "         1.7824e-03, -1.2976e-02,  3.1254e-03,  1.1355e-03,  1.5542e-03,\n",
      "         4.3346e-03,  1.0081e-02, -1.3458e-02, -5.4040e-04,  1.1423e-02,\n",
      "         1.2873e-02, -6.9117e-03,  9.3848e-03, -1.2723e-02,  2.2175e-03,\n",
      "        -1.3469e-02, -1.0351e-02,  6.4300e-03, -3.3035e-03, -1.4402e-02,\n",
      "         9.7107e-03, -5.9977e-03, -1.2492e-02, -1.2834e-03,  2.1898e-04,\n",
      "         3.8647e-03,  1.1707e-02,  7.8030e-03, -1.0547e-02, -9.3876e-03,\n",
      "        -1.2038e-02, -4.5844e-03, -9.5404e-03,  5.5862e-03,  6.3366e-03,\n",
      "        -1.2807e-02, -1.1672e-02, -7.4159e-03, -1.4514e-02,  7.5468e-03,\n",
      "        -5.8705e-03, -1.3333e-02,  6.3787e-03, -1.0415e-02,  4.4680e-03,\n",
      "         1.2929e-02, -5.3438e-03, -7.5241e-03, -2.1531e-03, -4.3195e-04,\n",
      "        -4.2229e-03,  1.3690e-02,  3.4088e-03, -1.3891e-02, -9.7206e-03,\n",
      "         8.3182e-04, -2.0454e-03,  4.3501e-03,  1.3202e-02, -4.0849e-03,\n",
      "         3.3826e-03,  4.9342e-03,  6.7413e-03, -1.2346e-02, -1.0305e-02,\n",
      "        -1.0040e-02, -7.2280e-03,  9.5721e-03,  1.4229e-02,  1.2177e-02,\n",
      "         1.1406e-02, -3.6734e-03,  9.6967e-03,  1.1756e-02, -6.6105e-03,\n",
      "        -7.6782e-03,  2.2968e-03, -2.8128e-03, -1.0638e-02,  1.1305e-02,\n",
      "         4.9336e-03,  1.5270e-03,  1.1755e-03,  7.1460e-03, -3.9427e-03,\n",
      "         3.5673e-03, -2.3562e-03, -2.6558e-03, -1.7700e-03,  8.2703e-03,\n",
      "         1.4496e-02,  1.1134e-02,  9.8021e-03,  2.2963e-03,  1.3110e-02,\n",
      "         9.1170e-03, -6.0035e-03, -1.1960e-02, -1.6332e-03,  1.3644e-02,\n",
      "        -1.9269e-03,  9.8075e-03, -1.4720e-02, -1.0032e-02,  1.2366e-02,\n",
      "         1.0874e-02,  9.6820e-03,  1.2676e-02, -7.6326e-03,  7.8319e-03,\n",
      "         1.0122e-02, -7.1375e-03,  1.0369e-02,  4.3790e-03,  2.0292e-03,\n",
      "        -4.8650e-03, -1.3887e-02,  1.1374e-02, -8.5788e-03, -1.5421e-03,\n",
      "        -7.6918e-03, -5.8930e-03,  1.1773e-02,  2.6219e-03,  1.0189e-02,\n",
      "         8.5607e-03, -5.1281e-03,  2.9259e-03, -1.0560e-02, -2.8178e-03,\n",
      "         8.9170e-03, -3.6612e-03,  6.4471e-03,  1.3248e-02,  3.7435e-03,\n",
      "         1.4175e-02,  5.6834e-03], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.5414, 1.3700, 0.7149, 0.7924, 0.6133, 0.7005, 0.9254, 0.9352, 0.6624,\n",
      "        1.2117, 0.7014, 0.6191, 0.9205, 1.4043, 1.1195, 0.8732, 0.6672, 1.0360,\n",
      "        0.9815, 0.8798, 1.1976, 1.2250, 0.8928, 0.9604, 0.8007, 1.0449, 1.0493,\n",
      "        0.9918, 0.8179, 0.7063, 1.2047, 0.8849, 0.9320, 0.6619, 1.0190, 0.6959,\n",
      "        1.1239, 0.6841, 0.7823, 1.1799, 1.0035, 0.8623, 0.7521, 0.9210, 0.5699,\n",
      "        0.7689, 0.9752, 0.7344, 1.4587, 1.3630, 1.1983, 0.9661, 0.8204, 0.8598,\n",
      "        1.2277, 0.9304, 0.7179, 1.0533, 0.9022, 0.7145, 0.8974, 1.3162, 0.7642,\n",
      "        1.3746, 0.6323, 0.8711, 0.8136, 0.9466, 0.8413, 1.0460, 0.7651, 0.7310,\n",
      "        0.8867, 0.8155, 0.6769, 0.9767, 0.9919, 0.9748, 0.9422, 0.8088, 1.3805,\n",
      "        0.9081, 0.9530, 0.9407, 0.8691, 0.6195, 0.9154, 0.8414, 0.5566, 0.7588,\n",
      "        0.5642, 1.2469, 0.8366, 0.6045, 0.7143, 0.5952, 0.9808, 1.0394, 0.8746,\n",
      "        1.0228, 0.8582, 1.0012, 0.7214, 1.2173, 0.9056, 0.6653, 0.6793, 0.7672,\n",
      "        0.8166, 0.6009, 1.2000, 1.0218, 0.8493, 0.6461, 0.8805, 1.2092, 1.0707,\n",
      "        0.8636, 0.7680, 1.1856, 1.1005, 0.6778, 0.9204, 1.1540, 0.9922, 1.3185,\n",
      "        1.5606, 0.6120, 1.1650, 0.8051, 0.9825, 0.9545, 0.9031, 0.8609, 1.3500,\n",
      "        0.9634, 1.0639, 1.4295, 0.6954, 0.7719, 0.9439, 1.1527, 0.7700, 1.2128,\n",
      "        0.9153, 0.9054, 0.5454, 0.7873, 0.7286, 0.9294, 1.0094, 0.7104, 0.7418,\n",
      "        0.6275, 1.3810, 1.4739, 1.3053, 0.8870, 0.9386, 1.2550, 0.6614, 1.1889,\n",
      "        0.8851, 0.9743, 1.1136, 0.6179, 0.7257, 0.7754, 0.7611, 0.9110, 0.6863,\n",
      "        0.7333, 0.9339, 0.7961, 0.9175, 0.8319, 1.0597, 0.9650, 0.8734, 0.7697,\n",
      "        1.3717, 0.8755, 1.1393, 0.8584, 1.1233, 0.8218, 1.3312, 0.9255, 0.8745,\n",
      "        0.5914, 0.9601, 0.7877, 0.9693, 0.5492, 0.7387, 0.7402, 0.9209, 0.5653,\n",
      "        0.9231, 0.9188, 1.0629, 1.0024, 1.2691, 1.4601, 1.2127, 0.7917, 0.9856,\n",
      "        1.1339, 1.0832, 0.8211, 0.5927, 0.9588, 1.3361, 0.8393, 1.1277, 1.0283,\n",
      "        0.8740, 1.1084, 1.2434, 0.8629, 1.0090, 0.8154, 1.0509, 0.9760, 1.0568,\n",
      "        0.9270, 1.0218, 0.8637, 0.8859, 0.8485, 0.6862, 1.3299, 1.3151, 0.7525,\n",
      "        0.7793, 0.7771, 0.9632, 1.2654, 0.8632, 0.9287, 0.7128, 0.8674, 0.7904,\n",
      "        0.7690, 0.9656, 0.6400, 0.8692, 0.8825, 0.9482, 1.1334, 0.9022, 1.0422,\n",
      "        0.6083, 0.7223, 0.9073, 1.1277, 0.8761, 0.8812, 0.6643, 0.8896, 0.8903,\n",
      "        1.1567, 1.2040, 0.6412, 0.9757, 0.5796, 0.9915, 1.2963, 1.0215, 0.7455,\n",
      "        0.9182, 1.3269, 0.7460, 0.6667, 1.1566, 0.6805, 0.8887, 0.8596, 0.8571,\n",
      "        0.7973, 0.5918, 0.8346, 0.6974, 1.2042, 0.9901, 0.8158, 0.9144, 1.2559,\n",
      "        0.6786, 1.4285, 0.9844, 0.7757, 0.9240, 0.8934, 0.7863, 1.3833, 1.2374,\n",
      "        0.8864, 0.6810, 0.7482, 1.1516, 0.9117, 0.9985, 1.2548, 1.0615, 1.0198,\n",
      "        1.1622, 0.8843, 0.9277, 0.7810, 1.7740, 0.7256, 0.6790, 1.2852, 0.5831,\n",
      "        0.8648, 0.6848, 0.6054, 0.9669, 1.3253, 0.8388, 0.9613, 0.9174, 0.8844,\n",
      "        0.6348, 0.8843, 1.1734, 1.1069, 0.9455, 0.9878, 0.9138, 0.7247, 1.3007,\n",
      "        0.5916, 0.9528, 0.8713, 0.8294, 1.0304, 0.8742, 1.0114, 0.8560, 0.9317,\n",
      "        0.5919, 0.6888, 0.6313, 0.9108, 0.9174, 0.6545, 0.7821, 0.5510, 1.3007,\n",
      "        0.8806, 1.2020, 0.9621, 1.0539, 1.1147, 0.7686, 0.9070, 0.9003, 0.8924,\n",
      "        1.0250, 0.9730, 0.9165, 0.7378, 0.8335, 1.1719, 0.5399, 0.6069, 0.9379,\n",
      "        0.9244, 0.7761, 1.3336, 0.6721, 1.1477, 0.6537, 0.9264, 0.9427, 0.8743,\n",
      "        0.9175, 0.8203, 0.6956, 0.6547, 1.1370, 0.7263, 0.7816, 0.9762, 1.0221,\n",
      "        0.9851, 0.8321, 0.9265, 0.9733, 0.8329, 1.0989, 0.8754, 0.9303, 0.6477,\n",
      "        0.9088, 0.8584, 1.0634, 0.8204, 0.9046, 0.9527, 0.9488, 0.6806, 1.2421,\n",
      "        0.8781, 1.0073, 1.3000, 1.1536, 0.7664, 0.7737, 0.9678, 0.8509, 0.8226,\n",
      "        0.6044, 1.0656, 1.0167, 0.8158, 0.9129, 1.2086, 0.8757, 1.0828, 0.7279,\n",
      "        0.8166, 1.1812, 1.5184, 0.9324, 0.8196, 0.7059, 0.7625, 1.2068, 0.8525,\n",
      "        0.9631, 0.9005, 0.9171, 1.0829, 0.9505, 0.7582, 0.9000, 1.0527, 0.6166,\n",
      "        0.7794, 0.8604, 0.9710, 0.8297, 0.7862, 1.0517, 0.9588, 1.2936, 0.9011,\n",
      "        0.7194, 1.0864, 0.9094, 0.8607, 0.9972, 1.2504, 1.2282, 0.6729, 0.9846,\n",
      "        1.3233, 0.5811, 0.8405, 0.6439, 0.6397, 0.8046, 0.5837, 0.8100, 0.8593,\n",
      "        0.8790, 1.2443, 1.1656, 0.6713, 1.0026, 0.6407, 0.8112, 0.9685, 1.0178,\n",
      "        1.0887, 1.0221, 0.9239, 0.9200, 0.8200, 0.7784, 0.5490, 1.1404, 1.3591,\n",
      "        1.0497, 0.9286, 0.7792, 0.9880, 0.7255, 0.8320, 0.6832, 0.6055, 0.9064,\n",
      "        0.9853, 0.9899, 0.7732, 0.9460, 0.9343, 0.6489, 1.0188, 1.1983, 1.3083,\n",
      "        0.9578, 1.0773, 0.7713, 1.2879, 0.9659, 0.9877, 0.9044, 1.1854],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-4.5654e-01,  3.3192e-01, -2.9967e-01, -2.6078e-01, -2.8346e-01,\n",
      "        -2.4618e-01, -2.7263e-01, -2.5835e-01, -2.6833e-01, -2.0534e-01,\n",
      "        -1.7649e-01, -3.3865e-01, -2.2907e-01,  9.3348e-02, -5.5219e-02,\n",
      "        -1.8810e-01, -4.3239e-01, -2.5611e-01, -2.3375e-01, -2.2791e-01,\n",
      "         1.7239e-01,  1.1696e-01, -7.9665e-02, -4.6746e-02, -3.5876e-01,\n",
      "         2.3436e-02,  1.8792e-01, -6.4494e-02, -1.3756e-01, -3.9484e-01,\n",
      "        -2.1964e-01, -3.0946e-01, -4.5575e-02, -1.9890e-01, -6.6416e-02,\n",
      "        -2.8350e-01,  5.1836e-02, -4.0523e-01, -1.7629e-01, -1.2224e-01,\n",
      "        -1.1809e-01, -2.4125e-01, -2.8533e-01, -3.6479e-01, -3.9697e-01,\n",
      "        -2.5002e-01, -3.2045e-01, -1.7179e-01,  4.3333e-01, -2.3348e-01,\n",
      "         7.1181e-02, -3.4516e-01, -2.9577e-01, -2.3492e-01,  9.9610e-02,\n",
      "        -2.9785e-01, -3.1512e-01, -6.3143e-03, -1.1923e-01, -2.3861e-01,\n",
      "        -3.6804e-01,  1.9783e-01, -2.4531e-01,  9.0549e-02, -3.1277e-01,\n",
      "        -7.9436e-02, -3.2453e-01, -1.5921e-01, -1.7693e-01, -2.2911e-01,\n",
      "        -2.9161e-01, -3.1157e-01, -2.7162e-01, -2.6474e-01, -2.7253e-01,\n",
      "        -2.9219e-01, -2.3288e-01, -6.1631e-02, -2.0420e-01, -1.0705e-01,\n",
      "        -7.5068e-02, -1.7154e-01, -2.7203e-01, -3.2229e-01, -2.6227e-01,\n",
      "        -3.4624e-01, -2.1014e-01, -3.3039e-01, -4.7068e-01, -1.6021e-01,\n",
      "        -2.8056e-01,  2.2157e-01, -2.1340e-01, -2.8621e-01, -3.1060e-01,\n",
      "        -3.6213e-01, -7.4432e-02,  1.7092e-01, -2.3705e-01,  7.0349e-02,\n",
      "        -4.0675e-01, -1.9685e-01, -3.3823e-01,  1.7889e-01, -2.7795e-01,\n",
      "        -2.2087e-01, -2.3582e-01, -2.1280e-01, -2.5223e-01, -2.7554e-01,\n",
      "        -1.0397e-01, -1.0085e-01, -1.0080e-01, -3.8496e-01, -2.3301e-01,\n",
      "        -8.4737e-02, -2.0020e-01, -3.8985e-01, -1.8645e-01,  2.5766e-02,\n",
      "        -1.2014e-01, -3.5662e-01, -1.3563e-01, -1.1655e-01,  1.7377e-02,\n",
      "        -1.0405e-01,  3.5600e-02, -2.4486e-01, -9.8594e-03, -2.3183e-01,\n",
      "        -2.2625e-01, -2.0720e-01, -2.9480e-01, -2.7335e-01,  3.1973e-01,\n",
      "        -2.8533e-01, -1.5950e-02,  2.4997e-01, -4.2181e-01, -2.7996e-01,\n",
      "        -1.5007e-01, -3.0499e-01, -3.1262e-01, -2.7527e-01, -3.0620e-01,\n",
      "        -1.6384e-01, -3.5141e-01, -2.7748e-01, -2.3771e-01, -3.3939e-01,\n",
      "        -2.5921e-01, -2.9697e-01, -1.8371e-01, -2.2360e-01, -8.6025e-02,\n",
      "         4.4455e-01,  2.1356e-01, -2.0731e-01, -1.9786e-01,  1.4666e-02,\n",
      "        -2.3547e-01,  1.9376e-01, -1.6758e-01, -3.9201e-01, -2.2242e-01,\n",
      "        -3.1622e-01, -3.5862e-01, -2.8934e-01, -3.3671e-01, -1.5716e-01,\n",
      "        -2.5195e-01, -2.9886e-01, -2.2068e-01, -2.4520e-01, -3.4437e-01,\n",
      "        -2.8618e-01, -1.4151e-01, -3.7549e-02, -2.7022e-01, -3.5523e-01,\n",
      "         2.4690e-01, -1.3624e-01, -4.8647e-02, -2.1016e-01, -1.0418e-01,\n",
      "        -2.2253e-01,  2.6585e-02, -4.0848e-01, -2.6201e-01, -3.9870e-01,\n",
      "         5.6080e-02, -2.5846e-01, -1.4249e-01, -3.5179e-01, -3.3133e-01,\n",
      "        -1.1753e-01, -1.2932e-01, -4.0368e-01, -2.6454e-01, -1.3036e-01,\n",
      "         1.5058e-01, -2.2523e-01, -3.1533e-02,  1.3662e-01, -1.8322e-01,\n",
      "        -2.4119e-01, -1.3452e-01, -3.0447e-01, -2.0234e-01, -1.7073e-01,\n",
      "        -3.4758e-01, -9.3473e-02,  1.1651e-01, -1.6015e-01, -3.8986e-02,\n",
      "        -2.0841e-01, -3.2693e-01, -1.1157e-01, -1.7692e-01, -2.7439e-01,\n",
      "        -3.5737e-01, -1.6308e-01, -2.9888e-01, -3.2716e-01, -1.7016e-01,\n",
      "        -1.4652e-01, -1.2029e-01, -3.1708e-01, -2.8029e-01, -2.6586e-01,\n",
      "        -2.9949e-01, -2.1025e-01,  9.7310e-02, -2.3440e-01, -3.5200e-01,\n",
      "        -1.8847e-01, -1.6960e-01,  5.9237e-02, -1.1784e-01, -1.6910e-01,\n",
      "        -2.6931e-01, -1.0116e-01, -1.4872e-01, -3.4036e-01, -3.7123e-01,\n",
      "        -3.3589e-01, -3.2094e-01, -2.5963e-01, -8.1652e-02, -4.2406e-02,\n",
      "        -1.1394e-01, -2.3608e-01, -2.6159e-01, -2.6244e-01, -2.2571e-01,\n",
      "        -7.6805e-02, -2.8424e-01, -1.6258e-01, -3.3558e-01, -2.4094e-01,\n",
      "        -3.8372e-01, -1.3752e-01, -1.4229e-02, -4.2714e-01, -2.9980e-01,\n",
      "        -4.1785e-01, -2.1105e-01, -3.7951e-02, -2.1932e-01, -2.9559e-01,\n",
      "        -1.1612e-01,  1.3257e-01, -2.0824e-01, -3.8264e-01, -1.0842e-01,\n",
      "        -3.9876e-01, -2.6784e-01, -1.9683e-01, -1.0471e-01, -3.3570e-01,\n",
      "        -4.0310e-01, -9.8459e-02, -2.2357e-01, -2.6053e-01, -2.6430e-01,\n",
      "        -2.8097e-01, -2.2367e-01, -2.1992e-01, -3.9143e-01,  1.2332e-01,\n",
      "        -1.6679e-01, -2.5150e-01, -1.4999e-01, -2.7401e-01, -2.8936e-01,\n",
      "         8.4347e-02,  1.3567e-01, -1.2538e-01, -2.0311e-01, -1.2304e-01,\n",
      "        -2.2541e-01, -1.9439e-01, -2.8266e-01, -5.9533e-03, -4.1278e-02,\n",
      "        -1.0502e-01,  4.7211e-02, -1.1182e-01, -7.9139e-02, -2.6504e-01,\n",
      "         2.2448e-01, -2.6630e-01, -2.8462e-01,  1.2055e-04, -3.5386e-01,\n",
      "        -3.5697e-01, -3.1333e-01, -1.9691e-01, -2.6042e-01, -2.6723e-02,\n",
      "        -2.8193e-01, -2.8260e-01, -2.6725e-01, -1.8554e-01, -2.4583e-01,\n",
      "        -2.0342e-01, -1.6346e-02, -1.6070e-02, -1.7822e-01, -8.1114e-02,\n",
      "        -1.5646e-01, -3.5668e-01,  1.0402e-01, -3.2392e-01,  1.9480e-02,\n",
      "        -2.2656e-01, -2.2536e-01, -5.8552e-02, -1.0320e-01, -1.7420e-01,\n",
      "        -2.5929e-01, -2.7980e-01, -3.4132e-01, -1.9890e-01, -4.3531e-01,\n",
      "        -1.3669e-01, -2.9950e-01, -4.1844e-01, -3.1641e-01, -2.5965e-01,\n",
      "        -1.7317e-01, -1.2168e-01, -3.9158e-01, -2.1406e-01,  7.9685e-02,\n",
      "         6.3050e-02, -3.0456e-01, -1.8810e-01, -1.5900e-01, -2.9043e-01,\n",
      "        -3.4639e-02, -1.3094e-01, -2.3288e-01, -3.1485e-01, -2.3066e-01,\n",
      "        -2.4712e-01, -3.6869e-01, -2.8837e-01, -2.7949e-01, -1.9347e-01,\n",
      "        -2.0405e-01,  2.1920e-01, -2.5629e-01,  5.8949e-03, -4.0277e-01,\n",
      "        -4.2536e-01, -2.8290e-01, -1.7992e-01, -1.9420e-01, -2.4727e-01,\n",
      "        -2.0200e-01, -3.9789e-01,  2.3858e-02, -2.0002e-01, -2.6575e-01,\n",
      "        -1.9501e-01, -3.4609e-02, -1.3683e-01, -2.4172e-01, -1.2890e-01,\n",
      "        -2.8257e-01, -3.8636e-01, -2.7044e-01, -2.0782e-01, -1.1851e-01,\n",
      "        -4.5416e-01, -1.2956e-01, -2.8082e-01, -1.8843e-02, -2.5959e-01,\n",
      "        -1.8826e-01, -2.8184e-01, -2.9063e-01, -2.5426e-01, -2.0747e-01,\n",
      "        -1.9495e-01, -1.7693e-01, -2.6927e-01, -1.6542e-01, -2.6471e-01,\n",
      "        -2.8518e-01, -7.3353e-02, -2.6800e-01, -1.9421e-01, -2.3692e-01,\n",
      "        -1.5734e-01,  9.8900e-02, -3.0152e-01, -2.6523e-01, -1.2704e-01,\n",
      "        -1.0418e-01, -9.7504e-02, -3.1038e-01, -2.4023e-01,  1.8581e-02,\n",
      "         1.6720e-01, -1.2631e-01, -1.9428e-01, -2.6427e-01, -2.7918e-01,\n",
      "        -4.3140e-03, -1.2178e-01, -2.6144e-01, -1.9209e-01, -2.3471e-01,\n",
      "         2.0837e-01, -1.3227e-01, -3.0258e-01, -4.3503e-01, -3.4598e-01,\n",
      "        -2.8703e-01, -2.8654e-01, -2.0414e-01,  1.0146e-01, -1.6927e-01,\n",
      "        -3.2775e-01, -3.7684e-01, -3.5626e-01,  5.2887e-04, -2.0600e-01,\n",
      "        -3.6454e-01, -2.2764e-01, -3.0210e-01, -3.0426e-01, -2.6848e-01,\n",
      "         6.6865e-02, -1.1264e-01, -2.5355e-01, -2.0426e-01, -2.8463e-01,\n",
      "        -3.7030e-01, -2.5784e-01, -2.7843e-01, -4.5394e-01, -2.2427e-01,\n",
      "        -3.4311e-01, -2.4356e-01, -2.2506e-01, -1.0221e-01,  1.9059e-01,\n",
      "        -1.6414e-01, -4.2394e-01, -2.0577e-01, -4.6213e-01, -3.0062e-01,\n",
      "        -1.9819e-01, -1.7636e-01,  1.7634e-02,  1.0543e-01, -2.6038e-01,\n",
      "        -1.6595e-01, -1.6465e-01, -3.0103e-01, -3.9982e-01, -2.9903e-02,\n",
      "         2.6145e-01, -1.2599e-01, -1.6653e-01, -3.5547e-01,  1.5074e-01,\n",
      "        -4.3741e-01, -3.1734e-01, -3.2584e-01, -2.2657e-01, -1.3194e-01,\n",
      "        -2.3329e-01, -2.2280e-01, -3.6102e-01, -3.8034e-01, -3.5706e-01,\n",
      "        -4.2126e-01, -2.4985e-01, -2.2553e-01, -1.2702e-02, -6.6303e-02,\n",
      "         2.6926e-02, -2.3651e-01, -1.3478e-01, -3.2291e-01, -2.6989e-01,\n",
      "        -2.7479e-01, -2.4215e-01], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 9.6881e-02,  5.7444e-02,  1.9144e-01],\n",
      "          [ 4.3137e-02,  1.5907e-02, -4.2423e-02],\n",
      "          [-5.3543e-02, -9.2595e-03,  2.5262e-03]],\n",
      "\n",
      "         [[ 1.5023e-01, -3.6146e-01, -2.3219e-01],\n",
      "          [ 1.9088e-01, -4.6528e-02, -1.3454e-01],\n",
      "          [ 2.1217e-01, -6.0681e-02, -5.3712e-01]],\n",
      "\n",
      "         [[-1.1695e-02,  7.7954e-03, -3.7778e-02],\n",
      "          [ 4.9626e-03,  8.9737e-02,  8.9497e-02],\n",
      "          [-9.5297e-02, -5.0411e-02, -6.7270e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.9733e-01, -1.4280e-01,  2.6470e-02],\n",
      "          [-1.7117e-01, -1.8964e-01, -1.6512e-01],\n",
      "          [-1.5001e-01, -3.0130e-01, -2.5923e-01]],\n",
      "\n",
      "         [[ 1.0359e-01, -7.9122e-03,  2.7853e-02],\n",
      "          [ 1.2996e-01,  1.3744e-01, -1.0257e-01],\n",
      "          [ 3.4693e-02,  1.4105e-01, -1.5872e-02]],\n",
      "\n",
      "         [[ 1.3093e-02,  2.0769e-01, -8.2013e-02],\n",
      "          [-2.6462e-01, -2.7976e-01, -2.0266e-01],\n",
      "          [-5.8335e-02, -2.0033e-01,  4.9582e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.2102e-02,  4.0210e-02, -2.7283e-02],\n",
      "          [-2.1488e-01, -9.6737e-02, -1.6663e-01],\n",
      "          [-1.4815e-02,  1.2481e-01,  3.6782e-02]],\n",
      "\n",
      "         [[-1.4149e-01, -1.4535e-01, -2.1571e-01],\n",
      "          [-1.2536e-01,  1.4130e-01,  1.0277e-01],\n",
      "          [-1.0442e-01,  1.8811e-01, -7.8243e-03]],\n",
      "\n",
      "         [[ 1.6871e-01, -4.9140e-03,  2.1723e-01],\n",
      "          [ 6.2339e-02, -1.1400e-01,  1.4089e-01],\n",
      "          [-1.0527e-01, -1.6901e-01,  1.4272e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.8395e-01, -1.6151e-01, -1.4663e-01],\n",
      "          [ 1.0295e-01,  3.9088e-02,  6.8466e-02],\n",
      "          [-1.7525e-01, -1.4983e-01, -4.3175e-02]],\n",
      "\n",
      "         [[ 6.2748e-02, -1.1011e-02,  7.0336e-02],\n",
      "          [-9.5884e-02, -1.2717e-01, -1.4159e-01],\n",
      "          [ 4.2587e-02,  6.4803e-02,  7.2331e-02]],\n",
      "\n",
      "         [[-2.9281e-01, -2.5263e-01, -2.2596e-01],\n",
      "          [-4.2682e-01, -1.7707e-01, -1.8942e-01],\n",
      "          [ 1.3933e-01,  1.8206e-01, -7.9005e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.7079e-01, -2.5097e-01, -1.9881e-01],\n",
      "          [-2.0665e-03, -1.6555e-02, -7.1662e-02],\n",
      "          [-7.8183e-02, -1.1211e-02, -3.7319e-02]],\n",
      "\n",
      "         [[-3.9522e-02,  6.6827e-02, -3.8445e-01],\n",
      "          [ 3.1201e-02,  4.2037e-02, -3.5240e-03],\n",
      "          [-1.9794e-02,  7.4479e-02,  4.4030e-02]],\n",
      "\n",
      "         [[-1.9120e-01, -9.0675e-02,  9.0903e-02],\n",
      "          [-1.0284e-01, -1.5604e-02,  8.9092e-02],\n",
      "          [-7.5115e-02, -9.3485e-02, -6.9676e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.1381e-02, -1.0185e-01, -2.9032e-01],\n",
      "          [-8.7321e-02, -2.4515e-02, -3.2387e-02],\n",
      "          [-3.7691e-01, -4.5485e-01, -3.2058e-01]],\n",
      "\n",
      "         [[ 1.0155e-01, -3.0887e-02, -1.5862e-01],\n",
      "          [ 1.4034e-01,  6.0733e-02, -6.8142e-02],\n",
      "          [-5.4232e-02, -4.5752e-02, -1.6376e-01]],\n",
      "\n",
      "         [[-7.0664e-02, -3.0725e-01, -4.6064e-01],\n",
      "          [ 2.5746e-02,  1.3202e-01, -7.4568e-02],\n",
      "          [-3.9537e-02,  2.5018e-01,  2.1911e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 4.4805e-02,  6.8872e-04, -1.2792e-01],\n",
      "          [ 3.9341e-02,  6.7557e-02, -1.0367e-01],\n",
      "          [-3.8367e-02,  2.9921e-02, -4.2181e-02]],\n",
      "\n",
      "         [[-4.2311e-01,  6.7244e-02,  1.1167e-01],\n",
      "          [-6.8895e-01, -1.9547e-02,  1.6934e-01],\n",
      "          [-5.4649e-01,  1.7259e-01,  1.8240e-01]],\n",
      "\n",
      "         [[ 6.9147e-02,  1.5326e-01,  4.4238e-02],\n",
      "          [ 1.5848e-02, -1.5652e-02,  2.6983e-02],\n",
      "          [ 1.9006e-01,  2.2627e-02,  5.5555e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.7858e-03,  4.1747e-03, -4.1660e-02],\n",
      "          [ 4.2580e-02, -2.8128e-03,  6.3453e-02],\n",
      "          [-5.2605e-03, -1.1395e-01, -1.5867e-01]],\n",
      "\n",
      "         [[-2.0426e-02, -6.9761e-02, -4.2277e-03],\n",
      "          [ 4.6341e-02, -8.7982e-03, -1.1028e-02],\n",
      "          [-9.0733e-02, -1.1123e-01,  3.4766e-02]],\n",
      "\n",
      "         [[-2.6594e-02,  6.9755e-02, -2.0916e-01],\n",
      "          [ 9.1113e-02,  5.7082e-02, -1.0703e-01],\n",
      "          [ 2.0527e-01,  1.8700e-01,  1.3509e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.5306e-01, -2.0421e-01,  4.5537e-02],\n",
      "          [ 2.5346e-02, -6.0550e-02,  4.7517e-02],\n",
      "          [-1.0930e-01, -1.3646e-01, -4.9156e-02]],\n",
      "\n",
      "         [[-3.5327e-01,  6.6203e-02,  5.9417e-02],\n",
      "          [-3.5366e-01, -2.2672e-01, -2.7367e-01],\n",
      "          [-3.2969e-01, -4.8607e-01,  4.4707e-02]],\n",
      "\n",
      "         [[ 2.4823e-02, -1.4586e-01,  6.3871e-02],\n",
      "          [ 5.5452e-03, -8.7875e-02, -6.1600e-03],\n",
      "          [ 1.8599e-01,  8.3577e-02,  3.0758e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-9.9221e-03, -1.4286e-01,  3.8849e-02],\n",
      "          [-5.3293e-02, -1.1037e-02,  1.5808e-01],\n",
      "          [-8.8502e-02, -1.1434e-01,  9.5456e-02]],\n",
      "\n",
      "         [[ 9.4204e-03, -9.1888e-02, -1.5188e-01],\n",
      "          [-1.9447e-02, -1.0395e-01, -5.7514e-02],\n",
      "          [-7.4850e-02, -7.7409e-02, -5.4593e-02]],\n",
      "\n",
      "         [[ 3.5806e-01,  1.9376e-01,  2.3745e-03],\n",
      "          [ 2.5843e-01,  1.3921e-01, -2.0337e-01],\n",
      "          [ 1.0570e-01,  4.5467e-03, -1.9386e-01]]],\n",
      "\n",
      "\n",
      "        [[[-8.3497e-02, -1.0646e-01, -1.2005e-02],\n",
      "          [ 4.3916e-02, -8.2920e-02, -1.8415e-02],\n",
      "          [ 9.8454e-02,  8.1633e-02,  1.3861e-01]],\n",
      "\n",
      "         [[ 6.9295e-02,  2.6693e-01,  2.3035e-01],\n",
      "          [-3.2309e-01,  1.7513e-01,  1.1783e-01],\n",
      "          [-3.5094e-01, -2.1806e-01, -3.7494e-04]],\n",
      "\n",
      "         [[ 1.3793e-01,  6.2471e-02, -9.7160e-02],\n",
      "          [-5.9827e-02, -5.6236e-02, -1.6878e-02],\n",
      "          [-2.0275e-01, -1.3559e-01, -1.3886e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0146e-01, -7.7627e-02,  1.0507e-01],\n",
      "          [-7.2288e-02, -2.0349e-01, -1.8773e-01],\n",
      "          [ 3.2064e-01,  2.7147e-01,  3.7870e-01]],\n",
      "\n",
      "         [[-1.9271e-02,  5.4916e-03, -7.2574e-02],\n",
      "          [ 2.0761e-01,  3.1305e-02, -1.6644e-01],\n",
      "          [ 2.5389e-01,  1.0471e-01, -9.0401e-02]],\n",
      "\n",
      "         [[ 2.8632e-01,  4.9389e-02, -1.0021e-01],\n",
      "          [ 1.6252e-02,  1.6477e-01,  6.7662e-02],\n",
      "          [ 7.8898e-02,  1.4869e-02, -1.2717e-01]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 5.6198e-03,  5.5964e-03, -2.9303e-03, -6.6431e-04, -7.0525e-03,\n",
      "         1.0762e-02, -6.1432e-03, -3.4697e-03, -7.0622e-03,  6.7117e-03,\n",
      "        -2.0014e-03, -1.1355e-02,  7.7197e-03,  4.2643e-03, -7.4783e-03,\n",
      "         4.1114e-03, -1.1270e-02, -4.8304e-03, -1.3558e-02,  1.0594e-02,\n",
      "         1.0975e-02, -1.2896e-02,  7.7000e-03,  1.2393e-02, -7.9289e-03,\n",
      "        -6.3000e-03, -4.4122e-03,  7.1172e-03, -1.1960e-02,  3.1425e-03,\n",
      "         2.3897e-03, -1.4535e-02, -3.2309e-03, -4.2856e-03, -4.2449e-03,\n",
      "         1.3719e-03, -1.4501e-02,  6.6023e-03, -1.1444e-02, -3.4536e-04,\n",
      "        -3.3601e-03, -1.1527e-02,  1.1350e-03,  8.8649e-04,  9.4804e-03,\n",
      "        -1.1006e-02,  8.0165e-03, -8.4814e-03, -1.3356e-02,  1.3232e-02,\n",
      "         7.9624e-03, -5.2859e-03,  4.4415e-03, -2.5030e-03, -2.3857e-03,\n",
      "         5.1830e-03,  1.3359e-02, -6.9984e-03, -1.1381e-02,  9.2634e-03,\n",
      "         1.1577e-02, -8.8421e-04, -1.2553e-03, -1.1351e-02, -1.4772e-03,\n",
      "         1.1371e-03, -1.0790e-02, -4.5615e-03, -1.9195e-03, -3.6503e-03,\n",
      "        -1.2960e-02, -1.5615e-03,  1.3657e-02,  1.0555e-02, -7.3614e-03,\n",
      "        -5.7797e-03, -6.9007e-03,  1.4549e-02,  2.1347e-03, -1.2100e-02,\n",
      "         1.4035e-02,  6.4090e-03,  7.3321e-04,  4.2811e-03, -3.0329e-03,\n",
      "        -1.2431e-02, -3.3752e-03, -3.1567e-03, -1.1188e-02,  6.1733e-03,\n",
      "         9.1733e-03, -1.0964e-03,  5.3105e-03,  5.2979e-03, -7.0840e-03,\n",
      "         6.2455e-03, -1.2425e-02, -3.1494e-03,  1.3294e-02, -7.9854e-03,\n",
      "         6.3883e-03,  9.9107e-03, -1.0166e-03, -4.6296e-05,  8.9845e-03,\n",
      "        -1.0798e-02,  3.4069e-03, -1.2013e-02,  9.5609e-03, -6.3135e-03,\n",
      "         2.5953e-03, -1.2627e-02, -5.3527e-03, -8.6042e-03, -8.8001e-03,\n",
      "        -3.3397e-03,  3.0280e-03,  2.7238e-03, -1.2272e-02,  1.3028e-02,\n",
      "         8.5399e-04,  9.0618e-03,  3.3626e-03,  4.0394e-03, -4.1691e-03,\n",
      "        -1.0252e-02,  9.8368e-03, -1.0025e-02, -4.1561e-04,  1.4599e-02,\n",
      "         1.9435e-03, -1.4276e-02,  1.3036e-02,  5.2488e-03, -9.4480e-03,\n",
      "        -1.3716e-02,  1.4356e-02, -3.2262e-03,  6.6187e-03,  7.6316e-03,\n",
      "        -9.9403e-03,  7.1013e-03,  5.6244e-03,  8.1489e-03, -5.3542e-03,\n",
      "        -1.7911e-03, -1.8585e-03, -1.4167e-02,  1.0437e-02, -8.3247e-03,\n",
      "         3.9895e-03,  2.5037e-03, -1.1884e-02,  9.6826e-03, -1.0347e-02,\n",
      "        -1.1203e-02,  1.7845e-03, -7.9850e-03, -1.0433e-02,  7.2097e-03,\n",
      "        -1.1790e-02,  7.5927e-03,  5.0206e-03, -5.4974e-03,  7.2397e-03,\n",
      "         6.3592e-03, -1.3104e-02,  1.2239e-02, -4.9606e-03,  1.1046e-02,\n",
      "         8.2251e-03,  1.1297e-02, -7.2407e-03,  1.0689e-02, -7.0143e-03,\n",
      "         1.1285e-02,  1.4342e-02, -1.1877e-03, -1.1621e-02,  1.3546e-02,\n",
      "        -1.4477e-02, -9.6345e-04, -1.3330e-02, -9.5121e-03,  6.6758e-03,\n",
      "         3.4489e-03,  1.1255e-02,  1.1368e-02,  8.3741e-04, -5.1042e-03,\n",
      "         7.6672e-03, -1.4188e-02,  3.2729e-03,  1.3309e-02,  1.4445e-02,\n",
      "         2.2837e-03, -3.6556e-03, -3.2411e-03,  4.0062e-03, -1.2865e-02,\n",
      "         2.5962e-03, -5.6084e-03,  1.5526e-03,  5.6821e-03,  2.6116e-03,\n",
      "        -4.2437e-03,  1.0590e-02,  1.3806e-02,  1.1834e-02,  6.1945e-03,\n",
      "        -6.7288e-03, -1.0351e-02, -1.4397e-02, -6.6643e-03, -3.6914e-03,\n",
      "        -2.9911e-03, -4.3433e-03,  7.8168e-03, -5.8186e-03,  1.4108e-03,\n",
      "        -1.0915e-02,  6.8880e-03, -9.5571e-03, -1.0236e-02,  7.1263e-03,\n",
      "        -5.1118e-03, -3.7313e-03,  1.0390e-02, -1.1397e-02,  8.0938e-03,\n",
      "        -1.1000e-02, -1.3379e-03,  2.4889e-03, -9.2983e-03, -1.0426e-02,\n",
      "         4.0077e-04, -1.0226e-02,  8.1359e-03, -1.4456e-02,  8.1533e-04,\n",
      "         1.1086e-02, -7.9219e-04, -1.2247e-02, -1.0282e-02,  8.1727e-03,\n",
      "         1.2503e-02,  9.2854e-03, -5.3969e-03,  8.3715e-03,  5.0762e-03,\n",
      "         6.1221e-03, -7.0704e-03, -1.3057e-02, -7.2257e-03, -7.1554e-03,\n",
      "         1.3814e-02,  7.9061e-03, -5.8486e-03, -2.7210e-03, -1.1995e-02,\n",
      "         7.2933e-03,  1.2318e-03,  9.6218e-04,  1.3412e-02, -7.3797e-03,\n",
      "        -8.8983e-04, -2.9349e-04, -8.6327e-03, -2.0643e-03,  3.1525e-03,\n",
      "         2.6281e-03, -2.0927e-03, -4.4774e-03,  2.0185e-03,  8.9723e-03,\n",
      "         9.2368e-03,  2.5268e-03, -9.3524e-03,  1.1773e-02, -1.4123e-03,\n",
      "         6.1754e-03,  1.2755e-02, -2.5664e-03,  1.8762e-03, -8.2293e-03,\n",
      "         1.1584e-02, -8.5724e-03,  3.6699e-03,  1.3865e-02, -7.3314e-04,\n",
      "         2.2904e-03, -1.3041e-02, -1.3111e-02, -9.5851e-03, -1.3305e-02,\n",
      "        -7.2505e-03,  1.0147e-02, -1.3397e-02,  2.3994e-05,  4.6789e-03,\n",
      "        -1.0047e-02,  6.6902e-03, -1.4400e-02,  1.2715e-02, -1.4151e-02,\n",
      "        -5.3745e-03, -1.2447e-02,  9.0665e-03,  5.7728e-03, -9.7661e-03,\n",
      "        -3.6352e-03, -1.1049e-02,  4.2703e-03, -7.9938e-03, -1.4252e-02,\n",
      "         1.1525e-02,  6.7576e-03,  7.4104e-03, -1.3451e-02, -1.0377e-02,\n",
      "         1.1124e-02, -7.8161e-03,  1.0030e-02, -9.5186e-03, -6.3123e-03,\n",
      "         3.2996e-03,  1.3301e-02,  1.4116e-02, -2.1759e-04,  1.1121e-02,\n",
      "        -4.7596e-03,  1.3640e-02, -1.2108e-02,  8.2780e-03,  1.3926e-02,\n",
      "        -8.0831e-03, -5.9689e-03,  4.1777e-03, -1.4540e-02, -5.1290e-03,\n",
      "        -1.0829e-02,  2.4616e-04,  1.4012e-02, -2.6479e-03, -1.6521e-03,\n",
      "         5.9664e-03, -1.4335e-02, -3.9877e-03,  3.4063e-03, -1.4326e-02,\n",
      "         5.9092e-04, -3.3088e-03, -1.2434e-02, -7.7259e-03,  1.0032e-02,\n",
      "         1.4146e-02,  2.0993e-03, -4.3881e-03,  4.1426e-03,  9.5814e-03,\n",
      "         1.1329e-02, -1.3655e-02, -1.4549e-03,  1.4207e-02, -1.1817e-02,\n",
      "         1.4457e-02, -1.2840e-02,  1.2432e-03, -6.5440e-04,  1.0459e-02,\n",
      "        -1.0959e-02, -1.0790e-03,  1.2825e-02,  5.2405e-03, -1.0448e-02,\n",
      "         5.7584e-03,  3.0313e-03, -1.3235e-02,  2.8500e-03,  4.1596e-03,\n",
      "        -1.0186e-03, -1.2955e-02, -2.5478e-03,  1.4609e-02,  1.2245e-02,\n",
      "         1.0289e-02,  8.6455e-03, -5.0299e-03, -8.0299e-03, -7.3864e-03,\n",
      "        -9.6983e-03, -1.0787e-02, -1.5065e-03, -1.1596e-02,  3.7692e-03,\n",
      "        -1.2065e-02,  1.0558e-02, -1.1227e-02, -1.0457e-02,  1.1979e-02,\n",
      "        -5.2881e-03, -3.6221e-03,  2.9943e-03,  1.2253e-02,  1.3583e-02,\n",
      "        -5.3009e-03,  1.4292e-02,  1.2011e-02, -5.3401e-03, -5.2263e-03,\n",
      "        -1.3044e-02, -2.7064e-03,  4.3324e-03,  5.1889e-03, -1.4474e-03,\n",
      "        -1.1035e-02, -9.5193e-03,  3.0682e-03, -1.3342e-02,  6.6644e-03,\n",
      "         9.8425e-03,  1.7764e-03, -1.0317e-02,  9.3148e-03, -2.1674e-03,\n",
      "        -3.1431e-03,  5.5262e-03, -5.7089e-03,  1.3430e-02,  9.7490e-03,\n",
      "         7.5209e-03, -9.0702e-03,  8.0078e-03,  8.7930e-04, -1.5355e-03,\n",
      "        -1.1494e-02, -6.9378e-03,  7.6530e-03,  1.2968e-02, -1.8002e-03,\n",
      "         2.5290e-03,  6.3318e-04, -4.9812e-03, -7.9429e-03, -5.9457e-04,\n",
      "         6.6775e-03, -6.9397e-04,  8.2479e-03, -9.6164e-03,  1.2551e-02,\n",
      "        -1.1575e-03, -4.1044e-05, -1.2806e-02, -1.1765e-02, -8.7720e-03,\n",
      "        -5.5384e-03,  2.5337e-03,  1.0109e-02,  1.0429e-02,  7.8009e-03,\n",
      "        -7.5952e-03, -1.9014e-03,  1.4519e-03, -6.5900e-03,  1.1504e-02,\n",
      "        -3.7336e-03,  8.1746e-03, -1.2357e-02,  4.6852e-03, -9.9884e-03,\n",
      "        -1.1023e-02,  1.1592e-02, -1.1665e-03,  6.1075e-03,  7.5613e-03,\n",
      "        -4.5908e-03, -1.2778e-02, -7.1286e-03,  1.2594e-02,  1.5174e-03,\n",
      "        -7.2924e-04,  1.1472e-02, -1.8850e-03,  8.4939e-03, -5.3407e-04,\n",
      "         1.1137e-02, -7.5371e-03,  4.9346e-03, -1.6366e-03, -7.2920e-03,\n",
      "         3.0110e-04, -8.9660e-03,  3.4213e-03, -1.1679e-02, -1.2519e-02,\n",
      "         1.4521e-02,  1.0345e-02,  8.6131e-03, -5.1663e-03, -3.2865e-03,\n",
      "        -8.6654e-03, -9.8464e-04,  9.8899e-03, -2.5137e-03, -1.1400e-02,\n",
      "         1.2806e-02,  1.0504e-03, -1.0819e-02, -6.9458e-03, -1.0284e-02,\n",
      "         9.4137e-03,  1.7099e-03], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1.4345, 1.0017, 0.9359, 0.8886, 0.9350, 0.8961, 1.1393, 1.1458, 0.7513,\n",
      "        0.7610, 1.0242, 1.0333, 0.9284, 0.7651, 0.7997, 1.0291, 1.3063, 0.9825,\n",
      "        0.8168, 1.1621, 0.9332, 1.0275, 1.0433, 0.9708, 0.9745, 0.9443, 1.3953,\n",
      "        0.9172, 0.8077, 0.8533, 0.8376, 0.6316, 0.8668, 0.7890, 1.0532, 1.0851,\n",
      "        0.8950, 0.8183, 1.1776, 1.1836, 1.0340, 0.7985, 1.1631, 0.7693, 1.2869,\n",
      "        0.8147, 0.6751, 0.8794, 1.0008, 1.0905, 0.8988, 1.0098, 0.5916, 0.8771,\n",
      "        0.8464, 1.0577, 0.9045, 0.8659, 0.8764, 0.9307, 0.6556, 0.9005, 0.6581,\n",
      "        0.9933, 0.6890, 0.8960, 1.0709, 0.8376, 0.9975, 0.8515, 0.8203, 0.6751,\n",
      "        0.9106, 0.7965, 0.9581, 1.1817, 0.8073, 1.4841, 1.0212, 0.9979, 0.8399,\n",
      "        0.8056, 1.2178, 0.9915, 0.7426, 1.0700, 0.9012, 0.9580, 0.7285, 1.0949,\n",
      "        0.7968, 0.7073, 0.7478, 0.8292, 0.7005, 1.0326, 0.8450, 1.1241, 0.8497,\n",
      "        1.1684, 0.5502, 0.9972, 1.0812, 1.1625, 0.8341, 0.9059, 0.7096, 1.0293,\n",
      "        0.6814, 1.2705, 0.9614, 0.9730, 0.9324, 1.3028, 1.1052, 0.9200, 0.8107,\n",
      "        0.8320, 1.0038, 1.0921, 0.8554, 0.9095, 1.1381, 0.9016, 1.1145, 0.8412,\n",
      "        0.8430, 0.7276, 1.3424, 1.0539, 1.1982, 1.3278, 0.8828, 0.7663, 0.5693,\n",
      "        0.8510, 1.0076, 0.7761, 1.0581, 1.0291, 0.8147, 1.0330, 1.0959, 0.7285,\n",
      "        1.4972, 0.8521, 0.9163, 0.7152, 1.2275, 0.6127, 1.3224, 1.1626, 0.7819,\n",
      "        1.2953, 0.7694, 0.8618, 0.9438, 0.6337, 0.6428, 1.4157, 0.8979, 0.5156,\n",
      "        0.7257, 0.8817, 0.7824, 1.0011, 1.1854, 0.8648, 0.7237, 0.8475, 0.8385,\n",
      "        1.1164, 1.1350, 0.8015, 1.0658, 0.8901, 0.9647, 0.8184, 0.7149, 0.9547,\n",
      "        0.9231, 0.8807, 0.9782, 0.9665, 0.9055, 0.8787, 0.9061, 0.7609, 1.0533,\n",
      "        0.8501, 1.3033, 0.6329, 0.6471, 0.7699, 1.0184, 0.8944, 1.1071, 1.1800,\n",
      "        1.1318, 1.0138, 1.0421, 0.9983, 1.1543, 0.9177, 0.9362, 1.1405, 0.8534,\n",
      "        0.6983, 0.7268, 0.9638, 0.8475, 0.6640, 0.6288, 0.7016, 0.9032, 1.0769,\n",
      "        0.8564, 1.1283, 1.2201, 1.0390, 1.1146, 0.8971, 0.8638, 1.2708, 0.8760,\n",
      "        0.9943, 1.2337, 0.9972, 0.7632, 1.0506, 0.9895, 0.7086, 0.9780, 0.9023,\n",
      "        0.6287, 0.7634, 0.9953, 0.9048, 0.8803, 0.6598, 1.2926, 0.9540, 1.0128,\n",
      "        0.6580, 1.0280, 0.9611, 0.7481, 0.8608, 1.1144, 0.9036, 0.6790, 1.0276,\n",
      "        1.0471, 1.0171, 0.7290, 1.0221, 0.6564, 0.9507, 0.9834, 1.1533, 0.9478,\n",
      "        0.9045, 0.6410, 0.9880, 0.9102, 1.0498, 0.8566, 0.8985, 0.7329, 0.9180,\n",
      "        0.8675, 0.8645, 1.1396, 1.1613, 0.6410, 0.7410, 0.8739, 0.6343, 1.0638,\n",
      "        0.7818, 0.9567, 0.6041, 0.6558, 1.1373, 0.8946, 1.2248, 1.1743, 1.0108,\n",
      "        0.8895, 0.8593, 0.9406, 0.7405, 0.9432, 1.2539, 0.8300, 0.7592, 0.7213,\n",
      "        0.7358, 1.0952, 1.0744, 0.9173, 0.7186, 0.9152, 0.6499, 0.9919, 0.7703,\n",
      "        1.3044, 1.0616, 0.8897, 0.8440, 1.2161, 1.1972, 0.8521, 0.7135, 1.2152,\n",
      "        0.9262, 0.6815, 0.7751, 0.8626, 0.8563, 0.8717, 0.8239, 0.6510, 1.3498,\n",
      "        0.6339, 0.8508, 0.8915, 0.6820, 0.7448, 1.4294, 0.8833, 0.8495, 0.9331,\n",
      "        0.9115, 1.1738, 0.7690, 0.7359, 1.0979, 0.9776, 0.7947, 0.8401, 0.9811,\n",
      "        0.9070, 0.7684, 1.0545, 1.1357, 1.1766, 1.1090, 1.2893, 1.0620, 1.2283,\n",
      "        0.9070, 0.8542, 1.1757, 0.8984, 0.7756, 0.8393, 1.1134, 0.7911, 1.2645,\n",
      "        0.9711, 0.9303, 1.0515, 1.0588, 0.9261, 1.0005, 0.8849, 1.0535, 0.8890,\n",
      "        1.3266, 0.9542, 0.7133, 0.8840, 1.0386, 0.8160, 0.9764, 0.8092, 0.9666,\n",
      "        0.7755, 0.7988, 0.7225, 1.1091, 0.7034, 0.8169, 0.6396, 1.0416, 1.1255,\n",
      "        0.6381, 1.0611, 0.9151, 0.8623, 1.1452, 0.9038, 0.9020, 1.1849, 1.2053,\n",
      "        0.8050, 0.9565, 0.9491, 0.9795, 0.8150, 1.1406, 1.0265, 0.6743, 1.0177,\n",
      "        0.6316, 0.9214, 1.0280, 1.1577, 1.0220, 0.6827, 0.8431, 0.9965, 1.0332,\n",
      "        0.8458, 0.7713, 0.6493, 0.8477, 0.8150, 0.9183, 1.3922, 1.0093, 1.1883,\n",
      "        1.0840, 1.0747, 0.8902, 0.8390, 0.7039, 0.8871, 0.9378, 1.2697, 1.0670,\n",
      "        0.9513, 1.2570, 1.1022, 0.8235, 1.1038, 1.0491, 1.1875, 0.9275, 0.8312,\n",
      "        1.0666, 1.2322, 0.6135, 0.9064, 0.9759, 1.1223, 0.7498, 0.6625, 0.8641,\n",
      "        0.7825, 0.9691, 1.0967, 0.7560, 1.0165, 1.0572, 1.1796, 1.1878, 1.0536,\n",
      "        0.9161, 0.6952, 0.9235, 0.8448, 0.9766, 0.8532, 0.7303, 1.1001, 1.1049,\n",
      "        1.1490, 1.0145, 0.5560, 0.9271, 1.0128, 0.9319, 0.8275, 0.9360, 0.8733,\n",
      "        0.9374, 1.1441, 1.3477, 1.1421, 1.0602, 0.7812, 0.8572, 0.6951, 0.9469,\n",
      "        0.8593, 1.1277, 0.7558, 0.9129, 0.9687, 1.1410, 0.9076, 0.8710, 1.0129,\n",
      "        0.7835, 0.6491, 0.8875, 0.7926, 1.0699, 1.1343, 0.6721, 0.8926, 0.7805,\n",
      "        0.8654, 0.8157, 1.0626, 1.1607, 1.0993, 0.8745, 0.9909, 1.1031],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0681, -0.2632, -0.1704,  0.1061, -0.2852, -0.1321,  0.1743,  0.0645,\n",
      "        -0.3530, -0.1751, -0.1995, -0.1224, -0.3295, -0.1949, -0.1894, -0.2649,\n",
      "        -0.0450, -0.3311, -0.1231,  0.1287, -0.1393, -0.2137, -0.1352,  0.0866,\n",
      "        -0.3272, -0.1639,  0.2206, -0.4328,  0.0047, -0.0219, -0.1340, -0.2291,\n",
      "         0.0716, -0.2586, -0.2771, -0.2072, -0.2442, -0.0717, -0.0744, -0.0233,\n",
      "        -0.4113, -0.1998,  0.1831, -0.1333,  0.2312, -0.1589, -0.1434, -0.1905,\n",
      "        -0.4905, -0.2215, -0.4397, -0.3644, -0.1941, -0.2714, -0.2475, -0.0310,\n",
      "        -0.1828,  0.0099, -0.3131, -0.3277, -0.1804,  0.0932, -0.2202, -0.4552,\n",
      "        -0.2513, -0.0177, -0.2868,  0.1667, -0.1663, -0.1752, -0.0597, -0.3093,\n",
      "        -0.3125, -0.1987, -0.1928,  0.1897, -0.0520, -0.0126, -0.0372, -0.2391,\n",
      "        -0.0833, -0.2107, -0.0954, -0.2696, -0.1740, -0.2652, -0.2237, -0.2322,\n",
      "        -0.2013, -0.3555, -0.1087, -0.3512, -0.1823, -0.1650, -0.0291, -0.0536,\n",
      "         0.0925, -0.2667, -0.1835,  0.1298, -0.1890,  0.1144, -0.1376,  0.2454,\n",
      "        -0.0750, -0.2324, -0.1494, -0.0068, -0.1666, -0.0438, -0.1782, -0.1473,\n",
      "        -0.0778,  0.1083, -0.3315, -0.0117, -0.2046, -0.1251, -0.2066, -0.1420,\n",
      "        -0.0821, -0.1349,  0.0311, -0.4199,  0.0485, -0.2523, -0.2773, -0.2665,\n",
      "         0.2490, -0.0094,  0.1121,  0.0459, -0.2476, -0.1056, -0.2028, -0.1769,\n",
      "        -0.0734, -0.2804, -0.2879,  0.2094, -0.1652, -0.2277, -0.0138, -0.1498,\n",
      "         0.0525, -0.0598, -0.0345, -0.1467, -0.0920, -0.4050,  0.2493, -0.2251,\n",
      "         0.0503,  0.1075, -0.1765, -0.2581, -0.0522, -0.2784, -0.2689, -0.3347,\n",
      "        -0.1055, -0.1204, -0.1204, -0.2362, -0.2213, -0.1234, -0.2428, -0.1421,\n",
      "        -0.1182, -0.1861, -0.0797,  0.1137, -0.0315, -0.1130, -0.0528, -0.0583,\n",
      "        -0.2773, -0.1500,  0.0485, -0.2923, -0.2736,  0.1089, -0.1968, -0.1615,\n",
      "        -0.2457,  0.0467, -0.1595, -0.2613, -0.0729, -0.3001,  0.0653, -0.2947,\n",
      "        -0.2153, -0.1934, -0.0496, -0.2190,  0.2966, -0.0312, -0.1121, -0.0693,\n",
      "        -0.3100, -0.1807, -0.0844, -0.1570, -0.0325, -0.1797, -0.1494, -0.3149,\n",
      "        -0.2274, -0.1794, -0.1347, -0.2040, -0.1951, -0.1541,  0.0302, -0.1588,\n",
      "         0.0102, -0.1529, -0.0520, -0.0795,  0.0749, -0.2566, -0.0512, -0.0959,\n",
      "        -0.1571,  0.0703, -0.0533, -0.2662, -0.1358, -0.1846, -0.0732, -0.1935,\n",
      "        -0.1783, -0.0795, -0.1839, -0.2776, -0.0052, -0.0205, -0.1213, -0.0144,\n",
      "         0.1223, -0.2220, -0.2014, -0.1919, -0.2423, -0.1352, -0.1262, -0.2367,\n",
      "        -0.4286,  0.0537, -0.1996, -0.1399,  0.0137, -0.1966, -0.1583,  0.0433,\n",
      "        -0.3171, -0.2491, -0.0865,  0.0043, -0.0810, -0.3376, -0.2210,  0.1967,\n",
      "        -0.2183, -0.3266, -0.2494, -0.0297, -0.2324, -0.0834, -0.2178, -0.1410,\n",
      "         0.2720, -0.0748, -0.1826, -0.1443, -0.0630, -0.2380, -0.0321, -0.1206,\n",
      "        -0.0096, -0.1972, -0.1502, -0.1165, -0.2897,  0.3643, -0.0137, -0.3231,\n",
      "        -0.1753, -0.2248, -0.2523, -0.2237, -0.0623,  0.0414, -0.1202, -0.2953,\n",
      "        -0.1958, -0.1702, -0.1720, -0.3002, -0.1183, -0.1927, -0.0686, -0.3354,\n",
      "        -0.2210, -0.2738,  0.0604, -0.1619, -0.3217, -0.1668,  0.2579, -0.1509,\n",
      "        -0.1313, -0.2735,  0.0904, -0.0458, -0.1451, -0.2703, -0.0983, -0.0652,\n",
      "        -0.1684, -0.0135, -0.3811, -0.1527, -0.1083, -0.1754, -0.2945, -0.1618,\n",
      "        -0.2365,  0.0853, -0.0527, -0.1890, -0.2783, -0.0913, -0.1267, -0.2776,\n",
      "        -0.1501, -0.1245, -0.2857, -0.0649, -0.1068, -0.4529, -0.0509, -0.2602,\n",
      "        -0.2399, -0.0221, -0.1700, -0.0433, -0.0511, -0.1326, -0.0621, -0.0730,\n",
      "        -0.1803, -0.0099, -0.3693, -0.0511, -0.0432, -0.1451, -0.0845, -0.0169,\n",
      "        -0.2554, -0.2593, -0.4098, -0.1047, -0.3037, -0.2815,  0.1283, -0.0756,\n",
      "        -0.1557, -0.0972, -0.0708, -0.1570, -0.2533, -0.2687, -0.2915, -0.0519,\n",
      "        -0.2291,  0.1070, -0.1956, -0.2130, -0.0453, -0.3610,  0.0102, -0.1003,\n",
      "        -0.2035, -0.3064, -0.2035, -0.1530, -0.0593, -0.3715, -0.2008,  0.0818,\n",
      "        -0.0679, -0.2361, -0.0333,  0.2339, -0.1601, -0.4247, -0.1118, -0.3238,\n",
      "        -0.2164,  0.0739, -0.1503, -0.2975, -0.0994, -0.3619, -0.0453, -0.0643,\n",
      "        -0.1823, -0.0930, -0.0979, -0.2339,  0.1904, -0.2083, -0.1041, -0.0589,\n",
      "        -0.1640, -0.1355, -0.1857, -0.2101, -0.1745, -0.1619,  0.0047,  0.0187,\n",
      "        -0.4831, -0.1197, -0.0669, -0.0268, -0.0733, -0.1548,  0.1816, -0.3225,\n",
      "        -0.0687, -0.1619, -0.2646, -0.1978, -0.1032, -0.0121, -0.0530, -0.2142,\n",
      "        -0.1377, -0.1018,  0.1254, -0.1947, -0.3286, -0.1794, -0.3305, -0.2593,\n",
      "        -0.1988, -0.4620, -0.1799, -0.2587,  0.1856, -0.2106, -0.4089, -0.0226,\n",
      "         0.0241,  0.1090, -0.1439, -0.2025, -0.2064, -0.2576, -0.1352, -0.1852,\n",
      "        -0.1104, -0.1911,  0.1599, -0.0644, -0.2374, -0.1604, -0.1621, -0.1397,\n",
      "        -0.0750, -0.3475, -0.0616, -0.3313, -0.1618, -0.0065,  0.0143,  0.1446,\n",
      "         0.1067, -0.2683, -0.3195, -0.0294, -0.0743,  0.1071, -0.1360, -0.2796,\n",
      "        -0.1546,  0.0907, -0.2596,  0.0850, -0.0357, -0.0560, -0.1496, -0.1514,\n",
      "        -0.1920, -0.3221, -0.1716, -0.1133, -0.0982, -0.1848, -0.2963, -0.2312,\n",
      "        -0.2875, -0.0755, -0.4450,  0.0637, -0.3525, -0.1644, -0.1412, -0.0635],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.7269,  0.4439, -0.0415],\n",
      "          [ 0.0516,  0.0144, -0.1443],\n",
      "          [ 0.0048,  0.0754, -0.0837]],\n",
      "\n",
      "         [[ 0.5204,  0.1466, -0.0559],\n",
      "          [ 0.0072, -0.0570, -0.2995],\n",
      "          [ 0.0621,  0.0403, -0.2477]],\n",
      "\n",
      "         [[ 0.3250,  0.0400, -0.1915],\n",
      "          [ 0.1488,  0.0376, -0.2354],\n",
      "          [ 0.0470,  0.0266, -0.3482]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.1590,  0.0790,  0.0610],\n",
      "          [ 0.0214, -0.0868, -0.1313],\n",
      "          [-0.0036, -0.0416, -0.0608]],\n",
      "\n",
      "         [[-0.2246, -0.0115,  0.0973],\n",
      "          [ 0.0221,  0.1215,  0.1456],\n",
      "          [ 0.0297,  0.1263,  0.0752]],\n",
      "\n",
      "         [[-0.0930,  0.0361, -0.0936],\n",
      "          [ 0.2456,  0.1266, -0.0285],\n",
      "          [-0.0555, -0.1877, -0.1011]]],\n",
      "\n",
      "\n",
      "        [[[-0.0957,  0.0109,  0.0677],\n",
      "          [-0.0200,  0.2140,  0.1396],\n",
      "          [-0.0323,  0.0590,  0.3270]],\n",
      "\n",
      "         [[ 0.0348, -0.1838, -0.0543],\n",
      "          [ 0.0510,  0.0538,  0.1824],\n",
      "          [ 0.0731,  0.1459,  0.2121]],\n",
      "\n",
      "         [[-0.0267,  0.0206, -0.0083],\n",
      "          [ 0.1427,  0.1261,  0.0465],\n",
      "          [ 0.1002,  0.0686,  0.0166]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0758, -0.1601, -0.0584],\n",
      "          [-0.1717, -0.2194, -0.0967],\n",
      "          [-0.2349, -0.2494, -0.1152]],\n",
      "\n",
      "         [[ 0.2924, -0.1244, -0.2927],\n",
      "          [ 0.1379, -0.1618, -0.1839],\n",
      "          [ 0.1350, -0.0880, -0.0746]],\n",
      "\n",
      "         [[ 0.3441,  0.0377, -0.0801],\n",
      "          [ 0.2318, -0.0743, -0.2512],\n",
      "          [ 0.1220, -0.0469, -0.2843]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1811,  0.1271,  0.0606],\n",
      "          [ 0.1148, -0.1048, -0.1759],\n",
      "          [ 0.3844, -0.1678, -0.0156]],\n",
      "\n",
      "         [[-0.0429,  0.0043,  0.1035],\n",
      "          [-0.1276, -0.0231,  0.1049],\n",
      "          [-0.0216,  0.1837,  0.2714]],\n",
      "\n",
      "         [[-0.0431, -0.0629, -0.1059],\n",
      "          [-0.0289, -0.0734, -0.0905],\n",
      "          [-0.0629, -0.1805, -0.0772]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0858,  0.1096,  0.1296],\n",
      "          [ 0.1280,  0.0191, -0.0369],\n",
      "          [ 0.2090, -0.0152,  0.0272]],\n",
      "\n",
      "         [[-0.0836, -0.1587, -0.0620],\n",
      "          [-0.0786, -0.1795, -0.1045],\n",
      "          [-0.0560, -0.0222,  0.1038]],\n",
      "\n",
      "         [[-0.3362, -0.2898, -0.3410],\n",
      "          [-0.0268,  0.0660,  0.0764],\n",
      "          [-0.0906,  0.0414,  0.0360]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.0890,  0.1748, -0.1808],\n",
      "          [-0.0119,  0.0978, -0.2344],\n",
      "          [-0.0147,  0.1255,  0.4293]],\n",
      "\n",
      "         [[ 0.0738,  0.2489,  0.1371],\n",
      "          [-0.0167,  0.1724,  0.1248],\n",
      "          [-0.1449,  0.1923,  0.0130]],\n",
      "\n",
      "         [[-0.1683, -0.1294, -0.1400],\n",
      "          [-0.1556, -0.1617, -0.0077],\n",
      "          [-0.0311,  0.1178,  0.2221]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.2189, -0.0644,  0.0083],\n",
      "          [-0.0427, -0.0767,  0.1566],\n",
      "          [-0.0008, -0.1237,  0.0986]],\n",
      "\n",
      "         [[-0.0429, -0.1081,  0.2219],\n",
      "          [-0.0945, -0.0312,  0.1523],\n",
      "          [ 0.0182,  0.0866,  0.2511]],\n",
      "\n",
      "         [[-0.0528,  0.0159,  0.0945],\n",
      "          [ 0.0308,  0.0088, -0.0311],\n",
      "          [ 0.2913,  0.2491,  0.1176]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1490,  0.2669, -0.1093],\n",
      "          [ 0.0020, -0.0258,  0.0837],\n",
      "          [ 0.0729, -0.1774,  0.1864]],\n",
      "\n",
      "         [[-0.1915,  0.0462, -0.0327],\n",
      "          [-0.2829,  0.0525,  0.3208],\n",
      "          [-0.2182, -0.0206,  0.2488]],\n",
      "\n",
      "         [[-0.0021,  0.0563, -0.0146],\n",
      "          [-0.1008,  0.0021,  0.1307],\n",
      "          [-0.2281,  0.0982,  0.2451]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0766,  0.0575,  0.0446],\n",
      "          [-0.0563,  0.1198,  0.0421],\n",
      "          [-0.2203, -0.0727,  0.0037]],\n",
      "\n",
      "         [[-0.1602, -0.0938,  0.0729],\n",
      "          [-0.1276, -0.1139,  0.0121],\n",
      "          [-0.1168,  0.0604,  0.0863]],\n",
      "\n",
      "         [[-0.0623, -0.0784,  0.0224],\n",
      "          [-0.0319,  0.0308, -0.0231],\n",
      "          [ 0.0183,  0.0741,  0.1314]]],\n",
      "\n",
      "\n",
      "        [[[-0.3495, -0.2318, -0.0190],\n",
      "          [-0.1120, -0.3405, -0.0266],\n",
      "          [ 0.1800, -0.0800, -0.0534]],\n",
      "\n",
      "         [[-0.0917, -0.0410, -0.3161],\n",
      "          [-0.0943,  0.1185,  0.1777],\n",
      "          [ 0.0487,  0.0441, -0.0246]],\n",
      "\n",
      "         [[-0.3160, -0.3675, -0.3850],\n",
      "          [-0.1115, -0.1494, -0.0834],\n",
      "          [ 0.0948, -0.0345,  0.1119]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.2132, -0.0204,  0.0342],\n",
      "          [ 0.0949,  0.2419,  0.0823],\n",
      "          [ 0.1531,  0.2764,  0.1495]],\n",
      "\n",
      "         [[ 0.0280, -0.0630,  0.1734],\n",
      "          [-0.0539, -0.1289, -0.0233],\n",
      "          [ 0.0298, -0.0631,  0.1211]],\n",
      "\n",
      "         [[-0.0694, -0.1454,  0.0063],\n",
      "          [-0.1192, -0.2330, -0.0980],\n",
      "          [ 0.0108, -0.1136, -0.0251]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0103,  0.0022,  0.0032,  ...,  0.0024,  0.0061, -0.0049],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.9357, 0.9973, 0.6010,  ..., 1.0281, 1.2643, 0.9327], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.1158, -0.2894, -0.2524,  ..., -0.5199, -0.2796, -0.2763],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 3.0423e-01,  6.4490e-02, -1.7151e-02],\n",
      "          [ 8.6493e-02, -5.5696e-02, -8.6773e-02],\n",
      "          [ 8.3951e-02,  2.8578e-02,  6.9026e-02]],\n",
      "\n",
      "         [[-8.0470e-02,  1.6600e-02,  1.7462e-01],\n",
      "          [ 9.8648e-02,  7.1831e-02,  1.3599e-01],\n",
      "          [ 1.1126e-01, -2.9488e-03, -6.9858e-02]],\n",
      "\n",
      "         [[-1.1830e-02, -2.5666e-01, -1.9581e-01],\n",
      "          [-1.3461e-01, -2.0868e-01, -7.7184e-02],\n",
      "          [-1.2838e-01, -9.6172e-02, -6.8764e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.1285e-01,  3.4133e-02,  1.9165e-01],\n",
      "          [-1.3771e-02, -1.5392e-01, -7.0150e-03],\n",
      "          [-1.2383e-01, -3.6101e-01, -3.6291e-01]],\n",
      "\n",
      "         [[ 2.9118e-02, -1.1017e-01, -1.3648e-01],\n",
      "          [-8.2263e-02, -1.2976e-01, -1.3469e-01],\n",
      "          [-1.8505e-01, -2.3165e-01, -1.6432e-01]],\n",
      "\n",
      "         [[-4.4973e-02,  1.7997e-02,  3.9554e-03],\n",
      "          [-1.6621e-01, -7.3722e-02, -6.5110e-02],\n",
      "          [ 1.0438e-01,  5.5893e-02, -3.3828e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 3.8057e-01,  1.7595e-01,  1.8910e-01],\n",
      "          [ 9.1071e-02,  2.0480e-01,  3.3703e-02],\n",
      "          [-8.3081e-02,  5.6616e-02,  2.8795e-03]],\n",
      "\n",
      "         [[-1.4351e-01, -1.0603e-01,  2.4217e-02],\n",
      "          [-2.7854e-01, -9.5317e-02,  3.6952e-02],\n",
      "          [-2.2804e-01, -1.6496e-02,  5.9848e-02]],\n",
      "\n",
      "         [[-9.3687e-02,  3.3813e-02, -1.1903e-02],\n",
      "          [-6.7251e-03,  4.5041e-02,  4.1284e-02],\n",
      "          [ 1.7775e-01,  1.0289e-01,  1.3712e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.2753e-01, -1.1130e-01, -8.5025e-02],\n",
      "          [ 4.5808e-02, -3.4293e-01, -3.3010e-02],\n",
      "          [ 1.2687e-01, -3.7990e-01,  7.4506e-02]],\n",
      "\n",
      "         [[-8.2182e-01, -4.8468e-01, -2.9402e-01],\n",
      "          [-3.0784e-01, -6.5782e-01, -1.2999e-01],\n",
      "          [-2.1794e-01, -5.0870e-01,  5.0743e-02]],\n",
      "\n",
      "         [[-2.9888e-01, -1.4106e-03,  1.3266e-01],\n",
      "          [-6.4211e-02,  3.2870e-02,  1.0785e-01],\n",
      "          [ 1.9549e-01,  8.2568e-02,  3.4812e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 1.3274e-01, -1.1986e-02, -2.7531e-01],\n",
      "          [-6.3544e-03, -3.4430e-02, -8.8302e-02],\n",
      "          [-5.8989e-02, -8.7966e-02,  4.2737e-02]],\n",
      "\n",
      "         [[ 1.0323e-01,  1.1070e-01,  2.8984e-01],\n",
      "          [ 1.6537e-01,  1.3889e-01,  3.2027e-01],\n",
      "          [-1.2233e-01, -2.8396e-01,  1.9141e-01]],\n",
      "\n",
      "         [[-8.0988e-02, -1.2437e-01, -4.6509e-02],\n",
      "          [-9.4718e-02,  7.1603e-02,  8.0911e-02],\n",
      "          [-9.7784e-02,  9.7403e-02,  1.4155e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0569e-01,  2.2632e-01,  9.7530e-02],\n",
      "          [-7.2372e-02,  8.6599e-02,  8.0978e-02],\n",
      "          [-5.6658e-02, -5.9597e-02,  1.0829e-01]],\n",
      "\n",
      "         [[-2.3374e-01,  1.7148e-02,  1.9033e-01],\n",
      "          [ 1.1307e-01,  2.3564e-02,  2.8444e-01],\n",
      "          [ 1.0786e-01, -6.5887e-02,  4.0912e-01]],\n",
      "\n",
      "         [[-3.2901e-02, -1.0958e-01, -6.7791e-02],\n",
      "          [ 1.3342e-01, -1.3308e-02, -2.1093e-01],\n",
      "          [ 3.7217e-02, -1.8238e-02, -1.3191e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 3.5902e-02, -8.6375e-02, -2.6017e-01],\n",
      "          [-2.2548e-02,  1.8682e-02, -3.5380e-02],\n",
      "          [ 1.7722e-01,  5.3718e-02, -4.5709e-02]],\n",
      "\n",
      "         [[-1.1347e-01, -1.8382e-01, -1.3973e-01],\n",
      "          [-3.1153e-01, -2.0798e-01, -1.7140e-01],\n",
      "          [-2.2659e-01, -1.2939e-01,  1.1670e-02]],\n",
      "\n",
      "         [[-7.8237e-02, -4.0978e-02, -3.0218e-02],\n",
      "          [-6.8459e-02,  1.1049e-02, -4.0554e-02],\n",
      "          [ 4.7126e-02,  8.9063e-02,  5.9892e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.0437e-01,  2.5318e-01, -2.6739e-02],\n",
      "          [ 8.0377e-02,  2.6007e-01,  2.5596e-02],\n",
      "          [-7.9989e-02,  2.0864e-01,  1.2273e-01]],\n",
      "\n",
      "         [[-5.2617e-02,  1.3308e-01, -6.3530e-03],\n",
      "          [ 2.5912e-02,  6.5468e-02, -2.8429e-02],\n",
      "          [-1.7458e-01, -1.4887e-01, -5.6575e-03]],\n",
      "\n",
      "         [[-1.7116e-01, -1.1277e-01, -6.8302e-02],\n",
      "          [-5.0915e-02, -7.3655e-02, -2.3640e-02],\n",
      "          [ 1.3184e-01,  2.8335e-02,  1.7695e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 2.1768e-01, -3.0015e-01, -2.7791e-01],\n",
      "          [ 1.1333e-01, -7.5322e-02, -1.3203e-01],\n",
      "          [ 9.6290e-02,  4.8488e-02, -1.0776e-01]],\n",
      "\n",
      "         [[ 1.3629e-01,  2.0811e-01, -3.9322e-02],\n",
      "          [-2.7467e-02,  9.3842e-02, -1.3712e-01],\n",
      "          [-5.4928e-02, -3.1003e-02, -1.6409e-01]],\n",
      "\n",
      "         [[ 5.8496e-02,  7.5040e-03,  2.3036e-03],\n",
      "          [-6.5541e-02,  6.2126e-02, -3.4764e-02],\n",
      "          [-1.6171e-01, -2.3186e-02,  1.1539e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.1105e-02, -5.9889e-02, -5.6247e-02],\n",
      "          [-1.1771e-01, -9.5433e-02,  2.1382e-01],\n",
      "          [-3.9321e-01, -5.8352e-01,  1.5604e-01]],\n",
      "\n",
      "         [[-2.5157e-01,  2.7927e-03, -1.9956e-02],\n",
      "          [-8.9846e-02, -5.9553e-02,  1.5133e-01],\n",
      "          [-5.1023e-01, -4.7134e-01, -4.6074e-02]],\n",
      "\n",
      "         [[ 2.8254e-01,  1.4813e-01, -8.5391e-02],\n",
      "          [ 2.0232e-01,  2.9408e-03, -1.0020e-01],\n",
      "          [-1.6736e-02, -1.5093e-01, -1.4102e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 2.5107e-02,  6.3928e-02,  1.7008e-01],\n",
      "          [-7.6704e-03, -8.5441e-03,  7.4509e-02],\n",
      "          [-1.3855e-01, -5.3771e-02,  1.1599e-01]],\n",
      "\n",
      "         [[ 1.2592e-01, -1.6776e-01, -1.4273e-01],\n",
      "          [ 8.7382e-02, -1.3315e-01,  2.5806e-02],\n",
      "          [ 3.6226e-02, -1.1761e-01,  1.0914e-01]],\n",
      "\n",
      "         [[ 4.4699e-04,  3.2514e-02,  4.6816e-03],\n",
      "          [-8.4844e-02, -3.0611e-03,  2.8446e-02],\n",
      "          [-9.7089e-02,  4.4487e-03,  1.3587e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 6.0798e-02,  6.2625e-03, -1.5183e-01],\n",
      "          [ 8.1916e-02, -1.9078e-02, -1.7596e-01],\n",
      "          [-1.7160e-01, -1.4259e-01, -1.8487e-01]],\n",
      "\n",
      "         [[ 3.8670e-01,  1.2552e-01,  1.5964e-01],\n",
      "          [ 7.0257e-03, -2.0142e-01, -1.2165e-01],\n",
      "          [-8.4147e-02, -1.7246e-01, -1.7366e-02]],\n",
      "\n",
      "         [[-2.1675e-01, -2.5856e-01,  1.4976e-01],\n",
      "          [-4.1024e-02, -2.3212e-01,  4.3617e-02],\n",
      "          [-1.2180e-02, -1.1522e-01,  1.4869e-01]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0022,  0.0071,  0.0034,  ..., -0.0089,  0.0011,  0.0064],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1.0421, 1.0202, 0.8122,  ..., 0.5345, 1.1000, 1.2412], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0949, -0.4261, -0.4599,  ..., -0.3679, -0.3278, -0.1030],\n",
      "       device='cuda:0', requires_grad=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter containing:\n",
      "tensor([[[[-0.0072, -0.0309, -0.1333],\n",
      "          [-0.0010,  0.1054,  0.1579],\n",
      "          [ 0.0865, -0.0144, -0.0175]],\n",
      "\n",
      "         [[-0.0248,  0.1721,  0.0324],\n",
      "          [-0.3794, -0.0452, -0.0895],\n",
      "          [-0.1399,  0.0230, -0.0233]],\n",
      "\n",
      "         [[-0.3436, -0.1798, -0.2282],\n",
      "          [-0.1823,  0.0505, -0.0346],\n",
      "          [-0.0645,  0.0697,  0.0932]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0445,  0.0318, -0.1073],\n",
      "          [-0.0281,  0.1020, -0.0286],\n",
      "          [ 0.0588,  0.1691,  0.1058]],\n",
      "\n",
      "         [[-0.1762, -0.2623, -0.3428],\n",
      "          [-0.0470, -0.0764, -0.0588],\n",
      "          [-0.0147,  0.0261,  0.0769]],\n",
      "\n",
      "         [[ 0.3655,  0.0492,  0.3365],\n",
      "          [-0.0115, -0.3674, -0.0863],\n",
      "          [ 0.2006, -0.1387,  0.0074]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1198, -0.0901, -0.0208],\n",
      "          [-0.0204, -0.0333, -0.0541],\n",
      "          [ 0.0361, -0.0593,  0.0033]],\n",
      "\n",
      "         [[ 0.0228, -0.0910, -0.1385],\n",
      "          [-0.1148, -0.1369, -0.2073],\n",
      "          [-0.0384,  0.0704,  0.0975]],\n",
      "\n",
      "         [[-0.0921, -0.0039,  0.0810],\n",
      "          [-0.0867, -0.1107, -0.2005],\n",
      "          [ 0.0493, -0.1147, -0.2254]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0425, -0.0197, -0.0325],\n",
      "          [ 0.0151, -0.0344, -0.1272],\n",
      "          [-0.0017, -0.0297, -0.0192]],\n",
      "\n",
      "         [[-0.4692, -0.0214,  0.0359],\n",
      "          [-0.1009,  0.1251,  0.1185],\n",
      "          [-0.3393, -0.1059,  0.1832]],\n",
      "\n",
      "         [[-0.3684, -0.3177, -0.0240],\n",
      "          [-0.2012, -0.1190,  0.0256],\n",
      "          [ 0.0068, -0.1693, -0.1619]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0348, -0.0845, -0.3277],\n",
      "          [ 0.0556, -0.0826, -0.1288],\n",
      "          [-0.1499, -0.1165, -0.0893]],\n",
      "\n",
      "         [[ 0.2258, -0.0144,  0.1181],\n",
      "          [-0.1499,  0.0438,  0.2229],\n",
      "          [-0.6109, -0.4767, -0.1342]],\n",
      "\n",
      "         [[ 0.2142, -0.0578, -0.4288],\n",
      "          [-0.0153, -0.1974, -0.1271],\n",
      "          [ 0.0321, -0.0483, -0.0522]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0899,  0.0040, -0.0659],\n",
      "          [ 0.0644,  0.0522,  0.0117],\n",
      "          [ 0.0294, -0.0024, -0.0616]],\n",
      "\n",
      "         [[ 0.1948, -0.0254, -0.1676],\n",
      "          [-0.0539, -0.2073, -0.2160],\n",
      "          [-0.1553, -0.2630,  0.0093]],\n",
      "\n",
      "         [[-0.1737, -0.0289, -0.0064],\n",
      "          [-0.1833, -0.0721, -0.1031],\n",
      "          [ 0.0719,  0.0872,  0.0610]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0451,  0.0331,  0.0986],\n",
      "          [-0.1141, -0.0607,  0.2125],\n",
      "          [-0.3289, -0.2034,  0.1593]],\n",
      "\n",
      "         [[ 0.0537, -0.0229,  0.0460],\n",
      "          [-0.0450, -0.1209,  0.1024],\n",
      "          [-0.3055, -0.1485,  0.0791]],\n",
      "\n",
      "         [[ 0.0754, -0.2025, -0.4281],\n",
      "          [ 0.2464, -0.1036, -0.1233],\n",
      "          [ 0.2426, -0.2052, -0.0688]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.1043, -0.0564, -0.0897],\n",
      "          [ 0.0788,  0.0701,  0.0559],\n",
      "          [ 0.2120,  0.0630,  0.0257]],\n",
      "\n",
      "         [[ 0.1161,  0.0533, -0.2427],\n",
      "          [-0.0096, -0.2009, -0.1398],\n",
      "          [-0.0250, -0.3496, -0.2787]],\n",
      "\n",
      "         [[ 0.1445,  0.1817,  0.0546],\n",
      "          [ 0.0284, -0.0218, -0.2199],\n",
      "          [-0.0494, -0.0615,  0.0053]]],\n",
      "\n",
      "\n",
      "        [[[-0.0917, -0.0644, -0.0740],\n",
      "          [ 0.0159,  0.0160, -0.1563],\n",
      "          [ 0.2331,  0.1682, -0.2197]],\n",
      "\n",
      "         [[ 0.2255,  0.1201,  0.3705],\n",
      "          [-0.0566, -0.0882,  0.0013],\n",
      "          [-0.3394, -0.1335,  0.0338]],\n",
      "\n",
      "         [[ 0.1403, -0.1143, -0.0876],\n",
      "          [-0.1494, -0.0921,  0.1692],\n",
      "          [-0.0616,  0.0702,  0.2182]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0524, -0.1933, -0.0945],\n",
      "          [-0.0247, -0.0221,  0.0650],\n",
      "          [ 0.0752,  0.1667,  0.1697]],\n",
      "\n",
      "         [[ 0.1654, -0.0753, -0.0077],\n",
      "          [ 0.3308, -0.0284, -0.0589],\n",
      "          [ 0.2523, -0.0173, -0.0587]],\n",
      "\n",
      "         [[-0.0212,  0.0362, -0.1794],\n",
      "          [ 0.0910,  0.0957,  0.1304],\n",
      "          [ 0.1953, -0.0745, -0.0983]]],\n",
      "\n",
      "\n",
      "        [[[-0.0132,  0.0125,  0.0164],\n",
      "          [-0.0321,  0.0098,  0.0448],\n",
      "          [ 0.0385, -0.0534,  0.0314]],\n",
      "\n",
      "         [[-0.1949, -0.2327, -0.1139],\n",
      "          [-0.1665, -0.2927, -0.0521],\n",
      "          [-0.0691, -0.1428, -0.1065]],\n",
      "\n",
      "         [[-0.0571, -0.0310, -0.0209],\n",
      "          [-0.2014, -0.0950, -0.1152],\n",
      "          [-0.0160,  0.0122, -0.0503]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0156,  0.0114,  0.0962],\n",
      "          [-0.1198, -0.0853,  0.0129],\n",
      "          [-0.0699, -0.0082,  0.0871]],\n",
      "\n",
      "         [[ 0.0792,  0.0821,  0.0564],\n",
      "          [ 0.0070,  0.1032,  0.1073],\n",
      "          [ 0.0423,  0.0865,  0.0282]],\n",
      "\n",
      "         [[-0.2294, -0.3020,  0.0481],\n",
      "          [-0.0469, -0.1477,  0.0182],\n",
      "          [ 0.2639,  0.0817,  0.3310]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.0074, 0.0096, 0.0085,  ..., 0.0041, 0.0038, 0.0041], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1.0015, 0.9917, 1.0226,  ..., 1.0118, 1.2223, 0.8034], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.1943, -0.2851, -0.2183,  ..., -0.0873, -0.3745, -0.0247],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-1.2706e-01, -1.7262e-01],\n",
      "          [-1.0506e-01, -1.6299e-01]],\n",
      "\n",
      "         [[-1.4152e-01, -1.4369e-01],\n",
      "          [ 4.2094e-04, -1.6013e-01]],\n",
      "\n",
      "         [[-1.7550e-01, -1.3586e-01],\n",
      "          [-1.1368e-01, -1.9008e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.7189e-01,  1.4361e-01],\n",
      "          [ 5.2550e-02,  1.7032e-01]],\n",
      "\n",
      "         [[-1.4175e-01, -1.7990e-01],\n",
      "          [-1.0693e-01, -1.8490e-01]],\n",
      "\n",
      "         [[-1.6405e-01, -1.6880e-01],\n",
      "          [-9.1395e-02, -2.0221e-01]]],\n",
      "\n",
      "\n",
      "        [[[-4.0743e-02, -1.7116e-01],\n",
      "          [ 3.3303e-02, -1.9398e-01]],\n",
      "\n",
      "         [[-5.4765e-02, -9.3965e-02],\n",
      "          [ 3.1180e-01, -8.1707e-02]],\n",
      "\n",
      "         [[-5.9225e-02, -1.5205e-01],\n",
      "          [ 1.3264e-01, -1.6512e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.3074e-02,  1.7247e-01],\n",
      "          [-1.1141e-01,  1.9412e-01]],\n",
      "\n",
      "         [[-4.2096e-02, -1.7222e-01],\n",
      "          [ 1.0288e-01, -1.6158e-01]],\n",
      "\n",
      "         [[-4.5015e-02, -1.8061e-01],\n",
      "          [ 1.1803e-01, -2.0484e-01]]],\n",
      "\n",
      "\n",
      "        [[[-8.0311e-02, -1.7115e-01],\n",
      "          [ 1.4126e-01,  1.2282e-01]],\n",
      "\n",
      "         [[-7.4270e-02,  1.8786e-01],\n",
      "          [-6.8888e-02,  2.9397e-01]],\n",
      "\n",
      "         [[-6.3755e-02, -2.0320e-01],\n",
      "          [ 1.5572e-01,  9.9752e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 9.8806e-02,  1.6779e-01],\n",
      "          [-1.2717e-01, -1.2589e-01]],\n",
      "\n",
      "         [[-1.0914e-01, -2.1290e-01],\n",
      "          [ 1.2728e-01,  1.2862e-01]],\n",
      "\n",
      "         [[-1.0178e-01, -1.7749e-01],\n",
      "          [ 1.5686e-01,  1.0671e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 2.9007e-02, -9.4622e-02],\n",
      "          [ 7.5431e-02, -7.9188e-02]],\n",
      "\n",
      "         [[-1.0510e-01,  7.1925e-02],\n",
      "          [-2.3899e-01, -1.9174e-01]],\n",
      "\n",
      "         [[-1.5869e-02, -1.3182e-01],\n",
      "          [ 8.1208e-02, -7.2388e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.1147e-03,  4.2696e-02],\n",
      "          [-7.6818e-02,  6.8857e-02]],\n",
      "\n",
      "         [[ 3.3215e-02, -6.8417e-02],\n",
      "          [ 1.0735e-01, -2.4029e-02]],\n",
      "\n",
      "         [[-4.6356e-03, -1.0466e-01],\n",
      "          [ 1.1772e-01, -6.5621e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 1.0107e-01, -1.5844e-02],\n",
      "          [ 3.1412e-01,  1.2493e-01]],\n",
      "\n",
      "         [[ 2.2491e-01, -1.2324e-03],\n",
      "          [ 2.7638e-01,  6.9313e-01]],\n",
      "\n",
      "         [[ 8.4349e-02, -3.2396e-02],\n",
      "          [ 3.0698e-01,  1.4932e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.3454e-02,  5.6276e-02],\n",
      "          [-2.9727e-01, -1.2147e-01]],\n",
      "\n",
      "         [[ 4.0997e-02, -2.3908e-02],\n",
      "          [ 3.1597e-01,  1.4661e-01]],\n",
      "\n",
      "         [[ 9.1956e-02, -1.8910e-02],\n",
      "          [ 3.0478e-01,  9.5559e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.1198e-01, -8.8963e-02],\n",
      "          [-8.4664e-02, -1.2017e-01]],\n",
      "\n",
      "         [[ 7.7548e-02, -7.6639e-02],\n",
      "          [ 4.2144e-02, -7.9179e-02]],\n",
      "\n",
      "         [[-1.1146e-01, -4.9560e-02],\n",
      "          [-8.9051e-02, -1.7246e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 9.3599e-02,  7.1031e-02],\n",
      "          [ 7.4625e-02,  1.1278e-01]],\n",
      "\n",
      "         [[-1.4468e-01, -8.7991e-02],\n",
      "          [-8.3607e-02, -1.8325e-01]],\n",
      "\n",
      "         [[-1.1647e-01, -9.3323e-02],\n",
      "          [-8.2553e-02, -1.4626e-01]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0971,  0.0581,  0.0519,  0.0897, -0.0452,  0.3751, -0.2198,  0.1403,\n",
      "         0.2911,  0.1958, -0.0768,  0.0537, -0.0636,  0.1357,  0.2196,  0.1111,\n",
      "         0.0506, -0.1600, -0.1202, -0.0030,  0.3169, -0.0907, -0.0153, -0.1752,\n",
      "         0.0960,  0.1057,  0.3128,  0.1043,  0.1774,  0.0957, -0.1057, -0.0322,\n",
      "        -0.0770,  0.3647, -0.0050, -0.1230,  0.1987, -0.0626,  0.0435,  0.0499,\n",
      "         0.1001,  0.1200,  0.3416, -0.1799,  0.2646,  0.0482,  0.1178,  0.1570,\n",
      "        -0.1249,  0.2867, -0.1290, -0.1093,  0.0779,  0.0261, -0.1340, -0.1076,\n",
      "         0.1365, -0.0990, -0.1269, -0.1541,  0.2470, -0.0796,  0.1120,  0.1944,\n",
      "        -0.0985,  0.0951, -0.1364,  0.0736,  0.0079,  0.2430,  0.0678, -0.1813,\n",
      "        -0.3258,  0.0833,  0.1411, -0.1024, -0.0023, -0.0497,  0.2110,  0.0741,\n",
      "         0.0776,  0.0860,  0.2369, -0.0952, -0.1534, -0.2760, -0.1003, -0.1298,\n",
      "         0.1856, -0.2392,  0.1265,  0.0378, -0.0016,  0.0742,  0.1167,  0.1031,\n",
      "         0.2797, -0.0976,  0.0968,  0.1320,  0.1356, -0.0928, -0.0392, -0.0998,\n",
      "        -0.1658,  0.0852,  0.2027, -0.1120, -0.1111,  0.1034, -0.1227, -0.1297,\n",
      "        -0.1528, -0.1803, -0.2491, -0.1532,  0.1285,  0.0705,  0.1539, -0.2836,\n",
      "        -0.1232, -0.0214, -0.3588, -0.1162, -0.1618,  0.1196, -0.2171, -0.2050,\n",
      "        -0.2604,  0.2397,  0.0973,  0.3784, -0.1045, -0.1621, -0.0708,  0.0252,\n",
      "         0.0593,  0.1302, -0.1453, -0.2296, -0.0936, -0.1195,  0.1301, -0.0060,\n",
      "         0.0516,  0.0157,  0.2224,  0.1230,  0.1183,  0.3362, -0.1813,  0.0084,\n",
      "         0.1055, -0.0818, -0.2562, -0.2028, -0.1153, -0.2680,  0.2937, -0.2505,\n",
      "         0.0439,  0.0519, -0.0241, -0.2974,  0.2019, -0.3026, -0.2978, -0.0796,\n",
      "        -0.2269,  0.0939,  0.1176, -0.0232,  0.0918, -0.1266,  0.1402,  0.0998,\n",
      "        -0.1230,  0.1038, -0.3016,  0.1526,  0.0494,  0.2117,  0.2386,  0.0943,\n",
      "        -0.0939,  0.1311,  0.2219, -0.0935, -0.0855,  0.1290,  0.1107,  0.0902,\n",
      "         0.1435, -0.0931, -0.1051, -0.1087,  0.0755, -0.2010,  0.1039, -0.0924,\n",
      "         0.0435,  0.1485, -0.1370, -0.0981, -0.0929,  0.0985,  0.1174,  0.0793,\n",
      "        -0.0574,  0.1203, -0.1115,  0.0989, -0.4410, -0.2210,  0.3274,  0.1918,\n",
      "        -0.0562,  0.1366, -0.2203,  0.1256, -0.1188,  0.1206, -0.2107,  0.0530,\n",
      "         0.1044,  0.1039,  0.1392,  0.0135, -0.2869,  0.0785,  0.1931,  0.1202,\n",
      "         0.1350,  0.1361, -0.0862, -0.1367,  0.2153, -0.0712,  0.1201,  0.0406,\n",
      "        -0.0683,  0.1076,  0.0812,  0.2219, -0.0825,  0.1250,  0.1315,  0.0856,\n",
      "        -0.1529,  0.0943,  0.0385, -0.0605,  0.1845,  0.1160,  0.2307,  0.0938,\n",
      "         0.1354,  0.2171, -0.0492, -0.1329, -0.2232, -0.0922, -0.1008, -0.2100,\n",
      "         0.0044,  0.0730,  0.0963,  0.0873,  0.0205, -0.2865, -0.1956,  0.1352,\n",
      "         0.1903, -0.1034,  0.2613, -0.1585, -0.2231,  0.1309,  0.0864,  0.0038,\n",
      "         0.0997, -0.0387,  0.1264, -0.0835,  0.1124,  0.0885,  0.3040,  0.1466,\n",
      "        -0.1204,  0.0284, -0.1721, -0.1988, -0.0802, -0.1981,  0.2351, -0.1492,\n",
      "         0.0336,  0.0767,  0.0454, -0.2275, -0.1454,  0.2064, -0.1464,  0.1166,\n",
      "         0.2290, -0.1176,  0.1250, -0.1014,  0.2370,  0.3525, -0.1058,  0.0783,\n",
      "         0.0372, -0.1215, -0.1358,  0.1321, -0.0979, -0.0830,  0.1812, -0.1796,\n",
      "         0.2303, -0.2576,  0.0730, -0.1322, -0.2342,  0.1674,  0.1509, -0.1699,\n",
      "        -0.2316, -0.1019,  0.1375,  0.2727,  0.1834, -0.1649,  0.2197,  0.2094,\n",
      "        -0.0657, -0.1105,  0.1421, -0.0720, -0.0656, -0.2257, -0.2080,  0.1006,\n",
      "        -0.0982,  0.1013,  0.0651, -0.0561, -0.1167, -0.2817,  0.1338,  0.1495,\n",
      "         0.0918,  0.0989,  0.1745,  0.1560, -0.0777, -0.0747,  0.2839,  0.1509,\n",
      "        -0.1334,  0.0747,  0.1448, -0.0717,  0.1187,  0.0861,  0.1300, -0.3160,\n",
      "        -0.1662, -0.1064,  0.4599,  0.1524, -0.1367, -0.1051,  0.1157, -0.4413,\n",
      "         0.1149,  0.1799, -0.3107,  0.1103, -0.1409,  0.1057, -0.0679, -0.1130,\n",
      "        -0.1462,  0.1512,  0.1363,  0.1248,  0.0657, -0.0886,  0.3118,  0.1583,\n",
      "        -0.0557, -0.1628, -0.1081,  0.2923,  0.1281,  0.1300, -0.0283, -0.3223,\n",
      "        -0.1855,  0.2560, -0.0214,  0.0667, -0.1248,  0.1382,  0.1738,  0.2223,\n",
      "         0.0780, -0.2744, -0.3858, -0.1792,  0.0876,  0.2827,  0.0704, -0.2352,\n",
      "        -0.1695, -0.1221,  0.1682,  0.0651,  0.1637,  0.0976,  0.1131,  0.0379,\n",
      "         0.0739,  0.0234,  0.1072,  0.1054, -0.1444, -0.1811,  0.1061, -0.0536,\n",
      "        -0.2778,  0.1571,  0.1058, -0.0907, -0.0052,  0.1249, -0.0890,  0.1473,\n",
      "        -0.2886,  0.1739,  0.2369,  0.0722, -0.0412, -0.0676, -0.2067, -0.0894,\n",
      "         0.0649, -0.0660, -0.0054, -0.0961,  0.0094,  0.0763,  0.0859, -0.0938,\n",
      "        -0.1238, -0.1287, -0.2734,  0.1696, -0.2338, -0.0081, -0.2394, -0.0899,\n",
      "        -0.1120,  0.2620,  0.1757,  0.0252,  0.2053, -0.0970, -0.2285,  0.1063,\n",
      "         0.1324,  0.1178, -0.0925, -0.4684, -0.0645, -0.0927, -0.0908, -0.1238,\n",
      "        -0.1509,  0.0609, -0.1133, -0.0978,  0.1540,  0.0624, -0.1166,  0.1462,\n",
      "        -0.2927, -0.1383, -0.0945,  0.0972,  0.2627,  0.2721, -0.1574,  0.0921,\n",
      "         0.1829,  0.1156, -0.2853,  0.1275, -0.0175,  0.1387,  0.0976, -0.3077,\n",
      "         0.2032,  0.0824,  0.0753,  0.0841,  0.2708, -0.0797,  0.1090,  0.1033],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-1.0617e-01,  2.0579e-01, -1.8216e-03],\n",
      "          [-5.1930e-02,  1.2225e-01, -2.4670e-01],\n",
      "          [-3.8583e-01, -6.7425e-02, -4.5701e-01]],\n",
      "\n",
      "         [[-1.3511e-01, -1.1462e-01, -7.9555e-02],\n",
      "          [-3.7328e-01, -2.4931e-01, -2.9057e-01],\n",
      "          [-6.2743e-02, -1.2186e-01, -4.2062e-02]],\n",
      "\n",
      "         [[-6.7198e-02, -1.0319e-01, -2.2781e-01],\n",
      "          [-2.0261e-02, -2.7919e-01, -3.1827e-01],\n",
      "          [ 8.6744e-02,  1.3322e-01,  7.8138e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-9.9705e-02, -9.5187e-03, -8.8075e-02],\n",
      "          [-1.8834e-02,  5.7378e-03, -3.6038e-03],\n",
      "          [ 1.9658e-01,  1.4580e-01,  1.9139e-01]],\n",
      "\n",
      "         [[ 9.7342e-02,  4.8346e-02,  6.1079e-02],\n",
      "          [ 3.8791e-02,  5.6508e-03,  9.6838e-03],\n",
      "          [-1.9059e-01, -1.0420e-01, -1.7363e-01]],\n",
      "\n",
      "         [[ 9.9635e-02,  2.6035e-02,  8.9752e-02],\n",
      "          [ 4.6878e-02, -2.1704e-03,  1.5193e-02],\n",
      "          [-1.9332e-01, -1.6213e-01, -1.8601e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.6631e-01, -6.2729e-02, -3.4097e-01],\n",
      "          [ 5.0282e-03, -2.5475e-01, -1.7831e-01],\n",
      "          [-6.2498e-02, -1.3343e-01, -2.8132e-01]],\n",
      "\n",
      "         [[-1.9722e-01, -1.8449e-01, -1.6905e-01],\n",
      "          [-9.5457e-02, -3.9992e-02, -1.3998e-01],\n",
      "          [-1.9643e-01, -1.0844e-01, -2.0027e-01]],\n",
      "\n",
      "         [[-1.3942e-01, -6.4945e-02,  7.5037e-02],\n",
      "          [-1.1883e-01, -3.5833e-02,  2.1621e-02],\n",
      "          [-9.2594e-02, -1.0510e-01,  4.6256e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.7375e-01,  7.6991e-02,  5.1464e-01],\n",
      "          [ 8.3545e-02,  1.5643e-02,  1.2506e-01],\n",
      "          [ 6.3150e-02,  9.7018e-03,  2.9826e-01]],\n",
      "\n",
      "         [[-2.8492e-01, -9.4296e-02, -5.6231e-01],\n",
      "          [-6.6832e-02, -5.2996e-02, -1.0623e-01],\n",
      "          [-3.0382e-02, -1.3532e-02, -2.6246e-01]],\n",
      "\n",
      "         [[-3.0230e-01, -6.8776e-02, -6.2502e-01],\n",
      "          [-7.4642e-02, -2.0593e-02, -1.2015e-01],\n",
      "          [-8.3846e-02, -4.7843e-04, -3.1764e-01]]],\n",
      "\n",
      "\n",
      "        [[[-9.6534e-02, -1.1339e-02, -6.3021e-02],\n",
      "          [ 5.1325e-02, -2.1167e-01, -3.3943e-02],\n",
      "          [ 3.9718e-02, -5.2173e-02, -2.1365e-01]],\n",
      "\n",
      "         [[-6.4758e-02, -1.0154e-01, -5.5889e-02],\n",
      "          [-3.5658e-02,  4.3939e-02, -3.7172e-02],\n",
      "          [-1.5556e-01, -5.1986e-02, -7.9677e-02]],\n",
      "\n",
      "         [[-1.1699e-02, -4.7023e-03,  1.7403e-01],\n",
      "          [-1.0985e-01, -6.9306e-02,  4.6755e-02],\n",
      "          [-3.6358e-02,  3.4116e-03,  1.1308e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1266e-02,  2.2988e-02,  4.8432e-02],\n",
      "          [ 1.2702e-01,  1.1569e-01,  1.5327e-01],\n",
      "          [ 3.0141e-01,  1.0899e-01,  4.3109e-01]],\n",
      "\n",
      "         [[-1.3453e-02, -5.1540e-02, -5.5574e-02],\n",
      "          [-1.1524e-01, -1.4064e-01, -1.1361e-01],\n",
      "          [-4.0934e-01, -1.1359e-01, -4.6675e-01]],\n",
      "\n",
      "         [[ 6.0123e-03, -2.9700e-02, -6.7126e-02],\n",
      "          [-1.1464e-01, -1.1961e-01, -1.3136e-01],\n",
      "          [-3.1720e-01, -8.1085e-02, -4.5710e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 1.1729e-01,  1.8768e-01,  1.5870e-01],\n",
      "          [ 1.2397e-01,  1.8393e-01,  2.6987e-01],\n",
      "          [ 1.6858e-01,  2.0633e-01,  1.2705e-01]],\n",
      "\n",
      "         [[ 1.2477e-01, -8.6032e-02, -9.5265e-02],\n",
      "          [ 5.3883e-02,  8.6799e-03,  5.7645e-02],\n",
      "          [ 7.6149e-02,  1.6413e-01,  3.7786e-02]],\n",
      "\n",
      "         [[-8.4771e-02,  1.7714e-02, -1.3816e-01],\n",
      "          [ 7.9966e-02,  1.7536e-01,  7.8333e-02],\n",
      "          [ 2.0859e-01,  2.4343e-01,  3.0631e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.4468e-01,  3.5505e-02,  1.0489e-01],\n",
      "          [ 9.2434e-02,  4.1023e-02, -3.2064e-02],\n",
      "          [-1.0847e-01,  2.1975e-02, -1.5843e-01]],\n",
      "\n",
      "         [[-2.3213e-01, -2.4034e-02, -1.2000e-01],\n",
      "          [-5.9585e-02, -2.3831e-02,  7.2850e-02],\n",
      "          [ 6.8633e-02, -2.4426e-03,  1.3343e-01]],\n",
      "\n",
      "         [[-2.6289e-01, -3.3194e-02, -1.3565e-01],\n",
      "          [-6.3420e-02, -1.8853e-02,  7.2933e-02],\n",
      "          [ 7.9296e-02, -1.1905e-02,  1.5701e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 2.7756e-01, -2.0215e-02,  4.4760e-01],\n",
      "          [ 3.6953e-01, -5.5204e-02,  2.5510e-01],\n",
      "          [ 4.6375e-01, -2.2888e-02, -2.0048e-01]],\n",
      "\n",
      "         [[ 2.1002e-01,  1.1714e-01,  4.1089e-01],\n",
      "          [ 1.6722e-02, -8.6402e-02,  1.6627e-01],\n",
      "          [ 1.4159e-01, -2.0618e-01,  2.1625e-01]],\n",
      "\n",
      "         [[ 1.3617e-02, -9.8308e-02, -3.8767e-02],\n",
      "          [ 7.7084e-02, -1.0054e-01,  6.2720e-02],\n",
      "          [ 2.0186e-02, -1.0437e-01,  2.8333e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.5830e-02, -1.1937e-02, -3.5077e-01],\n",
      "          [ 3.1321e-02,  2.1657e-02, -3.1688e-02],\n",
      "          [ 1.3753e-01,  2.9113e-02, -8.1316e-02]],\n",
      "\n",
      "         [[-6.2130e-02,  3.0680e-02,  2.5681e-01],\n",
      "          [-5.3328e-02,  1.2638e-02, -1.5739e-02],\n",
      "          [-1.4949e-01, -2.2973e-02,  2.0352e-02]],\n",
      "\n",
      "         [[-4.2971e-02,  2.9088e-02,  3.2604e-01],\n",
      "          [-4.6916e-02,  1.3173e-02,  3.1313e-02],\n",
      "          [-1.6676e-01, -1.6060e-02,  4.8754e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.4531e-01, -1.1187e-02,  3.6946e-02],\n",
      "          [-6.6694e-02, -1.4290e-01, -8.0795e-02],\n",
      "          [-3.1672e-02, -1.4140e-01, -2.9966e-01]],\n",
      "\n",
      "         [[ 1.2546e-01,  2.0425e-01,  9.6225e-02],\n",
      "          [ 9.4017e-02,  8.5423e-02,  9.0967e-02],\n",
      "          [-5.3601e-02, -9.7360e-02, -7.7413e-02]],\n",
      "\n",
      "         [[-8.1077e-02,  1.0023e-01,  2.0686e-01],\n",
      "          [-2.0221e-01, -7.1870e-02,  1.9325e-02],\n",
      "          [-2.4719e-01, -1.4662e-01, -6.7940e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.6983e-02,  6.7785e-02, -5.4406e-02],\n",
      "          [ 3.9096e-02, -6.2708e-03,  2.6671e-02],\n",
      "          [-1.2005e-02,  3.4222e-02,  1.9985e-01]],\n",
      "\n",
      "         [[ 1.6894e-03, -4.5319e-02, -1.7885e-02],\n",
      "          [-9.9978e-03, -3.8293e-04,  7.9154e-03],\n",
      "          [-7.9039e-02, -1.1386e-02, -2.7406e-01]],\n",
      "\n",
      "         [[ 9.6253e-03, -5.1509e-02,  2.7987e-02],\n",
      "          [-3.2366e-02,  1.7814e-03,  4.1937e-03],\n",
      "          [-1.5821e-02, -1.6590e-02, -1.9990e-01]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-7.1138e-03, -4.8330e-03,  7.1629e-03, -1.0258e-02, -1.9174e-03,\n",
      "         7.2211e-03,  4.3924e-03, -3.1120e-05,  9.5133e-03,  7.3066e-03,\n",
      "        -9.9039e-03,  5.2954e-03,  3.1435e-03,  9.9656e-03, -7.4082e-03,\n",
      "        -3.0711e-03,  2.5287e-03, -8.9296e-03, -8.1475e-03, -9.1544e-03,\n",
      "         2.0296e-03, -1.6960e-03,  3.8391e-03, -9.4422e-03,  3.7924e-03,\n",
      "         8.1243e-03, -4.6536e-04,  2.8684e-03,  4.3925e-03, -8.3653e-03,\n",
      "         8.5866e-03,  7.6721e-03, -5.0031e-03, -7.4720e-03, -2.8859e-03,\n",
      "         1.4726e-03,  5.1849e-03, -3.4529e-04,  5.1290e-04,  4.9968e-03,\n",
      "         4.4653e-03, -4.2796e-03, -2.1767e-03,  5.7642e-03,  3.5576e-03,\n",
      "         5.8337e-03,  8.0825e-03, -2.9054e-03, -9.1931e-03, -5.1818e-04,\n",
      "        -4.9219e-03, -1.6480e-03,  7.5996e-03, -9.4716e-03,  4.2633e-04,\n",
      "         4.0578e-03, -4.7379e-03, -5.9808e-03, -4.4969e-03, -2.2441e-03,\n",
      "         9.0576e-05, -6.4274e-04,  1.0382e-02,  5.2331e-04, -7.6615e-04,\n",
      "        -9.2874e-04,  1.4001e-03, -5.2983e-04,  3.0366e-03,  6.7195e-04,\n",
      "        -8.9506e-03,  1.0149e-02,  3.1171e-03,  3.8961e-04,  2.0982e-03,\n",
      "        -9.4437e-03, -3.2463e-04, -2.6863e-03, -2.1593e-03, -7.1712e-03,\n",
      "         4.1471e-03, -3.5225e-03,  6.1493e-03, -8.8757e-03,  9.5826e-03,\n",
      "        -6.5168e-03, -8.6335e-05,  6.8410e-03, -9.5022e-03,  4.6913e-03,\n",
      "        -6.5307e-03,  9.1659e-03,  9.3689e-04,  3.6341e-03, -4.0820e-03,\n",
      "        -4.4007e-03, -7.7246e-03,  9.5354e-03, -5.8514e-04, -6.5482e-03,\n",
      "         4.1323e-03,  1.3090e-03, -9.3650e-04,  2.9722e-03, -3.3741e-03,\n",
      "        -7.4662e-03,  7.5827e-03, -3.1827e-03,  9.1283e-03,  1.6455e-04,\n",
      "        -7.8011e-03,  7.0456e-03, -8.8724e-03, -1.2201e-03, -6.3479e-03,\n",
      "        -9.8755e-04, -9.2344e-03,  9.5864e-03, -7.9932e-03,  1.9167e-03,\n",
      "         3.0962e-03,  3.4874e-03,  1.3660e-03,  2.6002e-03, -5.1772e-04,\n",
      "        -6.1179e-03, -1.0041e-02,  2.9250e-03, -8.3312e-03, -8.6669e-03,\n",
      "        -8.9033e-03, -8.3589e-03,  6.8755e-03, -2.2131e-03,  3.5102e-03,\n",
      "         8.6932e-03, -1.0215e-02, -4.6195e-04,  2.0967e-03, -1.1140e-03,\n",
      "        -3.7858e-03, -1.0096e-02,  3.7662e-03,  1.7035e-03, -4.4734e-04,\n",
      "         4.2582e-04, -3.5188e-03, -2.7075e-03,  1.7531e-03,  3.9479e-03,\n",
      "        -8.9477e-04,  3.1155e-03,  5.0390e-03,  5.9297e-03, -8.0736e-03,\n",
      "        -6.3197e-03,  9.5702e-04,  8.4399e-03, -4.8135e-03, -3.6644e-03,\n",
      "         9.9530e-03, -7.9724e-03,  5.9158e-03,  7.7251e-03,  2.5426e-04,\n",
      "         2.9856e-03,  6.7938e-03,  1.4313e-03, -4.7655e-03, -2.3622e-03,\n",
      "         9.1129e-03, -1.0160e-03,  1.5149e-03, -9.2656e-03, -3.2942e-03,\n",
      "        -1.0142e-02, -1.7533e-04,  3.7352e-03,  8.4355e-04, -1.6438e-03,\n",
      "        -9.0057e-03, -8.5590e-03, -5.3939e-03, -2.1804e-03, -6.7828e-03,\n",
      "         3.7982e-03, -9.4324e-03,  1.1828e-03,  3.1497e-03,  5.4605e-03,\n",
      "        -3.9385e-03,  2.8399e-03, -5.8243e-03, -1.0794e-03,  9.1410e-03,\n",
      "         1.6855e-03, -9.4483e-03, -4.9126e-03, -5.5442e-03, -8.9998e-03,\n",
      "         7.2622e-03,  6.3186e-03,  8.6307e-03,  3.9266e-03, -8.1173e-04,\n",
      "        -2.3203e-03,  4.7305e-03,  8.3294e-03, -7.8666e-03, -3.5550e-03,\n",
      "        -6.8518e-03, -5.7408e-03,  6.0044e-03, -9.6269e-03, -8.0870e-03,\n",
      "         1.6803e-03, -2.9942e-04,  5.4379e-03,  2.8258e-03, -2.3637e-03,\n",
      "         6.3876e-03, -9.8087e-03,  3.6470e-03,  3.3961e-03,  1.2989e-03,\n",
      "        -1.9852e-03,  9.9878e-03,  3.8203e-03, -8.2803e-03,  2.6238e-03,\n",
      "         6.4265e-03,  2.1268e-03, -8.8326e-03,  6.5580e-03,  1.2484e-04,\n",
      "         1.6548e-03,  4.8013e-03, -6.6247e-03, -9.8844e-03,  3.1289e-03,\n",
      "         5.7065e-03, -8.9041e-03, -4.8023e-03, -4.7952e-03, -7.8775e-03,\n",
      "         4.8712e-03, -4.2109e-03, -1.0283e-02, -2.4680e-04, -4.3800e-03,\n",
      "         1.7811e-03, -2.2557e-03,  8.2224e-03, -4.3047e-03, -8.8719e-03,\n",
      "         7.5836e-03, -3.7889e-03,  8.9355e-03, -4.8242e-03,  3.4775e-03,\n",
      "        -7.3269e-03, -8.1591e-03, -9.4731e-03, -2.9490e-03, -3.8757e-03,\n",
      "         3.0038e-03,  6.8724e-03, -9.6885e-03, -5.3530e-03,  8.9972e-03,\n",
      "        -8.3634e-03, -5.1160e-03,  4.3869e-03,  1.1810e-03,  2.7772e-03,\n",
      "        -1.6762e-03,  9.0839e-03, -8.5234e-03, -5.1614e-03, -8.6138e-03,\n",
      "         6.1975e-03, -1.0030e-02,  1.0141e-02, -5.3137e-04, -5.6854e-03,\n",
      "        -9.5218e-03, -7.7693e-03, -7.3651e-03,  1.7088e-03, -8.5305e-03,\n",
      "         1.2997e-03, -5.2012e-03,  7.9326e-03, -1.3901e-03,  8.4521e-03,\n",
      "         6.3781e-03, -6.3887e-03, -6.4393e-03,  4.0076e-03,  8.7431e-03,\n",
      "         5.7012e-03, -1.0359e-02, -9.5129e-03,  8.6068e-04,  4.7330e-03,\n",
      "        -6.1164e-03, -5.6919e-03, -7.3596e-03, -3.1841e-03,  3.8852e-03,\n",
      "         7.1429e-04, -6.1515e-03,  2.6230e-04,  1.6464e-03,  4.3307e-04,\n",
      "         5.5246e-03, -5.5210e-03,  4.5889e-03,  6.9692e-03, -6.2433e-03,\n",
      "        -2.5708e-03,  8.7749e-03,  3.2743e-04, -4.5712e-03, -4.1235e-03,\n",
      "         9.1303e-03, -3.2418e-03, -3.9054e-04,  8.0121e-03,  4.4943e-03,\n",
      "        -7.5406e-03, -7.8121e-03, -6.1151e-03,  1.9423e-03, -1.2639e-03,\n",
      "        -4.4515e-03,  8.3704e-03,  2.6932e-03, -4.4689e-03, -3.6529e-04,\n",
      "        -7.6481e-03, -7.0401e-03, -2.8315e-03,  9.0801e-03, -9.1806e-03,\n",
      "        -9.9387e-03,  5.9815e-03,  4.8593e-03,  7.0160e-03,  2.6589e-03,\n",
      "         6.9227e-03,  4.8289e-03,  5.0702e-03,  5.7226e-03, -1.7108e-03,\n",
      "         3.2828e-03,  1.1944e-03,  2.1313e-03, -9.2593e-03,  3.1345e-03,\n",
      "        -2.6787e-03, -7.4328e-03,  1.5992e-03,  6.8977e-03, -5.7600e-03,\n",
      "         7.7492e-03,  8.1323e-03, -9.3339e-04, -3.4590e-03,  5.5577e-03,\n",
      "        -2.1725e-03,  8.2766e-03,  8.1478e-04,  7.1950e-03, -4.4571e-03,\n",
      "        -5.6080e-03, -1.0374e-02,  7.5856e-03,  8.5332e-03,  3.0800e-03,\n",
      "         3.4119e-03,  7.2905e-03, -1.8668e-03, -9.2284e-03,  1.5319e-03,\n",
      "         9.6056e-03,  4.8721e-03,  1.7668e-03, -6.6012e-03, -3.6290e-03,\n",
      "         3.9580e-03,  8.2359e-04,  9.2632e-03, -6.7158e-03, -9.5325e-03,\n",
      "        -2.3046e-03,  4.9159e-03,  4.9135e-03,  6.2859e-04, -2.5870e-03,\n",
      "        -1.0674e-03, -5.8329e-03, -2.3153e-03,  2.2478e-03,  3.9461e-03,\n",
      "        -1.2780e-03, -4.5896e-03,  2.4786e-04, -6.5484e-03, -5.2444e-03,\n",
      "         4.0071e-03,  6.1877e-03, -5.7817e-03,  1.0093e-02, -6.0313e-03,\n",
      "         1.0452e-03,  9.5092e-03,  4.9735e-03,  1.0104e-02, -6.6173e-03,\n",
      "        -1.0197e-02,  3.9434e-03, -2.2716e-03,  9.8882e-03,  3.7442e-04,\n",
      "        -7.2744e-03, -8.2591e-03,  6.2834e-03,  9.2852e-03,  9.1033e-03,\n",
      "        -7.5888e-03, -8.5474e-03,  6.5601e-03,  6.6625e-03, -1.0905e-03,\n",
      "         7.7948e-03,  8.1905e-03, -3.7918e-03,  1.1201e-03, -8.0435e-03,\n",
      "         1.7540e-03, -2.2086e-03, -3.9668e-03, -7.2209e-03,  3.0918e-03,\n",
      "        -1.1284e-03,  2.7479e-03, -2.9465e-03, -1.4324e-03, -7.2773e-03,\n",
      "        -9.0161e-04, -4.9189e-03,  3.8424e-03,  2.7911e-03,  3.9862e-03,\n",
      "         9.2342e-03, -1.0007e-02,  9.6644e-03, -1.6830e-03,  3.8433e-03,\n",
      "         5.6718e-03, -1.9067e-03, -6.1592e-03, -1.0111e-02, -1.3822e-03,\n",
      "        -9.5203e-03,  2.4166e-03,  8.1466e-04, -1.0372e-02,  3.7771e-03,\n",
      "        -4.0890e-03, -1.5194e-04,  1.5441e-03, -5.6610e-03, -8.6709e-03,\n",
      "         2.8429e-03, -4.1545e-03, -7.5664e-03, -2.8081e-03,  7.6351e-03,\n",
      "         3.5080e-03, -8.6791e-03,  3.0275e-03,  5.4542e-03,  3.4657e-03,\n",
      "         8.0610e-04,  9.6826e-03, -6.0598e-03,  6.7268e-03,  3.6237e-03,\n",
      "        -1.0682e-03, -5.7639e-03, -1.0144e-02,  6.1708e-03, -1.1733e-03,\n",
      "         8.8610e-03,  3.7359e-03, -2.4883e-03,  3.0151e-03,  7.3295e-04,\n",
      "         5.3638e-03,  8.9361e-03, -5.3038e-03,  3.5775e-03,  4.7355e-03,\n",
      "        -4.3576e-03, -7.9342e-03,  1.0038e-02, -8.6196e-03,  2.9129e-03,\n",
      "         8.4955e-03, -9.3964e-03], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1.1005, 0.8768, 0.7124, 1.0282, 0.8910, 0.7635, 1.4937, 0.6943, 0.7884,\n",
      "        0.9970, 0.7767, 0.8264, 0.6065, 0.8210, 0.7290, 0.8071, 1.0055, 0.9485,\n",
      "        0.6875, 0.8981, 0.7848, 0.7384, 0.7809, 1.2794, 0.7773, 0.6906, 0.9860,\n",
      "        0.7174, 0.7148, 1.1077, 1.2232, 0.8221, 0.8030, 0.6923, 0.7598, 0.8042,\n",
      "        0.6866, 1.1279, 0.6831, 1.1238, 0.7998, 0.7410, 1.0610, 0.7639, 0.7294,\n",
      "        1.1366, 1.2513, 0.9199, 0.6515, 0.6283, 1.2812, 1.4402, 1.2180, 1.2118,\n",
      "        0.6807, 1.0190, 1.2499, 0.7803, 0.8669, 1.2359, 0.7626, 1.1428, 0.8535,\n",
      "        0.6741, 1.2223, 0.8133, 1.0486, 1.0913, 0.9159, 0.7119, 0.8922, 1.4522,\n",
      "        1.2354, 1.0193, 0.7152, 0.9758, 0.9973, 0.7819, 0.7416, 0.9748, 1.1396,\n",
      "        0.7334, 1.1372, 1.0782, 0.6874, 1.4837, 0.8785, 1.2087, 1.2128, 1.1744,\n",
      "        0.8089, 0.7573, 0.9951, 0.8951, 0.6576, 0.6478, 0.7337, 1.0919, 0.8161,\n",
      "        0.8962, 0.7877, 0.7905, 0.7622, 0.7079, 1.0916, 0.7559, 0.8753, 0.8175,\n",
      "        1.0076, 0.8340, 0.7013, 0.7424, 1.1689, 0.6787, 1.0338, 1.4941, 0.7783,\n",
      "        0.7850, 1.4755, 0.8170, 1.3873, 0.8311, 0.6783, 1.2088, 0.7941, 0.7511,\n",
      "        0.8866, 1.0587, 0.8217, 0.7803, 1.0233, 0.7463, 1.3672, 0.9223, 0.8356,\n",
      "        1.1449, 0.8745, 0.7789, 0.8966, 0.8997, 0.9056, 0.5500, 1.5614, 1.2908,\n",
      "        0.7936, 0.9068, 1.3671, 0.8351, 1.5370, 1.4523, 1.5766, 1.2351, 0.9746,\n",
      "        1.4478, 0.8017, 1.4424, 1.3500, 0.8527, 0.8229, 0.8671, 0.7840, 0.7409,\n",
      "        0.7072, 1.4245, 1.5005, 0.8757, 0.7114, 1.1534, 1.0347, 0.7749, 0.9556,\n",
      "        1.0623, 0.7927, 0.6474, 0.8377, 0.8506, 1.0552, 0.7200, 1.5327, 0.7570,\n",
      "        0.7306, 1.0453, 0.8313, 0.7981, 0.6190, 0.6902, 0.7789, 0.7040, 0.7173,\n",
      "        0.7338, 0.7908, 0.6826, 0.6292, 0.7441, 0.8065, 0.7437, 0.6127, 0.7603,\n",
      "        1.3171, 1.2493, 0.7794, 0.6757, 1.0593, 0.7536, 0.7662, 1.4044, 0.7755,\n",
      "        0.8135, 0.8259, 0.8629, 0.7108, 1.3497, 0.8665, 0.6915, 1.1380, 1.3304,\n",
      "        1.0266, 0.6290, 1.0729, 0.7819, 1.1031, 0.7424, 0.7803, 1.0335, 1.2879,\n",
      "        1.2249, 0.6351, 1.3663, 1.2083, 0.7870, 1.1138, 1.0307, 1.2476, 0.8728,\n",
      "        1.2365, 0.8296, 0.7120, 0.6953, 0.7305, 1.2232, 0.8276, 0.5993, 0.6517,\n",
      "        1.1818, 0.7352, 0.7278, 0.6335, 0.6887, 0.6928, 0.6197, 1.3490, 0.9293,\n",
      "        0.7175, 1.5284, 0.9563, 1.6667, 0.9294, 0.7037, 0.7473, 1.3706, 0.7847,\n",
      "        1.3130, 0.7510, 1.2580, 0.7882, 1.3626, 0.8649, 1.0265, 0.7867, 0.6969,\n",
      "        0.9152, 0.7415, 0.9523, 0.7035, 1.2712, 0.9340, 0.7306, 0.7860, 0.7302,\n",
      "        0.7523, 0.9607, 0.7450, 0.7205, 0.9477, 0.9095, 0.7626, 1.2597, 0.7884,\n",
      "        0.8507, 0.7639, 0.7756, 0.8654, 0.9226, 0.8471, 0.9617, 1.3454, 1.1905,\n",
      "        0.9774, 0.6307, 0.6735, 1.0447, 0.9476, 1.1687, 0.7719, 0.7103, 0.6619,\n",
      "        0.6639, 0.8100, 0.8081, 1.0945, 0.8040, 0.7708, 0.6936, 0.8411, 0.8603,\n",
      "        0.7825, 0.6311, 0.8021, 0.6630, 1.4857, 0.7889, 0.9191, 0.7842, 1.0492,\n",
      "        0.7331, 0.8364, 1.4705, 0.7307, 0.8875, 0.8174, 0.8754, 0.8469, 0.8398,\n",
      "        0.7617, 1.0243, 1.1078, 0.7629, 1.0336, 0.7147, 1.0097, 0.7572, 0.7279,\n",
      "        1.4396, 0.8370, 1.2684, 1.2482, 0.7899, 0.7746, 0.8551, 0.6428, 1.1268,\n",
      "        0.9046, 1.3284, 1.2923, 0.7538, 0.9209, 0.7523, 0.6549, 0.9038, 0.7624,\n",
      "        1.4468, 1.1333, 0.8461, 1.1184, 0.7788, 1.5434, 0.9387, 0.8708, 0.6381,\n",
      "        1.4122, 0.6452, 1.0878, 0.8703, 1.3703, 0.8211, 0.9555, 0.7640, 0.8398,\n",
      "        0.7903, 0.7850, 1.2950, 1.1010, 0.9173, 1.3493, 1.3557, 0.9674, 0.7560,\n",
      "        0.7004, 1.4298, 0.8487, 0.8266, 0.9620, 0.7927, 0.6723, 0.7611, 0.9215,\n",
      "        0.8000, 1.1496, 1.0580, 1.3747, 1.1984, 0.7225, 0.6260, 0.6421, 0.7880,\n",
      "        0.7500, 0.7601, 1.2796, 0.6652, 0.6299, 0.7944, 0.6749, 0.6658, 0.8339,\n",
      "        0.7750, 0.9905, 0.8185, 0.7921, 1.2742, 0.8367, 1.2989, 1.0216, 0.9571,\n",
      "        1.0098, 0.9826, 1.3781, 0.7181, 0.6812, 1.2854, 0.7471, 0.9987, 0.9284,\n",
      "        1.2183, 0.5971, 0.8321, 1.1219, 0.7645, 0.7060, 1.5036, 0.8173, 0.8202,\n",
      "        1.1453, 0.8863, 0.9732, 0.8935, 0.8693, 0.9381, 1.0960, 0.8469, 0.5828,\n",
      "        0.8314, 0.8924, 0.7511, 0.9088, 0.7042, 0.8243, 0.8196, 0.8423, 0.9870,\n",
      "        0.9047, 0.6915, 0.7100, 1.1807, 1.0935, 0.7504, 0.7568, 1.0256, 1.4319,\n",
      "        0.9607, 0.7557, 1.3450, 1.1125, 0.6590, 0.8279, 1.3472, 0.7834, 0.6832,\n",
      "        0.8130, 1.2636, 0.7719, 0.9613, 0.8333, 1.4713, 1.2440, 0.8244, 0.8036,\n",
      "        0.6365, 0.7952, 1.0655, 1.2170, 0.9666, 1.0720, 0.5883, 0.7867, 1.0590,\n",
      "        1.0342, 1.2124, 0.7274, 0.9215, 1.0469, 0.6645, 0.8560, 0.6493, 0.8598,\n",
      "        1.2068, 0.6772, 1.2112, 0.9715, 0.6456, 1.2297, 1.2874, 1.0366],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.1712,  0.0434, -0.3198, -0.1831, -0.0948, -0.0316,  0.3213, -0.2839,\n",
      "        -0.3652, -0.3862, -0.3483, -0.2943, -0.1664, -0.0524, -0.2351, -0.0606,\n",
      "        -0.0615, -0.0500, -0.3870, -0.1214, -0.0631, -0.2120, -0.1151, -0.0871,\n",
      "        -0.1374, -0.2775, -0.3629, -0.2677, -0.4835,  0.0777,  0.1610, -0.2395,\n",
      "        -0.1424, -0.4390, -0.1098, -0.1059, -0.2411,  0.0670, -0.5440,  0.0109,\n",
      "        -0.3833, -0.2662, -0.0525, -0.0858, -0.1372,  0.0215, -0.0745, -0.2182,\n",
      "        -0.5834, -0.3066, -0.1632,  0.2924,  0.0359, -0.0551, -0.1365, -0.1232,\n",
      "         0.0135, -0.1428, -0.1876, -0.0306, -0.2899, -0.2743, -0.2185, -0.5243,\n",
      "        -0.2082, -0.0312, -0.0178,  0.0123,  0.0406, -0.3918, -0.2371,  0.2814,\n",
      "        -0.1466, -0.1296, -0.4989, -0.1674, -0.2463, -0.1522, -0.2102, -0.1176,\n",
      "        -0.0551, -0.3213, -0.1525, -0.0237, -0.2926,  0.3694, -0.1421, -0.1396,\n",
      "        -0.4265,  0.0123, -0.2311, -0.2623, -0.0963, -0.2816, -0.5807, -0.1975,\n",
      "        -0.4633, -0.1343,  0.0066, -0.0960, -0.2856, -0.2039, -0.1648, -0.3537,\n",
      "        -0.1833, -0.1863, -0.2218, -0.1717, -0.1502, -0.2343, -0.2854, -0.1732,\n",
      "        -0.0268, -0.3795, -0.0501,  0.1120, -0.0973, -0.3024,  0.0920, -0.2234,\n",
      "        -0.1264, -0.1893, -0.5523,  0.0318, -0.0783, -0.1710, -0.0540, -0.0429,\n",
      "        -0.1395, -0.2034, -0.2087, -0.2889, -0.2314, -0.2108, -0.1915, -0.0807,\n",
      "        -0.0803, -0.1746, -0.0302, -0.0826, -0.1467, -0.5032,  0.4456,  0.1182,\n",
      "        -0.1602,  0.0629,  0.3112, -0.1395,  0.1633,  0.2867,  0.4170, -0.0414,\n",
      "        -0.2091, -0.1271, -0.2122,  0.3121,  0.1267, -0.0316, -0.2044, -0.3049,\n",
      "        -0.2284, -0.4156, -0.2440,  0.2656,  0.4274, -0.0545, -0.3901, -0.0692,\n",
      "        -0.2974, -0.0746, -0.1690, -0.2314, -0.1958, -0.3329,  0.0069,  0.0192,\n",
      "        -0.1496, -0.3350,  0.0405, -0.2944, -0.3221,  0.0095, -0.0387, -0.0631,\n",
      "        -0.4230, -0.4938, -0.2732, -0.1458, -0.4016, -0.1805, -0.2487, -0.2935,\n",
      "        -0.5361, -0.0880, -0.1721, -0.2831, -0.4779, -0.2739,  0.2146,  0.3220,\n",
      "        -0.0959, -0.5555, -0.0530, -0.5597, -0.3085,  0.0945, -0.3957, -0.0205,\n",
      "        -0.1627, -0.0346, -0.2334, -0.0524, -0.0026, -0.4358,  0.0810, -0.0026,\n",
      "        -0.1390, -0.5164,  0.0776, -0.1080, -0.0854, -0.2388, -0.2873, -0.2275,\n",
      "         0.0219,  0.0021, -0.5113,  0.0036,  0.0017, -0.2130, -0.3058, -0.0414,\n",
      "         0.0356, -0.4086,  0.0321, -0.2691, -0.2263, -0.3752, -0.2677,  0.0130,\n",
      "        -0.2399, -0.3821, -0.4524, -0.0439, -0.1863, -0.2890, -0.4210, -0.2599,\n",
      "        -0.3922, -0.4868, -0.2077, -0.0221, -0.2364,  0.1154,  0.0056,  0.3315,\n",
      "        -0.2687, -0.4014, -0.2406,  0.1426, -0.2808,  0.0741, -0.2739, -0.0783,\n",
      "        -0.2123,  0.0348, -0.0281, -0.2452, -0.2868, -0.4016, -0.1886, -0.3518,\n",
      "        -0.2138, -0.3675,  0.1124, -0.1183, -0.1941, -0.2603, -0.1656, -0.2753,\n",
      "        -0.2069, -0.1391, -0.2071, -0.0234,  0.1142, -0.3311,  0.0687, -0.2441,\n",
      "        -0.1882, -0.1159, -0.3327, -0.0703, -0.0294, -0.1698, -0.2171, -0.0203,\n",
      "        -0.0312, -0.1199, -0.4757, -0.5748,  0.1101, -0.3008,  0.0542, -0.2133,\n",
      "        -0.3295, -0.4188, -0.5180,  0.0377, -0.1513, -0.1907, -0.1992, -0.3587,\n",
      "        -0.5045, -0.2908, -0.2058, -0.2680, -0.3916, -0.0884, -0.3679, -0.0213,\n",
      "        -0.0747, -0.3407, -0.2819, -0.0886, -0.2173, -0.1336,  0.1909, -0.2472,\n",
      "        -0.0917, -0.0576, -0.2070, -0.3546, -0.0189, -0.2668, -0.1135,  0.0512,\n",
      "        -0.3177,  0.0042, -0.3030, -0.1438, -0.2856, -0.3435,  0.3049, -0.0558,\n",
      "         0.1929,  0.0676, -0.2618, -0.2611, -0.1802, -0.3966, -0.1710, -0.2674,\n",
      "         0.1324,  0.0793, -0.2690, -0.1087, -0.3496, -0.5760, -0.2055, -0.1234,\n",
      "         0.2954, -0.1313, -0.2377,  0.0545, -0.1957,  0.1941, -0.1615,  0.0776,\n",
      "        -0.2080,  0.2134, -0.5495,  0.0294, -0.2476, -0.1374, -0.0530,  0.0065,\n",
      "        -0.1315, -0.4098, -0.1385, -0.2626,  0.3080, -0.1402, -0.2617, -0.2303,\n",
      "         0.1779, -0.0897, -0.1997, -0.1376,  0.2140, -0.2187, -0.0163, -0.1000,\n",
      "        -0.3304, -0.3797, -0.1983, -0.0818, -0.3235, -0.0430, -0.1948, -0.0950,\n",
      "        -0.1028, -0.1534, -0.4396, -0.0343, -0.3013, -0.1343, -0.3016,  0.3298,\n",
      "        -0.4353, -0.3303, -0.1554, -0.4564, -0.2059, -0.1429, -0.2616, -0.3664,\n",
      "         0.0252, -0.1876, -0.0241, -0.0130,  0.2678, -0.1805, -0.1458, -0.3804,\n",
      "        -0.2088,  0.1978, -0.2207, -0.4731,  0.0489, -0.1934, -0.0108, -0.1534,\n",
      "         0.2475, -0.5858, -0.3427, -0.0034, -0.1954, -0.4169,  0.3946, -0.1573,\n",
      "        -0.2724,  0.0881, -0.4493, -0.2497, -0.2436,  0.2087, -0.0840, -0.2829,\n",
      "        -0.2046, -0.2775, -0.1363, -0.0357, -0.3178, -0.0325, -0.5015, -0.2425,\n",
      "        -0.3852, -0.0469, -0.1905, -0.0147, -0.4671, -0.2814, -0.0382, -0.0437,\n",
      "        -0.2666, -0.2666, -0.1811, -0.1469, -0.0322, -0.1242,  0.1605,  0.0844,\n",
      "        -0.1922, -0.0708,  0.0276, -0.2088, -0.2289, -0.2390, -0.1481, -0.1359,\n",
      "        -0.3309, -0.2554,  0.1300,  0.0798, -0.0783, -0.1866, -0.5461, -0.0238,\n",
      "        -0.0943,  0.1829, -0.1213,  0.1281, -0.4890, -0.2541, -0.1779,  0.1097,\n",
      "        -0.2053, -0.2125, -0.0192, -0.1242, -0.2372,  0.0328, -0.3197, -0.0675,\n",
      "        -0.2877, -0.4142,  0.1219, -0.1573, -0.2286, -0.1119, -0.1354, -0.0320],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 9.0687e-02, -2.1518e-01,  7.9244e-02],\n",
      "          [-8.4512e-02, -1.7612e-01, -8.4453e-02],\n",
      "          [-1.7221e-01,  2.8439e-02, -2.4088e-01]],\n",
      "\n",
      "         [[-1.9381e-01, -1.9502e-02, -1.1842e-01],\n",
      "          [-3.9268e-02, -1.0123e-02, -6.4027e-02],\n",
      "          [-2.7120e-01, -1.8819e-02, -2.4652e-01]],\n",
      "\n",
      "         [[-2.1817e-01,  1.4520e-02, -2.5461e-01],\n",
      "          [ 2.3335e-02,  4.8484e-02, -3.5544e-02],\n",
      "          [-1.9235e-01, -3.2484e-02, -2.5638e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.2621e-01,  3.6512e-02,  1.0373e-02],\n",
      "          [-3.9076e-02, -9.5025e-03, -7.8234e-02],\n",
      "          [ 1.3197e-01,  1.3171e-01,  4.0338e-01]],\n",
      "\n",
      "         [[-7.0724e-02, -2.7703e-01,  3.0617e-01],\n",
      "          [-1.7084e-02, -9.7262e-02, -1.3687e-01],\n",
      "          [-9.1703e-02,  8.3356e-02,  4.9372e-02]],\n",
      "\n",
      "         [[-1.0785e-01, -4.3939e-01, -2.2677e-01],\n",
      "          [ 4.9590e-02,  3.6373e-03,  1.5159e-02],\n",
      "          [ 7.9686e-03, -3.3536e-01, -1.8288e-01]]],\n",
      "\n",
      "\n",
      "        [[[-5.5301e-02,  6.4028e-02, -2.3354e-01],\n",
      "          [ 7.4901e-03, -8.6320e-03, -9.9115e-02],\n",
      "          [ 1.8318e-01,  1.9059e-01,  6.3514e-02]],\n",
      "\n",
      "         [[ 1.7723e-01, -8.6182e-02,  2.8794e-01],\n",
      "          [ 7.6425e-02,  8.3686e-03, -7.9955e-03],\n",
      "          [ 1.3180e-01, -7.0902e-02,  1.8523e-01]],\n",
      "\n",
      "         [[ 8.2050e-02, -1.0477e-01,  1.0897e-01],\n",
      "          [ 3.5766e-03, -2.3263e-02, -1.3424e-01],\n",
      "          [ 4.6496e-02,  1.0011e-02,  1.3476e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.1722e-01,  1.4123e-01,  1.8413e-01],\n",
      "          [-3.8827e-02,  1.2547e-01,  6.9267e-02],\n",
      "          [-1.6427e-01, -1.4742e-01, -1.3251e-01]],\n",
      "\n",
      "         [[-1.2796e-01, -2.0699e-01, -2.3347e-01],\n",
      "          [ 1.2807e-01,  8.2613e-02,  1.2153e-02],\n",
      "          [-5.9274e-02, -1.2976e-01, -1.7288e-01]],\n",
      "\n",
      "         [[-8.8363e-02, -1.9449e-01, -1.1027e-01],\n",
      "          [ 7.6815e-02,  1.0111e-01, -8.1289e-02],\n",
      "          [-1.0227e-01, -1.8729e-01,  6.7642e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.1337e-01,  1.0784e-01,  7.4736e-02],\n",
      "          [-1.2077e-01, -5.9363e-03, -2.5908e-02],\n",
      "          [-4.0154e-01,  6.7724e-02, -3.8979e-01]],\n",
      "\n",
      "         [[ 4.0165e-02,  4.1757e-02,  1.1055e-01],\n",
      "          [-1.1533e-01,  3.8671e-02, -1.1191e-01],\n",
      "          [-1.8282e-01, -9.7632e-02, -1.0693e-01]],\n",
      "\n",
      "         [[-1.1171e-01,  2.4897e-02, -1.0774e-01],\n",
      "          [-8.0042e-02,  9.5662e-03, -1.2515e-01],\n",
      "          [-2.2452e-01, -2.3025e-01, -2.1513e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.6482e-01,  5.2960e-02,  2.0364e-01],\n",
      "          [ 2.6262e-01,  7.6221e-02,  1.1155e-01],\n",
      "          [ 4.3678e-01,  1.6944e-01,  4.6228e-01]],\n",
      "\n",
      "         [[-6.2888e-02, -1.8884e-02, -1.6958e-01],\n",
      "          [-1.9526e-01, -4.9628e-02, -4.3266e-02],\n",
      "          [-1.0683e-01,  1.6472e-02, -2.7733e-03]],\n",
      "\n",
      "         [[-2.9624e-01, -2.9767e-01, -3.5345e-01],\n",
      "          [-1.1176e-01, -4.7223e-02, -1.3527e-01],\n",
      "          [-1.8165e-01, -1.9147e-01, -2.2130e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 1.0235e-02, -2.0516e-01, -1.0127e-01],\n",
      "          [-5.5391e-02, -5.6649e-02, -1.9715e-01],\n",
      "          [-6.7752e-02, -1.9823e-02, -1.8590e-01]],\n",
      "\n",
      "         [[-8.7666e-02, -2.8831e-01, -3.0400e-01],\n",
      "          [ 1.6429e-02, -1.3565e-02, -7.7238e-03],\n",
      "          [-1.2090e-01, -1.8978e-01, -1.3828e-01]],\n",
      "\n",
      "         [[-3.9605e-02, -2.7356e-01, -2.2067e-01],\n",
      "          [ 4.7905e-03,  1.2622e-02, -1.9322e-02],\n",
      "          [-2.1566e-01, -2.8604e-01, -1.9322e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.4541e-01, -1.9345e-01, -3.4454e-01],\n",
      "          [ 1.4036e-02,  1.9452e-01,  1.1699e-02],\n",
      "          [-3.1309e-01, -1.7979e-01, -3.6451e-01]],\n",
      "\n",
      "         [[-1.0475e-01, -3.0833e-02,  1.3369e-01],\n",
      "          [ 2.4073e-01,  1.1984e-01,  4.8178e-02],\n",
      "          [ 9.8836e-02,  1.4226e-01,  2.8174e-01]],\n",
      "\n",
      "         [[-6.7591e-03, -8.2836e-02, -5.4410e-02],\n",
      "          [ 2.3508e-01,  1.6089e-01,  1.3003e-01],\n",
      "          [-1.7418e-01, -1.2467e-01, -4.8622e-02]]],\n",
      "\n",
      "\n",
      "        [[[-8.1300e-02, -1.0894e-01, -2.5888e-01],\n",
      "          [ 5.8310e-02, -1.4597e-01,  5.6045e-02],\n",
      "          [ 1.9838e-01,  2.7672e-02,  1.8937e-01]],\n",
      "\n",
      "         [[ 1.3285e-01, -2.5832e-02,  3.2510e-01],\n",
      "          [-6.3083e-03, -3.5284e-02,  2.5005e-02],\n",
      "          [ 4.5614e-02, -5.4742e-02,  1.4940e-01]],\n",
      "\n",
      "         [[ 4.9994e-02, -7.8143e-02,  1.2963e-01],\n",
      "          [-6.7629e-03, -6.8529e-04, -8.4469e-03],\n",
      "          [ 4.4783e-02,  5.9434e-02,  1.7203e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.1955e-01,  1.8142e-02,  7.6105e-02],\n",
      "          [-1.7248e-01, -2.1594e-02, -1.0753e-01],\n",
      "          [-2.5324e-01, -3.0127e-01, -3.0120e-01]],\n",
      "\n",
      "         [[-2.2085e-01, -1.1139e-01, -4.7975e-01],\n",
      "          [ 5.3170e-02,  4.4130e-02, -1.7054e-02],\n",
      "          [ 1.7021e-01, -3.9641e-04, -1.9619e-02]],\n",
      "\n",
      "         [[-3.9339e-02, -7.7428e-02, -4.3487e-02],\n",
      "          [ 8.9742e-02,  1.1568e-01,  5.7489e-02],\n",
      "          [-1.0651e-01, -5.4405e-02,  1.2360e-01]]],\n",
      "\n",
      "\n",
      "        [[[-6.4832e-02, -1.2874e-01, -7.1912e-02],\n",
      "          [ 1.6056e-01, -7.3681e-02,  1.5333e-01],\n",
      "          [ 8.0309e-02, -8.5293e-02,  1.0325e-01]],\n",
      "\n",
      "         [[ 1.5651e-01,  3.8534e-02,  2.1121e-01],\n",
      "          [ 2.1992e-02, -6.5873e-02,  1.2105e-01],\n",
      "          [ 1.6141e-02, -2.7338e-02,  5.0691e-02]],\n",
      "\n",
      "         [[ 7.2544e-02, -6.7390e-03,  1.1190e-01],\n",
      "          [-1.0029e-01, -4.7105e-02,  8.8205e-03],\n",
      "          [-2.2223e-02,  1.9386e-02, -8.9433e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.2119e-01,  3.7081e-02,  1.1573e-01],\n",
      "          [-2.3215e-01,  1.0459e-03, -6.5394e-02],\n",
      "          [-2.0673e-01,  2.4708e-02, -2.5796e-01]],\n",
      "\n",
      "         [[-5.3945e-02, -3.1748e-01, -2.0590e-01],\n",
      "          [ 4.9076e-02, -1.0994e-01,  7.1839e-02],\n",
      "          [ 2.0523e-01, -2.3496e-01,  1.7042e-01]],\n",
      "\n",
      "         [[ 5.6965e-02, -9.6377e-02,  1.0982e-01],\n",
      "          [ 4.3954e-02,  2.5321e-02,  1.2024e-01],\n",
      "          [-1.2704e-01, -1.7143e-01, -1.3644e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-3.4916e-03, -9.3660e-04,  4.9275e-03, -5.7106e-03,  5.0236e-03,\n",
      "         5.6550e-03,  1.2838e-02, -4.2582e-03,  7.1845e-03,  5.3948e-03,\n",
      "         9.5531e-03, -1.0161e-02, -8.1927e-03,  6.4385e-03,  2.6671e-03,\n",
      "         2.1260e-03, -1.5087e-04, -8.4276e-03,  1.2769e-02, -1.0832e-02,\n",
      "         6.1876e-03, -8.0573e-03,  1.1431e-02,  3.5204e-03, -5.1134e-03,\n",
      "         1.3012e-02,  7.4617e-03, -9.4676e-03, -1.2641e-02,  3.3170e-03,\n",
      "         8.0290e-03, -1.1323e-02,  7.9832e-03, -7.1414e-03,  8.1946e-03,\n",
      "         1.2228e-02, -1.3122e-02,  6.4447e-03,  1.1953e-02,  7.3783e-03,\n",
      "         4.4572e-03, -7.0304e-04, -8.3569e-04,  3.5695e-03,  9.5177e-03,\n",
      "         1.0283e-02,  1.4473e-02,  1.2942e-02, -2.7627e-03, -1.1199e-02,\n",
      "         9.4241e-03, -2.6763e-03,  7.7188e-04,  2.3369e-03, -8.1049e-03,\n",
      "        -6.6144e-03,  7.7741e-03,  1.3638e-03,  1.3274e-02,  1.6245e-03,\n",
      "        -8.5882e-03, -2.6506e-03, -1.4021e-02,  1.2045e-02,  5.3285e-04,\n",
      "         1.7277e-03, -1.0209e-02, -3.4394e-03,  9.5738e-03,  8.5722e-04,\n",
      "        -1.3949e-02, -8.8873e-03,  4.9150e-03,  1.3292e-02,  1.0085e-02,\n",
      "         1.1101e-02,  1.2336e-02,  8.4106e-03,  8.4939e-03, -3.9570e-03,\n",
      "         8.6557e-03, -1.3088e-02,  4.2436e-03, -9.3642e-03,  2.9460e-03,\n",
      "         1.1018e-03,  1.5841e-03,  7.9221e-03,  7.4439e-03, -3.1102e-03,\n",
      "         8.9061e-03,  1.1573e-02,  1.0145e-02,  1.2169e-02, -8.3242e-03,\n",
      "        -8.5207e-03,  1.1045e-02, -6.0258e-03, -4.8009e-03, -3.3077e-03,\n",
      "        -5.0295e-03,  1.1434e-02, -4.1409e-04,  1.2684e-02, -6.8750e-03,\n",
      "        -3.6597e-03, -5.6390e-03,  1.0450e-03,  1.3202e-02,  3.0337e-03,\n",
      "         6.0318e-03,  1.0171e-02,  8.0233e-03, -3.0620e-03, -1.3329e-02,\n",
      "        -6.5965e-03, -1.0968e-02, -3.2254e-03,  1.0918e-02,  2.1416e-03,\n",
      "        -1.2294e-02,  1.4459e-02, -1.1374e-02, -1.1126e-02,  1.0937e-02,\n",
      "         1.1168e-02,  1.7901e-03,  4.2084e-03, -1.4303e-02, -1.2958e-04,\n",
      "         1.0841e-02, -1.2846e-02, -1.2964e-02, -3.3181e-03,  1.2272e-04,\n",
      "        -4.2907e-03,  5.1748e-03, -1.3197e-02,  1.1751e-02, -1.1202e-02,\n",
      "         9.1670e-03, -1.3353e-02, -1.1687e-02,  8.9584e-03,  1.4717e-03,\n",
      "         1.0272e-02,  9.3122e-03,  1.0044e-02,  1.1197e-02,  5.2993e-03,\n",
      "        -1.1107e-02,  7.2623e-03,  4.1684e-03, -9.8885e-03, -1.3695e-02,\n",
      "         4.6112e-03,  5.0644e-03, -7.5787e-04, -3.6898e-03,  1.4120e-02,\n",
      "         1.0761e-02, -1.0987e-02,  1.9842e-03, -6.3223e-03,  2.2106e-03,\n",
      "        -1.3603e-02, -4.0269e-03, -2.5886e-03, -2.2660e-03, -1.4723e-02,\n",
      "         1.4270e-02,  1.3420e-02, -4.1200e-03,  1.3184e-02,  1.2118e-02,\n",
      "        -1.0281e-02,  3.8627e-03, -1.3812e-02, -5.9785e-03,  1.4263e-02,\n",
      "         1.3387e-02, -6.5749e-03,  7.6849e-03,  6.2360e-04, -8.1678e-03,\n",
      "        -3.4545e-03,  1.2315e-02,  6.9153e-03,  1.3624e-02,  1.1158e-02,\n",
      "         1.0737e-02, -5.2728e-03,  3.2057e-03,  5.7718e-03, -3.4712e-03,\n",
      "         5.3830e-03, -1.4617e-02, -7.8276e-03, -4.7454e-04, -6.2000e-03,\n",
      "         8.3564e-03, -1.3250e-02,  8.5383e-03, -5.4735e-03,  3.0956e-04,\n",
      "         3.0148e-03,  8.4077e-03, -1.2191e-02,  6.2442e-03,  1.0001e-02,\n",
      "        -4.1374e-03, -4.6798e-03,  5.1272e-03,  3.9213e-04, -4.2842e-03,\n",
      "         6.6264e-03, -1.0473e-02,  1.2455e-03,  9.2787e-03,  8.9091e-03,\n",
      "        -1.0171e-02, -8.5110e-03,  7.4935e-03, -5.1694e-04,  7.8684e-03,\n",
      "         1.0840e-02,  5.6559e-03, -1.0012e-02,  1.2192e-03,  1.3663e-02,\n",
      "        -1.2527e-02,  4.2802e-03,  1.1955e-02,  1.7751e-03,  5.7287e-03,\n",
      "         2.4929e-03,  7.4484e-03,  2.1394e-03, -1.4488e-02, -1.3788e-02,\n",
      "         1.4518e-02, -8.8513e-03, -1.0033e-02,  4.9992e-03, -1.1624e-02,\n",
      "        -1.3727e-02,  6.6558e-03, -1.1219e-02,  1.2359e-02, -5.8220e-03,\n",
      "        -1.9231e-03,  1.6476e-04,  6.7506e-03, -7.0021e-03, -8.5804e-03,\n",
      "         1.4110e-02,  7.2179e-03, -4.3600e-03,  5.0626e-03,  3.3617e-03,\n",
      "         1.2424e-02, -3.2989e-03, -1.4155e-02, -1.9337e-04,  1.1118e-02,\n",
      "         1.1631e-02, -7.1595e-03,  3.4787e-03,  5.7127e-03,  7.5144e-03,\n",
      "         1.0956e-02, -1.1487e-02, -5.9296e-04,  1.9887e-04,  1.1841e-02,\n",
      "        -2.8593e-03,  1.1547e-02,  1.3274e-02, -2.4975e-03, -1.8229e-04,\n",
      "         7.7203e-03,  8.8285e-03, -1.0646e-02,  1.3107e-02,  2.6783e-03,\n",
      "        -3.5273e-03,  1.1483e-02,  1.2734e-02,  1.4200e-02,  1.0235e-02,\n",
      "        -1.0929e-02,  5.8557e-04,  1.4434e-02, -7.5004e-03, -3.9582e-04,\n",
      "        -6.4626e-03,  1.2970e-02,  7.4026e-03, -6.5882e-03,  4.7098e-03,\n",
      "         1.4722e-03,  7.8278e-03,  1.9889e-04,  1.2688e-02,  2.8354e-03,\n",
      "         1.4620e-02,  4.3541e-03,  4.0292e-03,  6.9648e-03, -3.5769e-03,\n",
      "         3.9105e-03, -5.4817e-03, -1.2780e-02,  1.1584e-02,  9.3766e-04,\n",
      "        -3.5403e-03,  8.2946e-03, -3.9205e-03, -1.3430e-02,  3.5036e-03,\n",
      "        -3.3841e-03, -6.9849e-03, -5.3953e-03, -1.2226e-02,  3.7927e-03,\n",
      "        -1.2314e-02, -1.1423e-02,  2.7483e-03,  5.1625e-03,  5.5538e-03,\n",
      "         1.2103e-02, -7.6503e-03, -1.0677e-02,  1.2327e-02,  5.2564e-03,\n",
      "        -1.3556e-02,  1.3523e-02,  4.4334e-03, -6.9089e-04,  1.2001e-02,\n",
      "        -2.7517e-03, -1.4249e-02,  4.7618e-03,  1.1687e-02, -6.3836e-03,\n",
      "        -1.1824e-02,  1.4256e-02, -1.4029e-02, -1.3787e-02,  1.3052e-02,\n",
      "        -7.7405e-03, -9.8169e-03, -1.2769e-03, -1.1046e-02, -8.1089e-03,\n",
      "        -1.2379e-02, -1.0121e-02,  6.2568e-03, -7.8281e-03,  9.7803e-03,\n",
      "         7.6218e-03, -1.0087e-05,  5.8467e-03,  6.6676e-04, -5.9939e-03,\n",
      "         8.5708e-03,  9.1822e-04,  1.0084e-02,  4.0546e-03, -3.6182e-04,\n",
      "        -2.3192e-03,  1.3544e-03,  1.0743e-02,  7.2371e-03, -9.3714e-03,\n",
      "         3.0893e-03,  8.3482e-03,  1.1763e-02, -8.7712e-03,  1.0954e-04,\n",
      "        -1.0969e-02, -1.0146e-02, -1.1705e-02,  3.5325e-03, -1.6159e-03,\n",
      "        -4.7223e-03,  6.2514e-03,  4.9326e-03,  1.4661e-02, -7.2283e-03,\n",
      "        -7.0975e-03, -1.1386e-02, -1.1139e-02,  5.6401e-03,  4.6765e-03,\n",
      "        -1.0165e-02,  5.0860e-03,  2.9757e-03,  1.4076e-02, -9.4640e-03,\n",
      "        -1.4169e-02, -1.4546e-02,  6.6451e-03,  1.3443e-02,  1.4195e-04,\n",
      "        -4.5525e-03,  9.7737e-04, -8.6615e-03,  3.5279e-03,  9.7110e-03,\n",
      "        -1.3679e-02, -7.3069e-03,  8.0553e-03, -1.0563e-02, -1.0180e-02,\n",
      "         1.4517e-02, -5.7397e-03,  4.2608e-03, -4.3123e-04,  4.2076e-03,\n",
      "        -1.0500e-02, -9.7680e-04,  8.2963e-05, -1.0647e-02,  2.0920e-03,\n",
      "         1.1066e-02, -1.4046e-02, -1.2804e-02,  1.1761e-02,  8.6618e-03,\n",
      "        -7.7020e-03, -1.2347e-02,  1.2972e-02, -6.9711e-03, -1.1456e-02,\n",
      "         1.8937e-03, -1.1600e-02, -8.9375e-03, -3.3744e-03,  2.5305e-03,\n",
      "        -4.6922e-03,  1.2769e-02, -1.2145e-02,  6.5134e-03, -5.7581e-03,\n",
      "         1.3170e-02,  3.6070e-03,  1.0835e-02,  8.3725e-03,  1.2453e-02,\n",
      "         3.5377e-03, -1.2081e-02,  6.6268e-03, -7.5478e-03, -4.4739e-03,\n",
      "         1.0065e-02,  6.3566e-03,  1.1007e-03,  7.4705e-03, -8.7321e-03,\n",
      "         9.4315e-03,  1.3162e-02,  5.6575e-03,  1.1247e-02,  1.9615e-03,\n",
      "         1.5667e-03, -5.2481e-03, -1.3088e-02,  7.6369e-03, -1.8818e-04,\n",
      "         8.1845e-03, -1.0571e-02, -1.2699e-02,  1.5073e-03, -9.5365e-03,\n",
      "        -2.6822e-03,  1.4595e-02,  7.2548e-03, -1.1467e-02,  5.7963e-03,\n",
      "        -8.2297e-03,  1.0550e-02,  8.0136e-03, -3.8989e-03, -3.1075e-03,\n",
      "         8.1471e-03, -7.6644e-03,  4.2513e-03,  7.9370e-03, -1.2314e-02,\n",
      "        -5.2746e-03,  2.8184e-05, -4.0492e-03,  9.3230e-03, -2.4137e-03,\n",
      "        -2.3718e-03,  3.7967e-03, -1.0948e-03,  5.7724e-03,  9.7178e-03,\n",
      "        -9.9213e-03,  7.5697e-03,  4.0742e-03, -5.8286e-03, -5.1093e-03,\n",
      "         1.2464e-03, -1.7632e-03,  1.3707e-02, -5.3198e-03, -1.0397e-02,\n",
      "        -1.1542e-03, -1.3654e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.7597, 0.9378, 0.6493, 1.1643, 0.9305, 1.0913, 1.0437, 1.0239, 1.0769,\n",
      "        0.8114, 1.3448, 0.8192, 0.9022, 0.7980, 0.8392, 0.9699, 1.2382, 1.0218,\n",
      "        0.8600, 0.9799, 1.3011, 0.8442, 0.8903, 0.6841, 0.6865, 0.6693, 0.6624,\n",
      "        1.2249, 0.9194, 0.8520, 0.7875, 0.7758, 0.6919, 0.7513, 0.9709, 0.6634,\n",
      "        0.7060, 0.8109, 0.9620, 1.2539, 0.6826, 1.2553, 0.8652, 0.9354, 0.8543,\n",
      "        0.8620, 0.7620, 0.9020, 0.6398, 0.8760, 0.7018, 0.8482, 1.0643, 0.8472,\n",
      "        1.0205, 1.3462, 1.2208, 1.0137, 0.8216, 0.8241, 0.8428, 0.9593, 0.6188,\n",
      "        0.7102, 0.8605, 0.6563, 1.0645, 0.9342, 1.0320, 0.7584, 0.8113, 0.6785,\n",
      "        0.9506, 0.7383, 0.7922, 0.9229, 0.8885, 0.9306, 0.8307, 1.4133, 0.9749,\n",
      "        0.9726, 0.6722, 0.9696, 1.1789, 0.9171, 0.9186, 1.3186, 0.7624, 0.6037,\n",
      "        0.9912, 0.8902, 0.8269, 0.8156, 1.6767, 0.7890, 0.7432, 1.3149, 1.0285,\n",
      "        1.0277, 1.2602, 0.9424, 0.9944, 1.2793, 1.0122, 0.6990, 0.8604, 0.9274,\n",
      "        0.7219, 1.1606, 0.8779, 0.7709, 0.7314, 0.8506, 1.1093, 0.7153, 0.9810,\n",
      "        0.7894, 0.9089, 0.8261, 0.9884, 0.9210, 0.7218, 0.9516, 0.9759, 0.7761,\n",
      "        0.7207, 0.8758, 1.1991, 0.8637, 1.1332, 0.8092, 1.3908, 0.8394, 0.7450,\n",
      "        0.8550, 0.8771, 0.8839, 0.8680, 0.7468, 1.1920, 1.3000, 1.0884, 0.8944,\n",
      "        1.4086, 0.9041, 0.7749, 0.8254, 1.0399, 1.3591, 0.6663, 0.9593, 0.9494,\n",
      "        0.7803, 1.1323, 1.1877, 1.0249, 1.0370, 0.6807, 1.0437, 1.0687, 0.7594,\n",
      "        0.9721, 0.9125, 0.9752, 1.0615, 1.1588, 1.2225, 0.8264, 0.7379, 0.8622,\n",
      "        0.7505, 0.6798, 1.1632, 0.8862, 0.8719, 0.8266, 1.1508, 1.0966, 1.0932,\n",
      "        0.7997, 0.8915, 0.6326, 0.7822, 0.8037, 0.8832, 0.9657, 0.9665, 1.0704,\n",
      "        0.7178, 0.8312, 0.7209, 0.9698, 1.0555, 0.9445, 0.8335, 1.1076, 1.7456,\n",
      "        0.7509, 0.7981, 0.7757, 0.8326, 0.9279, 1.0230, 0.8031, 0.7547, 0.8843,\n",
      "        0.9295, 0.8405, 0.9577, 0.8282, 0.8702, 0.6797, 0.9220, 1.0930, 1.1716,\n",
      "        1.1406, 1.0849, 0.9288, 0.7820, 0.8657, 0.8066, 0.6445, 0.9277, 1.1117,\n",
      "        0.7938, 0.9957, 0.8865, 0.9099, 0.9625, 0.8170, 0.8325, 1.0073, 0.8686,\n",
      "        1.0020, 1.1019, 0.9616, 1.1940, 0.8077, 1.0067, 1.0030, 0.7484, 0.8555,\n",
      "        1.0128, 0.8886, 0.9345, 1.0685, 0.9358, 0.8382, 0.9588, 1.1120, 0.8827,\n",
      "        0.7792, 0.9244, 0.9363, 0.6593, 0.6169, 0.8425, 0.8935, 0.9424, 0.7675,\n",
      "        0.8085, 1.0147, 1.1003, 0.9063, 0.8447, 1.0333, 0.7008, 1.1531, 1.0887,\n",
      "        1.0811, 0.6680, 0.8195, 1.2468, 0.7676, 0.8425, 0.7271, 0.9198, 0.7853,\n",
      "        1.1459, 0.8046, 1.2691, 0.6882, 1.0474, 0.9372, 0.9297, 0.8296, 0.9719,\n",
      "        1.0647, 0.5746, 0.9868, 0.7898, 1.1574, 0.9068, 1.0183, 1.5309, 0.7836,\n",
      "        0.7658, 1.0288, 0.7790, 1.0922, 0.9588, 0.7136, 0.6878, 1.0526, 0.8139,\n",
      "        0.9899, 1.2769, 1.3410, 0.6326, 0.8493, 0.8019, 0.6947, 1.0194, 1.1046,\n",
      "        0.9470, 0.8292, 0.8154, 0.9589, 0.6634, 1.0832, 0.8596, 0.9541, 1.0001,\n",
      "        1.1150, 0.7059, 1.0085, 1.0235, 0.6551, 1.0413, 1.1778, 0.7815, 1.1241,\n",
      "        0.7747, 1.0357, 0.8275, 1.2120, 1.0495, 0.7689, 0.7044, 0.8233, 0.7481,\n",
      "        0.9915, 0.7557, 0.7770, 1.1148, 0.7599, 1.2917, 0.8889, 0.7002, 0.6022,\n",
      "        1.2267, 0.6699, 1.6887, 0.9381, 0.9301, 0.8956, 0.7404, 1.0989, 1.0388,\n",
      "        0.7261, 0.9875, 1.0735, 1.0048, 0.6474, 1.0909, 0.7205, 0.9742, 0.9368,\n",
      "        0.7667, 0.9982, 1.0619, 1.3911, 0.8216, 0.9084, 0.7295, 0.6129, 1.0338,\n",
      "        0.7176, 0.9972, 0.6929, 1.1499, 0.7908, 1.0246, 0.7958, 0.9381, 1.0771,\n",
      "        0.9727, 1.0731, 1.0898, 0.9821, 0.9807, 1.2108, 0.7645, 0.9870, 0.9102,\n",
      "        1.1563, 1.1316, 0.9466, 0.6405, 0.6314, 1.5496, 0.8248, 1.0199, 0.6459,\n",
      "        0.7293, 0.9846, 0.6954, 1.3354, 0.9166, 0.8454, 0.8402, 0.7097, 1.1150,\n",
      "        0.9350, 0.9700, 1.0223, 1.1830, 0.6664, 0.9824, 1.3442, 0.8257, 1.1821,\n",
      "        1.3029, 1.1590, 0.6894, 1.2795, 1.1475, 0.9218, 0.7795, 0.7722, 1.1173,\n",
      "        0.8256, 1.2941, 0.8964, 0.6842, 1.3993, 0.9278, 0.9412, 0.7509, 0.9548,\n",
      "        0.7729, 1.1130, 0.6472, 0.7323, 1.1345, 0.7909, 0.7470, 0.7389, 1.0522,\n",
      "        1.0767, 0.9867, 0.8812, 0.6811, 0.8010, 1.0719, 0.8723, 0.7448, 0.7294,\n",
      "        0.8953, 0.7886, 0.9167, 1.2243, 0.7196, 1.1530, 1.7319, 0.9706, 1.0410,\n",
      "        0.8978, 1.2590, 1.0055, 0.9076, 1.0269, 0.6406, 0.6786, 0.7961, 1.0437,\n",
      "        1.0842, 1.1594, 0.8070, 0.9378, 0.6874, 0.9840, 0.9045, 1.1885, 0.8132,\n",
      "        0.9087, 0.6716, 0.9531, 1.0205, 0.9226, 1.2945, 0.8294, 1.2295, 0.8032,\n",
      "        0.6666, 1.1207, 1.1769, 0.8272, 0.9456, 1.0268, 0.6818, 0.8589, 0.8918,\n",
      "        0.9660, 0.9442, 0.6891, 0.7629, 0.7481, 0.7087, 0.9453, 0.9113],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-1.9328e-01, -1.0553e-01, -3.5597e-01, -1.8299e-01, -2.0341e-01,\n",
      "        -1.6960e-01, -1.6097e-01,  3.9293e-02, -1.7687e-01, -4.4885e-01,\n",
      "        -1.0476e-01, -1.0971e-02, -3.1926e-02, -2.5137e-01, -1.9342e-01,\n",
      "        -2.7039e-01,  2.2748e-02, -3.2832e-01, -6.8782e-02, -1.3040e-01,\n",
      "         9.0910e-02, -1.9468e-01, -3.3520e-01, -5.1044e-01, -4.7374e-01,\n",
      "        -1.6777e-01, -1.1327e-01,  1.3467e-01, -5.6484e-02, -3.7674e-01,\n",
      "        -3.5204e-01, -2.7747e-01, -6.9349e-02, -3.1372e-01, -1.5731e-01,\n",
      "        -5.1623e-01,  7.1918e-02, -2.0820e-01, -6.0155e-02,  8.6474e-02,\n",
      "        -6.5116e-01, -2.2386e-01, -3.7159e-02, -2.1973e-01, -1.5481e-01,\n",
      "        -1.0965e-02, -6.1338e-01, -2.6739e-02, -1.0706e-01, -2.8706e-02,\n",
      "        -4.2240e-01, -2.2390e-01, -3.2845e-01, -1.9122e-01, -2.7402e-01,\n",
      "         1.0945e-01,  7.4872e-02, -3.4322e-01, -2.7375e-01,  4.0811e-02,\n",
      "        -1.0165e-01, -2.6262e-01, -4.6955e-01, -4.7039e-01, -1.2492e-01,\n",
      "        -2.5125e-01, -3.3738e-02, -1.5247e-01, -9.5065e-02, -3.3962e-01,\n",
      "        -1.6619e-01, -3.7839e-01,  1.3399e-01, -3.4291e-01, -3.8265e-01,\n",
      "        -1.3272e-01,  1.3831e-02, -4.5345e-01, -1.2030e-01, -2.7954e-02,\n",
      "        -4.5824e-02, -1.0395e-01, -3.3333e-01, -2.7927e-01, -1.4415e-01,\n",
      "        -2.8890e-01, -5.8783e-02,  2.0576e-01, -3.3677e-01, -4.5228e-01,\n",
      "        -2.7534e-01, -1.4928e-01, -7.8439e-02, -4.2116e-01,  1.3679e-02,\n",
      "        -3.9667e-01, -3.5949e-02,  2.8781e-01, -2.4120e-01,  1.2454e-01,\n",
      "         4.6725e-02, -2.4627e-01, -2.3179e-01,  2.6526e-02,  7.2164e-02,\n",
      "        -4.4046e-01, -2.4006e-01, -2.8789e-01, -4.3734e-01, -2.1911e-01,\n",
      "        -2.4517e-01, -4.4742e-01, -5.0660e-02, -5.1634e-02, -6.1715e-02,\n",
      "        -4.4538e-01, -2.8889e-01, -4.1866e-01, -2.9601e-01, -1.7124e-01,\n",
      "        -2.9479e-01,  7.8597e-03, -4.4946e-01, -2.7786e-01,  7.6526e-02,\n",
      "        -2.7733e-01, -4.5995e-01, -2.2232e-01, -2.5448e-01, -2.7377e-01,\n",
      "        -3.9760e-02, -1.2022e-01,  1.8916e-01, -1.7646e-01, -4.5174e-01,\n",
      "         6.8437e-02,  4.0771e-02, -1.9321e-01, -2.3359e-01,  2.7690e-02,\n",
      "        -1.4440e-01, -3.0251e-01, -3.3549e-01, -1.9296e-01,  2.7997e-01,\n",
      "        -2.1690e-02, -2.9331e-02, -6.5986e-02,  4.5658e-02,  2.2859e-01,\n",
      "        -4.2725e-01,  5.4079e-03, -3.0202e-01,  5.6620e-02, -9.2688e-03,\n",
      "         2.0947e-01, -2.2089e-01, -1.6445e-01, -4.0862e-01, -2.6569e-01,\n",
      "        -5.9431e-02, -4.1071e-02, -3.7494e-02, -4.5704e-01, -1.4959e-01,\n",
      "         1.5277e-02, -3.2657e-01,  6.1831e-02, -5.2954e-01, -2.5544e-01,\n",
      "        -3.3228e-01, -3.4425e-01, -3.4128e-01,  1.5203e-01,  6.4617e-03,\n",
      "        -7.0824e-02, -3.2726e-01, -7.6405e-02, -2.6820e-01, -4.4131e-02,\n",
      "         5.5047e-02, -5.3476e-02, -8.8472e-02, -4.2472e-01,  2.5161e-02,\n",
      "        -5.8269e-02,  2.4831e-02, -3.6086e-01, -2.2051e-01, -4.7613e-01,\n",
      "        -2.0436e-01, -3.2136e-01, -2.8150e-01, -2.3627e-01, -8.7706e-02,\n",
      "        -1.8024e-01, -1.4197e-01,  1.1763e-01, -4.3583e-01, -1.8952e-01,\n",
      "        -2.8170e-01, -3.5578e-01, -4.0430e-01, -1.7060e-01, -2.5966e-01,\n",
      "        -2.2786e-01, -2.8463e-01, -1.5477e-01, -1.8587e-01, -4.5336e-01,\n",
      "        -4.9726e-02, -2.5033e-01, -3.1708e-01,  1.8317e-02, -2.6288e-01,\n",
      "        -7.1351e-02,  2.7552e-02, -1.4036e-01, -1.6351e-01, -3.7333e-01,\n",
      "        -1.3319e-01, -2.7978e-01, -1.4206e-01, -4.2941e-02, -6.6409e-02,\n",
      "        -3.0093e-01, -1.0418e-01, -8.0024e-02, -6.8070e-02, -4.0394e-02,\n",
      "        -6.9330e-02, -2.3970e-01, -3.0818e-01, -1.1424e-01, -5.7391e-02,\n",
      "        -1.0596e-01,  1.6129e-01, -9.0729e-02, -1.8315e-01,  3.2732e-02,\n",
      "         2.4728e-02, -5.1780e-01, -3.6997e-02, -1.6501e-01, -8.6039e-03,\n",
      "         2.7816e-02, -3.1917e-01,  5.0711e-02, -2.2652e-01, -3.7310e-01,\n",
      "         5.6838e-02, -2.5538e-02,  1.3921e-02, -4.3422e-02, -4.5448e-01,\n",
      "        -5.7398e-02, -3.6744e-01, -8.6563e-02, -5.3897e-01,  1.8417e-01,\n",
      "        -3.4878e-01, -2.4113e-01, -1.4597e-01, -8.8938e-03, -3.5640e-01,\n",
      "        -3.9632e-01, -8.3784e-02, -3.7563e-01, -2.2092e-01, -2.4004e-01,\n",
      "        -4.0585e-01, -5.5698e-01,  6.4050e-02,  3.2344e-04, -9.1093e-03,\n",
      "        -3.2665e-01, -1.9333e-01, -7.7708e-02, -2.0476e-01,  1.6110e-01,\n",
      "        -4.2648e-01, -1.6900e-01, -4.0602e-01, -3.1076e-01,  4.3497e-02,\n",
      "        -8.5812e-02, -2.9768e-01, -1.5184e-01, -1.7630e-01, -3.1833e-01,\n",
      "        -1.4567e-01, -2.7640e-01, -2.2663e-01, -2.4298e-03, -1.0266e-01,\n",
      "         6.0691e-01, -1.1308e-01, -2.6069e-01, -3.3979e-01, -7.5074e-02,\n",
      "        -7.0960e-02, -1.6299e-01, -4.6017e-01, -3.8127e-01, -2.7387e-01,\n",
      "        -1.8399e-01,  1.1800e-02,  5.3322e-02,  8.3390e-02, -4.2327e-01,\n",
      "        -4.2124e-02, -2.5600e-01, -4.9163e-01, -2.0968e-01, -2.4201e-01,\n",
      "        -6.9531e-02, -1.3704e-01, -2.3854e-02, -1.8175e-01, -4.4472e-01,\n",
      "        -7.9369e-02, -3.1317e-01, -2.4644e-01, -2.9285e-01, -2.6537e-01,\n",
      "        -4.2818e-01, -3.7342e-01, -1.8047e-01, -6.0604e-01, -2.3495e-01,\n",
      "        -1.7005e-01, -3.0744e-01, -8.5338e-02, -2.0038e-01, -3.5529e-01,\n",
      "        -3.8367e-01,  2.5583e-01, -1.2102e-01, -1.7383e-01, -4.3030e-01,\n",
      "        -2.0147e-01, -2.7104e-01, -7.8843e-02, -3.7664e-01, -9.3543e-02,\n",
      "        -3.2335e-02, -4.1387e-01, -2.7183e-02, -3.5850e-02, -3.9897e-01,\n",
      "        -4.8177e-01, -1.5818e-01, -4.4783e-01,  8.1544e-02, -2.4443e-02,\n",
      "        -2.3163e-01, -3.5894e-01, -4.3006e-01,  1.4612e-01,  4.3420e-02,\n",
      "        -3.8386e-01, -2.4959e-01, -2.1283e-01, -2.1382e-01, -4.9342e-01,\n",
      "        -8.3110e-02, -3.8881e-01,  1.3864e-01,  9.6642e-02, -4.7264e-01,\n",
      "        -3.5832e-01,  1.5973e-01,  1.4207e-01, -2.8918e-03, -3.7070e-01,\n",
      "        -2.8941e-01, -4.5142e-01, -4.0154e-01, -4.1253e-01, -2.0196e-02,\n",
      "        -4.5899e-01, -2.1666e-01, -1.5775e-01, -3.1252e-01, -1.6790e-01,\n",
      "         8.7561e-02,  6.9791e-02, -4.4069e-01, -2.7210e-01, -2.1535e-01,\n",
      "        -2.3300e-01, -3.2363e-01, -6.7732e-02, -4.2779e-01, -9.1031e-02,\n",
      "         3.4766e-02, -1.6113e-01,  6.4388e-02, -2.6164e-01, -4.6393e-01,\n",
      "        -3.2188e-01,  9.9635e-02, -3.2405e-01, -1.5485e-01, -5.4965e-01,\n",
      "        -3.8469e-01, -1.5449e-01, -6.0967e-02, -4.3002e-03,  2.2188e-02,\n",
      "        -4.3578e-01, -3.3456e-01, -4.0294e-01, -2.7143e-01,  1.1171e-01,\n",
      "        -3.0165e-01, -3.0690e-01, -4.3080e-01, -4.2523e-01, -7.9942e-02,\n",
      "        -2.1260e-01, -3.0751e-01, -9.0568e-03, -3.3296e-03, -9.7598e-02,\n",
      "        -4.3599e-01, -2.7263e-02, -9.9697e-02, -4.4664e-01, -3.3274e-01,\n",
      "        -4.9138e-02, -4.6597e-02, -4.2074e-01, -7.4088e-02, -1.8744e-01,\n",
      "        -3.5256e-01,  1.4276e-01, -4.1448e-01, -4.7877e-01, -4.9697e-01,\n",
      "        -1.5505e-01, -2.0489e-01, -1.2346e-01, -4.8225e-01, -4.5016e-02,\n",
      "        -2.4671e-01, -4.5401e-02, -3.9935e-01, -5.0875e-01, -2.3856e-01,\n",
      "        -8.0722e-02, -2.4313e-01, -3.5540e-01, -3.8886e-01, -2.8854e-01,\n",
      "        -1.3357e-01, -3.5608e-01, -4.4376e-01, -2.5730e-01, -3.9020e-01,\n",
      "        -2.3163e-01,  1.6532e-01,  6.4922e-02, -3.5418e-01, -8.7294e-02,\n",
      "        -3.1631e-01, -3.8243e-01, -2.8530e-01, -2.4869e-01, -1.1979e-01,\n",
      "        -1.6174e-02, -2.7522e-01, -3.1408e-01, -4.6768e-01, -5.2011e-01,\n",
      "        -2.2773e-01, -2.3165e-01, -1.8726e-01, -2.0977e-01, -2.7971e-01,\n",
      "        -3.5064e-01, -4.2643e-01,  3.8373e-02,  7.8523e-02, -1.1240e-01,\n",
      "        -1.4894e-01, -2.6204e-01, -3.9580e-01,  2.8802e-02,  7.3033e-02,\n",
      "        -1.6400e-02,  1.3939e-02, -1.3718e-01,  6.5900e-03, -2.5448e-01,\n",
      "        -4.0616e-01, -3.1383e-01, -1.2850e-01, -1.4217e-01,  2.5461e-03,\n",
      "        -2.2588e-01, -2.6019e-01, -3.6080e-01, -3.9715e-01, -2.1213e-01,\n",
      "        -2.4822e-01, -2.9078e-01, -3.8925e-01, -4.6904e-01, -4.6013e-01,\n",
      "         1.9577e-02, -2.0056e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.1504, -0.0941, -0.1162],\n",
      "          [-0.0610,  0.0931, -0.0245],\n",
      "          [ 0.0658, -0.0249, -0.0124]],\n",
      "\n",
      "         [[-0.0107,  0.0441, -0.0355],\n",
      "          [ 0.0063,  0.0306,  0.0211],\n",
      "          [ 0.0809,  0.1255, -0.0061]],\n",
      "\n",
      "         [[ 0.0559,  0.0422, -0.0300],\n",
      "          [-0.0682,  0.1302, -0.0481],\n",
      "          [ 0.1457, -0.0657, -0.1119]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.1487, -0.2060,  0.0344],\n",
      "          [ 0.0245,  0.0858,  0.2259],\n",
      "          [ 0.1266, -0.0769,  0.1480]],\n",
      "\n",
      "         [[-0.0639,  0.0557, -0.0460],\n",
      "          [-0.0036,  0.0084,  0.1094],\n",
      "          [-0.1318,  0.0665, -0.1480]],\n",
      "\n",
      "         [[-0.3199, -0.0500, -0.0915],\n",
      "          [-0.2107,  0.1115, -0.0548],\n",
      "          [-0.1270,  0.0229, -0.1764]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1268, -0.1050,  0.1086],\n",
      "          [ 0.0547,  0.0273,  0.0417],\n",
      "          [-0.0512, -0.0479,  0.0051]],\n",
      "\n",
      "         [[-0.1631,  0.0644, -0.1773],\n",
      "          [-0.1310,  0.0666, -0.0495],\n",
      "          [-0.1742,  0.0334, -0.1700]],\n",
      "\n",
      "         [[ 0.0343,  0.1015, -0.0268],\n",
      "          [ 0.1057,  0.1596,  0.0860],\n",
      "          [ 0.2707, -0.0261,  0.1784]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0283, -0.1311, -0.1403],\n",
      "          [-0.0488, -0.1741, -0.1369],\n",
      "          [-0.0235, -0.0148, -0.1318]],\n",
      "\n",
      "         [[-0.2619,  0.1604, -0.1323],\n",
      "          [-0.1970,  0.0479, -0.0860],\n",
      "          [-0.5176,  0.0746, -0.3924]],\n",
      "\n",
      "         [[-0.2944,  0.1182, -0.2728],\n",
      "          [-0.2825,  0.0923, -0.1741],\n",
      "          [-0.3996,  0.0203, -0.3285]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1317, -0.1198,  0.1238],\n",
      "          [ 0.0311, -0.0243,  0.0137],\n",
      "          [-0.0293, -0.0513,  0.0068]],\n",
      "\n",
      "         [[-0.0955,  0.0219, -0.0355],\n",
      "          [-0.1255,  0.1066, -0.0252],\n",
      "          [-0.1822,  0.0125, -0.1221]],\n",
      "\n",
      "         [[ 0.0680,  0.0744,  0.0657],\n",
      "          [ 0.0799,  0.0899,  0.0779],\n",
      "          [ 0.2748,  0.0162,  0.2146]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0303, -0.0561, -0.1504],\n",
      "          [-0.1624, -0.1845, -0.2664],\n",
      "          [-0.0071,  0.0392, -0.1097]],\n",
      "\n",
      "         [[-0.2487,  0.0691, -0.0923],\n",
      "          [-0.1372,  0.0915, -0.0738],\n",
      "          [-0.4811, -0.0024, -0.3020]],\n",
      "\n",
      "         [[-0.3022,  0.0755, -0.1844],\n",
      "          [-0.1371,  0.0996, -0.0832],\n",
      "          [-0.3106,  0.0244, -0.2123]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0629, -0.0428, -0.1408],\n",
      "          [-0.0615,  0.1308, -0.0494],\n",
      "          [ 0.0845, -0.0713,  0.1100]],\n",
      "\n",
      "         [[-0.0740, -0.0530,  0.0216],\n",
      "          [-0.1915,  0.1136, -0.1234],\n",
      "          [-0.1082,  0.0688, -0.0556]],\n",
      "\n",
      "         [[-0.1309,  0.0220, -0.1955],\n",
      "          [-0.0353,  0.1052, -0.0840],\n",
      "          [ 0.0992, -0.0430, -0.0071]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0169, -0.0663, -0.0502],\n",
      "          [-0.0682, -0.1829, -0.1271],\n",
      "          [ 0.0275,  0.0599,  0.0490]],\n",
      "\n",
      "         [[-0.1437,  0.0011, -0.0232],\n",
      "          [-0.1714,  0.1350, -0.1188],\n",
      "          [-0.2000,  0.0852, -0.2230]],\n",
      "\n",
      "         [[-0.1065, -0.0604, -0.0404],\n",
      "          [-0.2593,  0.1421, -0.3752],\n",
      "          [-0.1404,  0.1527, -0.1104]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0798, -0.0372, -0.0280],\n",
      "          [-0.0460,  0.0950, -0.0048],\n",
      "          [-0.0244,  0.0048, -0.0331]],\n",
      "\n",
      "         [[-0.0117, -0.2380, -0.0251],\n",
      "          [-0.1859, -0.0084, -0.2168],\n",
      "          [-0.1711, -0.1064, -0.1391]],\n",
      "\n",
      "         [[ 0.0520,  0.0950, -0.0094],\n",
      "          [ 0.1495,  0.2327,  0.0920],\n",
      "          [ 0.1082,  0.0399, -0.0344]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.1126, -0.0568, -0.0420],\n",
      "          [-0.1875, -0.2092, -0.2797],\n",
      "          [ 0.0236,  0.0307, -0.0095]],\n",
      "\n",
      "         [[-0.1285, -0.2278, -0.0708],\n",
      "          [-0.2057, -0.0007, -0.3076],\n",
      "          [-0.2436, -0.1460, -0.2196]],\n",
      "\n",
      "         [[-0.1492, -0.1474, -0.0767],\n",
      "          [-0.3095, -0.0367, -0.3177],\n",
      "          [-0.2496, -0.0250, -0.1635]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0819, -0.0733,  0.0410],\n",
      "          [-0.1263, -0.0071, -0.0190],\n",
      "          [ 0.0905, -0.0471,  0.1778]],\n",
      "\n",
      "         [[-0.1443, -0.0915, -0.0990],\n",
      "          [ 0.0614,  0.0926,  0.0347],\n",
      "          [-0.0393,  0.0933, -0.0840]],\n",
      "\n",
      "         [[-0.0447, -0.0783, -0.0805],\n",
      "          [-0.0590,  0.0210, -0.0352],\n",
      "          [ 0.0562, -0.0910,  0.0466]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0653,  0.0100,  0.1647],\n",
      "          [-0.2565, -0.2535, -0.1430],\n",
      "          [ 0.1239,  0.0398,  0.1985]],\n",
      "\n",
      "         [[-0.1198, -0.0081, -0.0957],\n",
      "          [ 0.0405,  0.0851,  0.0533],\n",
      "          [-0.0285,  0.1077, -0.1040]],\n",
      "\n",
      "         [[-0.1247, -0.0092, -0.0463],\n",
      "          [-0.0336,  0.1315, -0.0132],\n",
      "          [-0.0749,  0.1312, -0.1155]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-1.3901e-02,  5.4263e-03,  6.7877e-04,  7.2890e-03,  7.0964e-03,\n",
      "        -3.7531e-03, -1.2659e-02, -3.2144e-03, -1.0357e-02, -7.2649e-03,\n",
      "         1.1683e-03, -3.0678e-03,  1.0196e-02,  1.2450e-02, -1.3653e-02,\n",
      "         2.6712e-03, -1.3067e-02,  1.4525e-02,  3.3970e-03, -7.0587e-04,\n",
      "         3.6823e-03, -1.4526e-02,  3.8088e-03, -9.0635e-03, -1.4410e-02,\n",
      "        -2.7252e-03, -8.6398e-03, -6.6635e-03,  1.8334e-03, -4.6882e-03,\n",
      "         1.7935e-03, -4.9393e-03, -6.8433e-03,  1.4691e-02,  1.3729e-02,\n",
      "        -6.5500e-03, -5.9799e-03,  2.1231e-03, -7.7177e-03, -2.6241e-04,\n",
      "        -5.5476e-03,  9.5019e-03, -4.5852e-03,  3.5586e-03, -1.3481e-02,\n",
      "         3.8381e-03,  9.4425e-03, -4.7875e-03, -8.9881e-03, -4.0953e-03,\n",
      "         3.7837e-03, -1.0802e-02,  1.5014e-03, -5.4823e-03, -8.0230e-03,\n",
      "        -1.0064e-02, -1.2292e-02, -6.2068e-03,  8.5051e-03,  1.4114e-02,\n",
      "        -1.0657e-02,  1.5435e-03,  4.4745e-03, -1.3685e-02, -4.5915e-03,\n",
      "         8.1374e-03, -1.5238e-03,  5.5946e-03, -4.4907e-03,  7.2273e-04,\n",
      "        -6.8398e-03, -9.5535e-03, -1.3009e-02, -6.4253e-03,  4.2319e-03,\n",
      "        -2.2852e-03, -1.1161e-04, -5.6631e-03,  7.6855e-05, -5.6652e-03,\n",
      "         1.0727e-02, -6.8840e-03, -1.1704e-02, -7.4434e-03,  1.0507e-02,\n",
      "        -1.0903e-02, -8.7244e-03,  5.3600e-04, -6.3325e-03,  9.1028e-03,\n",
      "        -9.7052e-03, -4.4311e-03,  6.9813e-03,  1.2027e-02,  8.5778e-03,\n",
      "        -5.2469e-03,  9.2824e-03, -8.0599e-03,  4.4913e-04,  1.4687e-04,\n",
      "         5.6216e-03,  3.3425e-03,  3.7658e-03,  4.9577e-03, -1.1748e-02,\n",
      "        -8.0536e-03,  1.1426e-02,  1.4129e-02,  7.8421e-03,  7.9877e-03,\n",
      "        -8.5441e-03,  1.5131e-03, -9.3320e-03,  7.7327e-03,  6.3732e-04,\n",
      "        -1.2797e-03, -1.1943e-02, -2.1471e-03, -1.4340e-02,  1.8414e-03,\n",
      "         1.3667e-02, -9.2202e-03,  9.2580e-03,  7.9552e-03,  1.1254e-03,\n",
      "         8.9172e-03,  1.2961e-03, -9.6191e-03, -6.0765e-03,  4.8937e-03,\n",
      "         1.0653e-02,  6.5645e-03,  2.9906e-03,  1.1083e-02,  1.2531e-02,\n",
      "        -1.2573e-02, -1.0210e-02, -1.1814e-02, -1.9053e-03,  7.7154e-04,\n",
      "         1.1133e-02,  1.4434e-02, -8.0391e-03,  1.2932e-02,  1.1728e-02,\n",
      "        -1.3801e-02, -1.2941e-03, -5.7226e-03, -1.2125e-02, -1.1971e-04,\n",
      "        -2.4776e-03, -1.4444e-02,  1.3798e-02, -9.5818e-03,  1.0715e-02,\n",
      "        -1.1090e-03, -8.6144e-03,  3.5796e-03, -4.0263e-03,  6.8739e-03,\n",
      "         1.3040e-02, -6.1529e-03,  1.0506e-02,  7.6838e-03,  2.5239e-03,\n",
      "        -1.1026e-02, -1.3905e-02,  3.4924e-03, -1.3383e-03,  2.5602e-03,\n",
      "        -4.6174e-03, -1.0132e-02, -5.1622e-03, -9.1807e-03,  1.1350e-03,\n",
      "        -2.1869e-03, -1.4144e-04, -6.9835e-03, -1.1431e-02, -8.9966e-03,\n",
      "        -5.1033e-03, -1.1380e-02, -1.3156e-02, -1.4622e-02, -1.2101e-02,\n",
      "         8.2537e-03, -7.7487e-05, -4.2174e-03, -9.0077e-03, -2.8388e-04,\n",
      "         7.9092e-03, -1.9872e-03,  9.9413e-03, -1.8421e-03,  5.1843e-03,\n",
      "         6.3552e-03,  1.2670e-02, -2.4894e-03, -9.7718e-03,  6.1509e-03,\n",
      "        -5.3404e-04,  1.1685e-02,  1.0189e-02,  6.6613e-03, -8.6350e-03,\n",
      "         9.2255e-03, -5.3463e-03,  1.3944e-04,  6.9011e-04, -6.5213e-03,\n",
      "        -3.1665e-03, -1.9666e-03, -5.6528e-03, -1.6876e-03, -8.4271e-03,\n",
      "         8.2431e-03,  8.6491e-03, -1.0908e-02, -7.1382e-03,  3.5144e-03,\n",
      "        -1.0136e-02, -7.5151e-03,  4.7765e-03, -7.1761e-03, -2.7557e-03,\n",
      "         8.2669e-03, -1.0875e-02, -1.1338e-02, -1.3883e-02, -1.0372e-02,\n",
      "         1.0446e-02, -1.0372e-02, -2.1259e-03,  8.3909e-03,  4.3668e-03,\n",
      "        -2.0725e-04,  3.7583e-03,  6.8794e-03,  1.3638e-02,  6.8990e-03,\n",
      "        -1.3699e-02, -3.5639e-04,  3.8434e-05, -7.3899e-04,  1.2155e-02,\n",
      "        -4.9966e-03, -1.2399e-02,  6.0642e-03, -1.2562e-02,  1.3891e-02,\n",
      "         1.0800e-02,  1.4208e-02, -3.9424e-03,  1.1024e-02,  1.4412e-02,\n",
      "         8.5376e-03, -1.2601e-02, -4.1003e-03,  7.1279e-03, -2.9349e-04,\n",
      "        -1.3673e-02, -1.9409e-03,  1.3345e-02, -9.1666e-03,  1.3276e-02,\n",
      "         1.5374e-03,  1.3528e-02,  1.9383e-04,  7.4179e-03,  4.5633e-03,\n",
      "        -4.4115e-03,  1.4596e-02, -1.2433e-02,  5.9408e-03, -6.3465e-03,\n",
      "         7.1299e-03,  6.3614e-03,  1.0226e-02, -1.1800e-02, -1.8705e-03,\n",
      "        -6.0060e-03,  5.9133e-05,  1.0494e-02, -1.3063e-02,  1.3058e-02,\n",
      "         4.8115e-03, -9.0541e-03,  8.0536e-03, -1.2219e-02, -7.6380e-03,\n",
      "         4.5954e-03, -3.6200e-03, -7.4553e-03, -4.8921e-04,  7.8763e-03,\n",
      "         6.0910e-03,  1.1681e-02,  2.8295e-03, -4.8787e-04, -7.9429e-03,\n",
      "        -5.7553e-03,  6.7994e-03, -1.7059e-03, -4.7192e-03, -5.2980e-03,\n",
      "        -6.3570e-03, -8.2077e-03,  1.2611e-02,  1.0787e-03,  7.3253e-03,\n",
      "         7.5504e-03, -7.0274e-03,  1.3803e-02, -4.3574e-03,  1.4418e-02,\n",
      "         1.4371e-02,  1.2202e-02, -1.1465e-02,  2.7920e-03,  6.8363e-03,\n",
      "        -7.9739e-03, -8.1843e-03,  1.3526e-02,  2.4969e-03,  1.4573e-02,\n",
      "        -3.6681e-03,  8.9064e-04,  1.1252e-02, -3.8524e-03, -1.3005e-02,\n",
      "        -9.5333e-03,  8.4859e-03, -1.0072e-02,  3.2401e-03, -8.3080e-04,\n",
      "         7.2518e-04, -6.8960e-03, -1.4239e-02,  3.7935e-03,  9.9850e-03,\n",
      "        -1.1239e-02, -7.8574e-03, -7.2420e-03,  2.2917e-03, -6.6508e-03,\n",
      "        -7.4579e-03, -1.0826e-02,  2.6884e-03, -1.0313e-02,  1.0572e-02,\n",
      "        -1.1196e-02, -9.4651e-03, -1.4717e-02,  1.0424e-03,  2.1813e-03,\n",
      "        -1.3232e-02, -8.2661e-03,  8.3485e-03, -1.0302e-02, -7.9889e-03,\n",
      "         2.2722e-03,  5.8012e-03, -8.6251e-03,  1.3185e-03,  5.2112e-03,\n",
      "         1.3203e-02,  1.1617e-02, -1.0044e-02, -1.0853e-02,  1.2411e-02,\n",
      "        -1.4219e-02,  1.3747e-02,  1.1112e-02,  9.1434e-03, -1.9161e-03,\n",
      "        -1.4281e-02,  5.0637e-03,  5.9218e-03,  1.4088e-02,  9.9730e-03,\n",
      "        -1.0514e-02,  1.3170e-02,  2.0868e-03,  1.3879e-02,  1.0169e-02,\n",
      "        -1.4229e-02,  5.9309e-04,  7.1946e-03, -1.2045e-02, -1.3115e-02,\n",
      "         1.4620e-02,  9.2730e-04,  4.4283e-03,  7.1488e-03,  1.4539e-02,\n",
      "         6.6092e-03, -1.2745e-02,  7.9483e-04,  1.5194e-03,  1.3526e-02,\n",
      "         1.9828e-03,  6.3446e-03,  5.0271e-03, -5.7835e-03,  9.3501e-03,\n",
      "        -1.1028e-02, -8.7421e-03,  1.2124e-02, -1.4094e-02,  5.7558e-03,\n",
      "        -1.1216e-02, -1.2231e-02,  1.1151e-02,  9.4632e-03, -4.3457e-03,\n",
      "         1.0818e-02,  8.3314e-03, -9.5445e-03, -4.3850e-03, -1.0585e-02,\n",
      "        -1.0503e-02,  1.7900e-03, -1.1661e-02,  1.3720e-02,  8.7005e-03,\n",
      "         2.3404e-03, -5.5265e-04,  3.8943e-03, -8.6588e-03,  4.8040e-03,\n",
      "         9.0511e-03,  1.4219e-03,  1.9011e-03, -7.3796e-03,  6.0140e-03,\n",
      "        -8.0338e-03,  1.1910e-02,  2.6570e-03,  1.1769e-02,  1.0814e-02,\n",
      "         1.4298e-02,  3.0967e-03,  8.6777e-04,  1.2516e-02,  2.6737e-03,\n",
      "        -3.6710e-03,  9.5297e-03,  1.3302e-02, -1.0966e-02, -8.0644e-03,\n",
      "         1.4149e-02, -1.0385e-02,  6.6326e-03, -8.4179e-03,  4.7575e-03,\n",
      "        -3.1600e-03,  2.0726e-03, -1.2816e-03, -7.0566e-03,  1.4642e-02,\n",
      "        -1.0727e-02, -7.3514e-03,  1.4074e-02, -5.9793e-04, -6.7027e-03,\n",
      "         3.8941e-04, -9.8316e-03,  7.6459e-03, -1.3674e-02,  1.2758e-02,\n",
      "        -1.0745e-02, -1.2444e-02,  4.6074e-03,  1.3370e-02, -5.0191e-03,\n",
      "        -3.5932e-03,  3.5348e-03,  2.6863e-03,  1.3104e-02,  3.5900e-03,\n",
      "        -1.5363e-03,  1.0222e-02,  2.8970e-04, -7.0355e-03, -1.8763e-03,\n",
      "         9.9321e-03, -1.0382e-03,  8.0371e-03,  1.1071e-02, -7.3069e-03,\n",
      "        -1.1567e-02,  8.4363e-03, -1.4267e-02,  7.2817e-03,  1.0836e-02,\n",
      "        -1.1666e-02,  9.3102e-03,  3.7059e-03, -9.6956e-03, -1.3491e-02,\n",
      "         1.1655e-02, -8.2781e-03,  9.6634e-03,  1.2152e-02, -4.9198e-03,\n",
      "        -1.0803e-02,  7.0042e-03, -4.7849e-04, -9.0899e-05,  8.9878e-03,\n",
      "         2.2818e-04, -1.2437e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1.0671, 0.7928, 0.7823, 0.9443, 0.8408, 1.1214, 0.8570, 0.8222, 0.8007,\n",
      "        1.2107, 0.8177, 0.7689, 0.8539, 0.7201, 0.7768, 0.8560, 0.7644, 0.7563,\n",
      "        0.8143, 0.8235, 1.3221, 0.7911, 0.8210, 1.0434, 0.7026, 0.6581, 0.7308,\n",
      "        0.9497, 0.7892, 0.6211, 0.8626, 0.6837, 0.7034, 0.8807, 0.6754, 0.8696,\n",
      "        0.7969, 1.2552, 0.6744, 0.9098, 0.9387, 0.8119, 0.7642, 0.7272, 0.7891,\n",
      "        0.8048, 0.7040, 0.9482, 0.8803, 1.0125, 0.8568, 1.0916, 0.8060, 1.0490,\n",
      "        0.7288, 0.6663, 0.7089, 0.7496, 0.8214, 0.6771, 0.5738, 0.7719, 0.7608,\n",
      "        0.7084, 0.6585, 1.0427, 0.8565, 0.7632, 0.7567, 0.6682, 0.9072, 0.6544,\n",
      "        0.8308, 0.8830, 0.7120, 0.7682, 0.7570, 0.8765, 0.6548, 0.7823, 1.0321,\n",
      "        0.9234, 0.9603, 0.9078, 0.6141, 0.9921, 0.6105, 0.6164, 0.5300, 0.9116,\n",
      "        0.7435, 0.7003, 0.7587, 0.7611, 0.5543, 1.0636, 0.6633, 0.6190, 0.8107,\n",
      "        0.7392, 0.7201, 0.6840, 1.0254, 1.0092, 0.7914, 0.6307, 0.7921, 0.6837,\n",
      "        0.7570, 0.8153, 0.5588, 0.7663, 1.0945, 0.8976, 0.7676, 0.8193, 0.6497,\n",
      "        0.9226, 0.9249, 0.8506, 0.8084, 0.7378, 1.0324, 0.8001, 0.6175, 0.5715,\n",
      "        1.0592, 0.7510, 0.8749, 0.9409, 0.9511, 0.7143, 0.9315, 0.8626, 0.6712,\n",
      "        1.0606, 1.1172, 0.8978, 0.8482, 0.7706, 0.8876, 0.8396, 0.8641, 0.8021,\n",
      "        0.7254, 0.7725, 0.7182, 0.7515, 0.9079, 0.6918, 1.1398, 0.6858, 0.6406,\n",
      "        0.9244, 0.6543, 1.0055, 0.9850, 1.3021, 0.9785, 0.8891, 0.5600, 0.7374,\n",
      "        0.7084, 0.6996, 0.8854, 0.9243, 0.8968, 0.7990, 0.8529, 0.7640, 0.7095,\n",
      "        0.6639, 0.6442, 0.7779, 0.7082, 0.8678, 0.7750, 0.8485, 0.8737, 0.6737,\n",
      "        0.7562, 1.0517, 1.0820, 0.7981, 0.8677, 1.0296, 0.8793, 0.7796, 0.7117,\n",
      "        0.7790, 0.8017, 0.9565, 0.8246, 0.8261, 0.6850, 0.8229, 0.7513, 0.6958,\n",
      "        0.9310, 0.7452, 0.5584, 0.7996, 0.9762, 0.7298, 0.9140, 0.8398, 0.7344,\n",
      "        0.6173, 0.5870, 0.8294, 0.7705, 0.6354, 1.0576, 0.6155, 0.8747, 0.7525,\n",
      "        0.6728, 0.6057, 0.6898, 0.7889, 0.6585, 0.8381, 0.6250, 0.6237, 0.8286,\n",
      "        0.8051, 0.7417, 0.6462, 0.6115, 0.7478, 0.8343, 0.7916, 0.5930, 0.7139,\n",
      "        0.8353, 0.7342, 0.9950, 0.6290, 0.6472, 0.6072, 0.8871, 0.8158, 0.6179,\n",
      "        0.7666, 0.8197, 0.7012, 0.7209, 0.7519, 0.9776, 0.6525, 0.5248, 0.7192,\n",
      "        0.6952, 0.9107, 0.6483, 0.9631, 0.8181, 0.7979, 0.6138, 0.8409, 0.7673,\n",
      "        0.5417, 0.8279, 0.7040, 0.8840, 0.7368, 0.5873, 0.9017, 0.9763, 0.8348,\n",
      "        0.7096, 0.8500, 0.7652, 0.5634, 0.7557, 0.9298, 0.8416, 0.6032, 0.8473,\n",
      "        0.8893, 0.6083, 0.8939, 0.5875, 0.7477, 0.8545, 0.8578, 0.7809, 0.7082,\n",
      "        0.8013, 0.9430, 0.7255, 0.7484, 0.8058, 0.9247, 1.2771, 0.7696, 0.8163,\n",
      "        0.7468, 0.7673, 1.2550, 0.9363, 0.8758, 0.6366, 0.9139, 0.9284, 0.8599,\n",
      "        0.8950, 0.8650, 1.3477, 1.0209, 0.8444, 0.7901, 0.7205, 0.7065, 0.7687,\n",
      "        0.7077, 0.9040, 0.9050, 0.7175, 0.6412, 0.7273, 0.7868, 0.7488, 0.6259,\n",
      "        0.6284, 0.6941, 0.6881, 0.6950, 0.8246, 1.0776, 0.8482, 0.9620, 1.3797,\n",
      "        0.9742, 0.8520, 0.9352, 0.8547, 0.8674, 1.0330, 0.8867, 0.8681, 0.8163,\n",
      "        0.7897, 0.5772, 0.7715, 0.8249, 0.7646, 0.7242, 0.8640, 0.7732, 0.7481,\n",
      "        0.6305, 0.7807, 0.5582, 0.8570, 0.7339, 0.9320, 0.6667, 0.7821, 0.8896,\n",
      "        0.6888, 0.6947, 0.7706, 0.5518, 0.7560, 0.8750, 0.8561, 0.9585, 0.9633,\n",
      "        1.0664, 0.5168, 0.9178, 0.6245, 0.9311, 1.3057, 0.7901, 0.9448, 0.8677,\n",
      "        0.6015, 0.8333, 0.7943, 0.8308, 0.8487, 0.5477, 0.8320, 0.9016, 0.8365,\n",
      "        0.7270, 0.7501, 0.8445, 0.6888, 0.8160, 1.0199, 0.6008, 0.6125, 0.6980,\n",
      "        0.8159, 0.9374, 0.6747, 0.7151, 0.9477, 0.7643, 0.6863, 0.6520, 0.7227,\n",
      "        1.0159, 1.0368, 0.5527, 0.5478, 0.6037, 0.7479, 0.8693, 0.6836, 0.7754,\n",
      "        0.8446, 0.9422, 0.7008, 0.9791, 0.9427, 0.8410, 0.9424, 0.6581, 0.7033,\n",
      "        1.0222, 0.8608, 0.7095, 0.8737, 0.6828, 0.8344, 0.6190, 0.6983, 0.6931,\n",
      "        0.7251, 0.9180, 0.8472, 0.9785, 0.6059, 0.7727, 0.9777, 0.5883, 1.4346,\n",
      "        0.6629, 1.0770, 0.8795, 0.7265, 1.2243, 0.7294, 0.7338, 0.8134, 0.7882,\n",
      "        0.8777, 0.8108, 0.7705, 1.1389, 0.7966, 0.7790, 0.7190, 0.9985, 0.7441,\n",
      "        1.4036, 1.1809, 0.9843, 0.6549, 0.8113, 0.9705, 0.7259, 0.7387, 0.6658,\n",
      "        1.0055, 0.6727, 0.8792, 0.7076, 0.8174, 0.8899, 0.5605, 0.8921, 0.6434,\n",
      "        0.8309, 0.7727, 0.8121, 0.9236, 0.8318, 0.6325, 0.7082, 0.6771, 0.9066,\n",
      "        0.9542, 0.9267, 0.8019, 0.7556, 0.7478, 0.7667, 0.8334, 0.9060, 0.6486,\n",
      "        0.7125, 1.0334, 0.8141, 0.7938, 0.5868, 0.7371, 1.0392, 0.7989, 0.9035,\n",
      "        0.8971, 0.6864, 0.6689, 0.8085, 0.6867, 0.6278, 0.6159, 0.7173],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-1.4529e-01,  1.0189e-01, -1.9221e-02, -1.8981e-02,  2.8124e-01,\n",
      "        -4.3893e-02,  3.4220e-03, -9.8586e-02,  1.9874e-02,  7.6621e-04,\n",
      "         5.8153e-03,  6.5578e-03,  2.9429e-01, -2.4216e-01, -6.4959e-02,\n",
      "        -1.0064e-01, -4.7680e-02, -1.0799e-01,  1.6262e-01,  3.8858e-02,\n",
      "        -5.3470e-02,  1.1688e-02,  1.2798e-01,  4.1450e-02,  7.2348e-03,\n",
      "         1.1042e-02,  1.6837e-01,  3.0278e-01, -4.1859e-02,  2.1946e-01,\n",
      "         5.6733e-02, -1.3456e-01,  8.6388e-02, -2.4980e-02, -3.3918e-01,\n",
      "         3.1025e-01,  4.5855e-02,  3.6978e-01, -4.0373e-01,  2.1614e-01,\n",
      "         1.6436e-01,  8.4999e-02, -5.2821e-03, -1.3348e-01,  8.2770e-02,\n",
      "         2.6221e-01, -9.4219e-02,  3.8956e-01, -2.7390e-02,  2.9112e-01,\n",
      "        -1.5036e-01,  1.7052e-01,  4.7398e-02,  6.0854e-02, -2.0605e-02,\n",
      "         1.6590e-01,  1.3057e-03,  6.0411e-02,  6.5570e-03,  9.9706e-02,\n",
      "        -5.7096e-02, -4.9685e-02, -1.1595e-01,  1.3358e-01, -1.8016e-01,\n",
      "         7.0491e-02,  3.1411e-01, -9.2331e-03,  2.1297e-01, -1.0757e-01,\n",
      "         1.1504e-01, -4.2977e-02, -4.7824e-01, -1.2162e-01,  6.8809e-03,\n",
      "        -2.6399e-01, -1.9023e-01, -2.0865e-02, -1.0512e-01,  4.1308e-01,\n",
      "        -2.3039e-01, -1.0519e-01,  7.7759e-02, -1.9568e-01, -5.8671e-02,\n",
      "         2.0498e-01, -2.7639e-02, -3.6717e-01, -1.6930e-01, -1.9896e-01,\n",
      "         1.3774e-02,  4.9269e-02, -2.6931e-02,  1.5942e-02, -2.6678e-01,\n",
      "         1.5484e-01, -1.0521e-01, -1.0293e-02, -1.2985e-01,  1.3752e-02,\n",
      "         2.7418e-01,  1.3827e-01,  2.1548e-01,  2.6234e-01,  2.4546e-02,\n",
      "        -1.7762e-01,  1.3748e-02,  7.1476e-02,  3.3891e-02,  7.6536e-02,\n",
      "        -3.4791e-01,  1.3447e-02,  1.5554e-02,  1.1423e-01, -6.0103e-02,\n",
      "         1.2105e-02, -3.8736e-02,  9.3847e-02,  9.0978e-02,  2.8192e-01,\n",
      "        -3.7988e-03, -3.2801e-01, -1.6765e-01, -9.8546e-03, -3.5899e-01,\n",
      "        -1.9233e-01,  3.9370e-02,  2.9250e-01,  7.0956e-02, -2.5749e-01,\n",
      "         2.7902e-01,  1.7009e-02,  1.5430e-01, -8.0196e-02,  1.2814e-01,\n",
      "        -1.0903e-01, -2.5744e-01,  1.3767e-01,  4.2219e-02, -1.2514e-02,\n",
      "        -3.1719e-02, -8.1506e-02,  9.1630e-03,  1.1646e-01,  1.2297e-02,\n",
      "         8.3094e-02,  1.6225e-01, -3.3209e-01,  1.6816e-01,  1.0071e-01,\n",
      "        -1.9630e-01,  3.0448e-02,  3.5665e-02, -2.4821e-01, -2.5024e-02,\n",
      "         2.3972e-01,  5.5981e-02, -6.6124e-02,  9.6373e-02,  2.9010e-01,\n",
      "         6.7603e-02,  6.9825e-02,  5.4596e-02,  8.7960e-02, -2.1173e-01,\n",
      "         1.4201e-01, -2.0547e-01,  1.7551e-02, -8.7228e-03,  8.3192e-02,\n",
      "         3.1631e-02,  1.6804e-01, -5.8665e-02,  9.1590e-03,  1.3962e-01,\n",
      "         9.4774e-02, -9.8614e-03,  2.9519e-01, -2.3113e-01,  8.8372e-03,\n",
      "        -1.2602e-01,  2.3025e-01, -6.4689e-02, -2.9531e-01,  3.3957e-01,\n",
      "        -4.6250e-02,  4.7393e-03, -1.7792e-02,  2.6533e-02, -8.5105e-03,\n",
      "         1.1279e-01,  4.2190e-01,  2.6368e-01, -5.2560e-02,  1.4656e-01,\n",
      "        -1.7889e-01, -1.3590e-01,  2.6343e-02,  1.3171e-01, -2.5181e-02,\n",
      "        -4.0630e-01,  7.2354e-02,  2.7496e-01, -1.0148e-01, -1.1452e-02,\n",
      "         1.2508e-01,  3.2948e-01, -3.2658e-01,  1.6833e-02,  2.0953e-02,\n",
      "         1.7344e-01,  1.3665e-01, -1.9779e-02, -5.7792e-02, -1.8339e-01,\n",
      "        -4.5192e-01, -8.7238e-02,  1.1625e-01, -2.5978e-01, -2.3010e-01,\n",
      "        -1.3713e-02,  2.1326e-01, -1.5368e-01, -8.2990e-03,  3.0569e-02,\n",
      "         4.0806e-02, -6.1005e-03, -1.0557e-01, -1.6777e-02,  3.6266e-01,\n",
      "         1.4659e-01,  3.2373e-01, -2.2935e-01, -3.2689e-01,  3.8330e-02,\n",
      "        -2.9945e-01, -2.3270e-01, -1.8417e-02,  3.6992e-03, -1.7300e-01,\n",
      "         1.4795e-01,  2.1398e-02,  1.6476e-01,  1.9276e-01,  1.9870e-02,\n",
      "        -3.9013e-02,  1.6116e-01,  5.7091e-02,  1.0385e-01,  1.6987e-01,\n",
      "        -1.8344e-01,  6.4460e-02,  7.3967e-02,  2.3582e-01,  1.3958e-02,\n",
      "         6.9338e-02,  9.9163e-02,  1.2211e-01, -1.7700e-01,  1.3701e-01,\n",
      "         1.7222e-02, -6.4106e-03, -1.1374e-01, -5.1898e-02,  6.7006e-03,\n",
      "        -2.8842e-01, -1.0206e-01, -1.8598e-01,  2.2075e-01,  7.8777e-02,\n",
      "        -9.8268e-03,  1.3955e-02, -3.9448e-02, -3.4281e-01,  1.3677e-02,\n",
      "         1.6728e-01,  2.1089e-02,  4.1849e-02,  2.7828e-01, -6.6455e-02,\n",
      "         1.1076e-01,  8.5211e-02, -2.0222e-01, -4.3813e-02,  1.6310e-01,\n",
      "        -1.6113e-01,  1.0647e-02,  2.1780e-02,  3.2946e-01, -2.7117e-01,\n",
      "         2.7474e-02,  1.9331e-02,  1.2950e-01,  3.9537e-02,  1.9623e-01,\n",
      "        -4.9260e-02,  1.6474e-01, -5.4040e-02,  4.7857e-02, -1.9036e-01,\n",
      "         1.1847e-01,  2.6783e-01, -4.9221e-02, -1.1216e-01,  3.0878e-01,\n",
      "        -9.2714e-02,  5.8598e-02,  2.8780e-01,  1.3739e-01,  3.8011e-02,\n",
      "         7.9055e-02,  2.8424e-01,  5.6977e-02, -1.7571e-01,  1.7819e-01,\n",
      "         1.5299e-02,  2.2574e-01,  1.2549e-01,  1.6622e-02,  1.7209e-01,\n",
      "        -6.8375e-02,  3.7734e-01, -4.7966e-03, -9.3115e-02,  1.6268e-02,\n",
      "        -3.4115e-02,  2.8704e-02,  7.1045e-02,  1.9602e-01,  6.7326e-02,\n",
      "        -1.0339e-03,  1.6283e-01,  3.5834e-01,  1.8600e-01,  5.1492e-01,\n",
      "         8.7982e-02,  3.1453e-01, -5.9034e-02, -2.5594e-02,  5.6355e-02,\n",
      "         8.1922e-02,  3.0414e-01,  4.0509e-02, -1.1854e-01,  2.6511e-01,\n",
      "         2.7257e-01,  7.7517e-02, -8.9429e-02, -6.8995e-03, -5.6420e-03,\n",
      "        -4.5616e-01, -1.5160e-01,  1.0075e-01, -1.6367e-01, -2.8265e-01,\n",
      "        -1.0989e-01,  2.9855e-01, -1.7099e-01,  1.1513e-01,  3.3483e-01,\n",
      "        -8.2890e-02, -1.7798e-02,  4.6354e-02, -1.7618e-01,  2.1593e-01,\n",
      "        -7.0349e-03,  5.2110e-02, -7.2916e-02,  2.0121e-01, -2.7878e-02,\n",
      "        -4.8979e-02,  2.0005e-01, -2.5303e-01,  9.2881e-02,  1.9921e-01,\n",
      "        -1.8725e-02,  7.6062e-02,  1.6662e-01, -1.7349e-01,  6.0161e-02,\n",
      "        -2.4846e-01,  3.4001e-02,  2.1868e-01, -1.4798e-01,  2.3062e-01,\n",
      "         2.1852e-01,  1.5282e-03, -8.2216e-02,  9.7373e-02, -2.1447e-02,\n",
      "         2.0630e-01,  8.6273e-02, -1.2293e-01, -2.0726e-01,  5.2397e-02,\n",
      "        -2.5934e-01, -2.0203e-01,  2.8413e-01, -1.6828e-01, -2.1502e-01,\n",
      "         3.2940e-01,  1.8785e-01,  5.8484e-02, -7.6788e-03,  4.0362e-02,\n",
      "         2.0743e-01,  2.5125e-01, -1.3266e-01, -2.6174e-01, -1.6661e-01,\n",
      "        -4.4551e-02, -1.6258e-01, -7.8325e-02,  3.4662e-01,  3.3008e-01,\n",
      "         9.3331e-02, -3.9088e-02,  1.5399e-01, -2.3803e-02,  2.8265e-01,\n",
      "        -1.1190e-01, -3.1560e-01, -1.9855e-01,  1.8460e-02,  2.3462e-01,\n",
      "         5.2615e-03, -2.2512e-01, -7.8283e-03,  2.9139e-01, -2.4111e-02,\n",
      "        -2.9524e-01, -1.8159e-01, -2.4655e-02, -2.6548e-02, -1.5696e-01,\n",
      "         3.0577e-02, -2.7748e-01, -2.0148e-01, -7.8067e-02, -1.6518e-01,\n",
      "         7.7335e-02, -9.5955e-03, -2.1238e-02,  3.0360e-01,  7.3459e-02,\n",
      "         4.0878e-03, -3.1629e-01,  4.2026e-02, -1.7881e-01, -1.3580e-02,\n",
      "         1.0452e-02, -9.1227e-06, -1.7529e-01, -1.2997e-01,  1.2774e-02,\n",
      "        -1.5674e-01, -1.8144e-02, -4.3917e-02, -5.9106e-02,  1.7258e-01,\n",
      "        -5.9364e-02,  5.7971e-02, -2.0760e-01, -7.0294e-03,  8.6753e-02,\n",
      "        -3.4650e-01, -1.5743e-02,  3.0087e-01,  1.2553e-01, -7.9482e-02,\n",
      "         3.8175e-02, -3.3755e-02,  3.6866e-02, -2.9014e-01, -2.3099e-01,\n",
      "        -1.9169e-01,  1.2418e-01, -6.9094e-02,  1.9710e-02,  4.6223e-02,\n",
      "         3.7055e-02, -1.5817e-02,  7.4761e-02, -3.0837e-01, -3.9223e-02,\n",
      "        -7.3498e-02,  5.6248e-02,  2.4577e-01,  3.4724e-02, -2.1045e-01,\n",
      "        -3.0133e-01,  9.5294e-02, -4.7757e-02, -1.6778e-01, -5.1320e-02,\n",
      "        -4.4532e-02,  2.1265e-02, -6.3395e-02,  3.4942e-02, -8.4349e-02,\n",
      "         1.3856e-02,  2.2153e-01, -3.3913e-01,  2.1056e-01,  1.4036e-01,\n",
      "        -3.0802e-02, -1.3328e-01,  4.4952e-02, -1.5444e-02, -9.9408e-02,\n",
      "        -2.7904e-01,  9.7330e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-0.0555,  0.0855],\n",
      "          [ 0.0466, -0.1384]],\n",
      "\n",
      "         [[-0.0492, -0.3193],\n",
      "          [-0.1063,  0.0895]],\n",
      "\n",
      "         [[-0.0087, -0.3315],\n",
      "          [-0.2009,  0.0504]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.1636,  0.0697],\n",
      "          [-0.0873, -0.2072]],\n",
      "\n",
      "         [[ 0.2209, -0.0846],\n",
      "          [ 0.3073, -0.0979]],\n",
      "\n",
      "         [[ 0.3853, -0.1091],\n",
      "          [-0.0517, -0.1504]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1367,  0.0861],\n",
      "          [ 0.0056, -0.0448]],\n",
      "\n",
      "         [[ 0.0030, -0.1455],\n",
      "          [ 0.1613,  0.0779]],\n",
      "\n",
      "         [[-0.0525, -0.1204],\n",
      "          [ 0.0257, -0.0013]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0236,  0.0632],\n",
      "          [-0.0039, -0.0856]],\n",
      "\n",
      "         [[-0.0010, -0.0234],\n",
      "          [ 0.0275,  0.0193]],\n",
      "\n",
      "         [[-0.0702, -0.0004],\n",
      "          [ 0.0157, -0.0232]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1283,  0.1023],\n",
      "          [-0.0232, -0.0771]],\n",
      "\n",
      "         [[-0.0177, -0.1318],\n",
      "          [ 0.1190,  0.1277]],\n",
      "\n",
      "         [[-0.1135, -0.0609],\n",
      "          [ 0.0292,  0.0826]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0173,  0.1708],\n",
      "          [ 0.0680, -0.0863]],\n",
      "\n",
      "         [[ 0.0033,  0.0648],\n",
      "          [-0.0561, -0.0058]],\n",
      "\n",
      "         [[-0.1307,  0.0833],\n",
      "          [ 0.0362, -0.0214]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.1358,  0.0654],\n",
      "          [-0.0365, -0.0220]],\n",
      "\n",
      "         [[ 0.0138, -0.1349],\n",
      "          [ 0.0043,  0.0090]],\n",
      "\n",
      "         [[-0.0050, -0.0897],\n",
      "          [-0.1116,  0.0956]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0173,  0.0815],\n",
      "          [-0.0505,  0.0012]],\n",
      "\n",
      "         [[-0.0598,  0.0365],\n",
      "          [ 0.2665,  0.1717]],\n",
      "\n",
      "         [[ 0.0852,  0.1290],\n",
      "          [ 0.0167,  0.2501]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0362,  0.0732],\n",
      "          [-0.1205, -0.1479]],\n",
      "\n",
      "         [[-0.0258, -0.1065],\n",
      "          [ 0.1041,  0.1926]],\n",
      "\n",
      "         [[ 0.0166, -0.0807],\n",
      "          [ 0.0747,  0.1758]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0682,  0.0929],\n",
      "          [-0.0213, -0.1499]],\n",
      "\n",
      "         [[-0.0278,  0.0217],\n",
      "          [ 0.0855, -0.0367]],\n",
      "\n",
      "         [[ 0.1524,  0.0311],\n",
      "          [ 0.0570,  0.0481]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1332,  0.0458],\n",
      "          [ 0.1304,  0.0257]],\n",
      "\n",
      "         [[ 0.1624, -0.0607],\n",
      "          [-0.0113, -0.0295]],\n",
      "\n",
      "         [[-0.0317, -0.0938],\n",
      "          [-0.0353, -0.0362]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0657, -0.0260],\n",
      "          [-0.0352,  0.0594]],\n",
      "\n",
      "         [[ 0.0168, -0.0598],\n",
      "          [ 0.1970,  0.0191]],\n",
      "\n",
      "         [[ 0.0852,  0.0118],\n",
      "          [-0.0071,  0.0892]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-4.4720e-01,  2.7352e-01,  4.3191e-01,  3.1690e-01,  1.2397e-01,\n",
      "         1.8719e-01,  5.4994e-01, -4.8939e-01,  5.1452e-01,  3.6619e-01,\n",
      "        -3.5870e-01, -3.4173e-01,  4.5739e-01, -3.7127e-01, -1.7278e-01,\n",
      "         2.2032e-01,  5.3810e-02, -4.8239e-01,  4.2674e-01, -2.8414e-01,\n",
      "         8.7203e-02, -4.0836e-01, -2.8429e-01,  4.0486e-01,  2.7905e-02,\n",
      "        -5.0920e-01, -3.5728e-01, -5.1727e-01,  3.8223e-01, -2.3688e-01,\n",
      "        -6.1661e-01,  6.8699e-02,  3.7980e-01,  5.0480e-01, -2.0798e-01,\n",
      "         2.4435e-01, -1.3251e-01,  4.9885e-01,  1.5116e-01,  1.5824e-01,\n",
      "         2.8764e-01, -1.9327e-01, -3.0598e-01, -1.0891e-01,  2.3447e-01,\n",
      "        -2.0798e-01, -4.4586e-01, -1.3280e-04, -1.7195e-02,  4.7519e-01,\n",
      "         1.3176e-01, -3.8649e-01,  2.2301e-01,  3.9019e-02, -1.9898e-01,\n",
      "         2.5365e-01, -1.0694e-01, -5.2859e-02, -4.4597e-01,  1.7805e-01,\n",
      "         2.1959e-01,  2.8980e-01, -1.9221e-01,  3.9586e-01, -3.4437e-01,\n",
      "        -6.5492e-01, -6.6834e-02, -5.7400e-01,  4.1116e-01,  3.9623e-01,\n",
      "        -4.3303e-01,  4.5143e-01, -2.3832e-01, -2.5791e-01,  7.8875e-02,\n",
      "        -5.6970e-01,  2.0715e-01,  4.7954e-01,  5.9405e-02,  4.3968e-02,\n",
      "        -1.0010e-01,  2.3077e-01, -3.5438e-01, -3.2320e-01,  1.8566e-01,\n",
      "         5.9686e-01,  3.0107e-01,  2.3145e-01, -1.7436e-01,  2.9504e-01,\n",
      "        -4.4095e-01, -7.7764e-02,  1.1844e-01, -6.0375e-02, -1.5535e-01,\n",
      "        -4.1510e-01, -3.8439e-01, -2.9025e-01,  2.7306e-01, -2.8202e-01,\n",
      "         4.1812e-01,  1.3877e-01, -1.7946e-01, -2.5758e-01, -1.4300e-02,\n",
      "        -9.3881e-02, -5.2986e-01,  1.8530e-01,  4.2769e-01, -4.0753e-01,\n",
      "         3.2359e-01,  5.5132e-01,  4.6770e-01,  2.9843e-01, -5.0203e-01,\n",
      "         1.6151e-02,  7.7160e-02, -2.9685e-01, -1.8581e-01, -5.9143e-01,\n",
      "        -6.0288e-02,  9.1542e-02,  6.1015e-01, -2.1642e-01,  7.7219e-02,\n",
      "        -4.5002e-01, -2.6276e-01,  9.1160e-02, -4.3684e-01,  1.2488e-01,\n",
      "        -5.8003e-01, -4.6372e-02,  1.6111e-01,  2.6224e-01, -6.2235e-01,\n",
      "         6.0224e-01,  4.8394e-01,  2.1433e-01,  2.1604e-01, -1.2486e-01,\n",
      "        -5.0520e-01,  4.1697e-02, -1.4377e-01,  3.3002e-01, -4.5817e-01,\n",
      "        -2.2387e-01,  4.8261e-01, -3.8181e-01,  6.7096e-02,  6.1974e-01,\n",
      "         3.0591e-01,  4.5127e-01, -2.5654e-02, -6.5601e-01,  1.8322e-01,\n",
      "        -4.8722e-01,  5.4926e-01, -2.0125e-01, -3.3830e-01,  1.3910e-01,\n",
      "        -3.6556e-01,  4.9361e-01,  7.9636e-02, -4.7006e-01, -4.7055e-01,\n",
      "        -4.6366e-03,  1.3473e-01,  3.9174e-01,  5.9563e-01,  1.6037e-01,\n",
      "        -3.4343e-01, -4.6639e-02, -2.0731e-01,  4.1990e-01,  2.5011e-01,\n",
      "        -1.3774e-01, -3.9541e-01,  3.9413e-01, -2.2871e-01, -2.8336e-01,\n",
      "        -8.1747e-02, -4.3145e-01, -3.4062e-02,  4.3097e-01,  2.3323e-01,\n",
      "         9.0339e-02,  2.1005e-01, -4.9657e-01,  3.1725e-01, -2.0553e-01,\n",
      "        -5.6851e-01, -3.8154e-02, -1.5704e-01, -1.2317e-01, -4.3979e-01,\n",
      "        -5.1358e-01,  1.3525e-01, -3.8230e-01,  8.9848e-02,  5.0879e-01,\n",
      "        -5.0015e-01,  6.4568e-01, -6.8747e-01,  4.7302e-01, -1.8323e-01,\n",
      "        -3.3722e-01, -9.2063e-02, -5.2028e-02,  6.3515e-01,  4.8092e-01,\n",
      "         9.7209e-02, -3.9818e-01,  2.3600e-03, -4.2015e-02, -2.7717e-01,\n",
      "         2.3801e-01, -3.0203e-01, -5.7377e-01,  3.7986e-01, -3.6235e-01,\n",
      "        -2.2515e-01,  2.7390e-04,  2.7111e-01, -1.7556e-01, -4.2828e-01,\n",
      "        -3.6114e-01,  3.5063e-01, -6.4494e-02, -1.5377e-01,  3.4646e-01,\n",
      "        -2.7152e-01, -6.0516e-02, -4.3498e-01,  2.4733e-01,  9.6569e-02,\n",
      "         2.0187e-01,  1.5070e-01, -1.4435e-01, -5.0422e-02, -6.3029e-01,\n",
      "         3.7173e-01,  2.4103e-01,  5.4543e-02, -3.4627e-01,  3.3103e-02,\n",
      "        -4.7488e-01, -2.6066e-01, -3.5967e-01,  5.0611e-01, -9.1039e-02,\n",
      "        -4.0583e-01, -2.8249e-01,  3.1688e-01,  1.7790e-01, -1.1010e-01,\n",
      "         5.0219e-01], device='cuda:0', requires_grad=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter containing:\n",
      "tensor([[[[ 4.8129e-02, -3.7100e-02, -3.7872e-02],\n",
      "          [ 8.8451e-02, -9.5242e-03, -2.7264e-02],\n",
      "          [ 4.3086e-02, -7.0177e-02, -6.2162e-02]],\n",
      "\n",
      "         [[-6.6759e-02,  9.1508e-02, -1.4249e-02],\n",
      "          [ 2.2973e-02,  1.4156e-01,  7.2975e-03],\n",
      "          [-4.7676e-02,  5.6266e-02, -4.5486e-02]],\n",
      "\n",
      "         [[-1.1609e-01, -6.1302e-02, -1.2623e-01],\n",
      "          [-7.3121e-02, -3.5836e-02, -6.7271e-02],\n",
      "          [ 2.7406e-02,  4.7525e-02,  3.6498e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.5930e-01, -1.1167e-02, -6.6066e-02],\n",
      "          [-3.0217e-02, -3.2309e-02,  3.5494e-02],\n",
      "          [-1.9247e-01,  9.6068e-02, -4.1534e-02]],\n",
      "\n",
      "         [[-2.9102e-01,  1.0442e-01,  3.3026e-02],\n",
      "          [ 1.1838e-01,  5.6712e-03, -1.9294e-02],\n",
      "          [-1.4885e-01,  9.0394e-02,  6.5622e-03]],\n",
      "\n",
      "         [[-1.6393e-01, -1.8760e-02,  3.1180e-02],\n",
      "          [ 1.1346e-01,  6.5266e-02, -1.8542e-02],\n",
      "          [-2.3250e-01,  1.8860e-02, -7.7107e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 7.7100e-02,  4.0804e-02, -1.5923e-03],\n",
      "          [ 1.0479e-01, -2.3566e-02, -3.8014e-02],\n",
      "          [ 1.5658e-01,  5.4303e-02,  6.4376e-02]],\n",
      "\n",
      "         [[ 7.7906e-02,  7.1925e-02,  9.3590e-02],\n",
      "          [ 3.8472e-03,  1.0517e-01,  1.4685e-01],\n",
      "          [ 6.1453e-02,  8.3077e-02,  1.0150e-01]],\n",
      "\n",
      "         [[-8.3900e-02, -8.7314e-02, -6.3061e-02],\n",
      "          [-1.4091e-01, -1.1575e-01, -1.9560e-02],\n",
      "          [ 1.6061e-02, -1.4605e-02, -1.8330e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.2990e-01, -8.9691e-02,  5.8194e-02],\n",
      "          [ 1.2181e-01,  5.6783e-02, -3.2115e-02],\n",
      "          [-3.0449e-02,  7.9631e-02,  5.7233e-02]],\n",
      "\n",
      "         [[-5.5418e-02,  1.0208e-01,  1.1441e-01],\n",
      "          [ 3.3434e-02,  4.8455e-02, -3.1970e-02],\n",
      "          [ 8.1528e-02,  1.6198e-01,  1.1674e-01]],\n",
      "\n",
      "         [[-1.0388e-01, -8.8129e-02,  9.5215e-03],\n",
      "          [ 4.7806e-02,  1.5575e-01, -8.0664e-02],\n",
      "          [ 2.8687e-02,  4.5315e-02, -2.5097e-02]]],\n",
      "\n",
      "\n",
      "        [[[-4.9861e-02, -8.1817e-02, -5.5248e-02],\n",
      "          [ 3.7499e-02, -5.0763e-02, -6.7227e-03],\n",
      "          [-5.0814e-02, -1.0773e-01, -9.3530e-02]],\n",
      "\n",
      "         [[-1.8075e-01, -2.0327e-01, -1.1296e-01],\n",
      "          [ 1.7877e-01,  1.8084e-01,  2.9283e-01],\n",
      "          [-1.2798e-01, -1.7432e-01, -1.0284e-01]],\n",
      "\n",
      "         [[ 3.8752e-02,  4.5449e-02,  3.3515e-02],\n",
      "          [ 1.7897e-01,  1.9802e-01,  1.8910e-01],\n",
      "          [ 5.8230e-02,  1.2600e-02, -2.0724e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.5698e-01,  6.1187e-02, -7.7512e-02],\n",
      "          [ 1.2902e-01,  4.4348e-02, -4.5146e-02],\n",
      "          [-3.1062e-02,  5.8289e-03,  1.1681e-01]],\n",
      "\n",
      "         [[ 2.4651e-01,  1.5452e-01,  2.8544e-01],\n",
      "          [ 4.1095e-02,  1.2500e-01,  1.3687e-01],\n",
      "          [ 1.5502e-01,  1.1826e-01,  1.0685e-01]],\n",
      "\n",
      "         [[ 2.3371e-01,  9.9947e-02, -1.2320e-01],\n",
      "          [-4.7801e-02,  5.3978e-02,  1.9091e-01],\n",
      "          [ 1.3743e-01,  2.3968e-01,  1.5324e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 9.0295e-02, -7.5388e-02, -1.1340e-01],\n",
      "          [ 6.6561e-02, -2.1179e-02, -1.6073e-02],\n",
      "          [ 6.4645e-02, -6.1523e-02, -7.4125e-02]],\n",
      "\n",
      "         [[ 8.8348e-02,  2.0467e-01,  6.9842e-02],\n",
      "          [ 3.8473e-02,  1.4084e-01,  6.2560e-02],\n",
      "          [ 3.7953e-03,  6.8779e-02, -1.2997e-04]],\n",
      "\n",
      "         [[-1.0513e-01, -8.5563e-02, -1.4376e-01],\n",
      "          [-9.0682e-03,  2.7955e-02, -4.0240e-02],\n",
      "          [ 3.9479e-02,  7.2615e-02,  6.2743e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-7.5161e-01, -4.0995e-02, -7.6021e-02],\n",
      "          [ 3.3991e-02,  8.4488e-02,  4.7727e-02],\n",
      "          [-2.6306e-01,  6.4205e-02, -4.5311e-02]],\n",
      "\n",
      "         [[-5.7351e-01,  7.3035e-02, -1.2462e-02],\n",
      "          [ 1.1959e-01,  7.8627e-02,  7.3571e-03],\n",
      "          [-7.2529e-03,  5.0377e-02, -9.2570e-02]],\n",
      "\n",
      "         [[-4.0252e-01,  3.3500e-02, -6.5875e-02],\n",
      "          [ 9.1399e-02, -1.6015e-02,  3.0557e-02],\n",
      "          [-1.6595e-01,  8.2212e-02, -2.2476e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.1992e-01, -1.8762e-01, -1.1955e-01],\n",
      "          [-1.4007e-01, -1.3713e-01, -1.5536e-01],\n",
      "          [-1.9608e-01, -2.7825e-01, -2.5461e-01]],\n",
      "\n",
      "         [[-9.5317e-02, -1.3351e-01, -7.6813e-02],\n",
      "          [ 1.8214e-02, -4.9226e-02, -9.8600e-02],\n",
      "          [ 1.8505e-04, -6.4812e-02,  8.1008e-02]],\n",
      "\n",
      "         [[-2.4738e-03,  2.8223e-02,  4.9276e-02],\n",
      "          [ 1.1494e-01,  8.8738e-02,  8.0695e-02],\n",
      "          [ 1.1428e-01,  2.1996e-01,  2.0735e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.8413e-01,  7.0625e-02, -1.1334e-01],\n",
      "          [ 5.4329e-02, -4.0156e-03, -4.6514e-02],\n",
      "          [-2.3018e-01,  1.4807e-01, -2.9308e-01]],\n",
      "\n",
      "         [[-1.7161e-01,  6.5226e-02, -9.5417e-02],\n",
      "          [-8.9914e-02, -1.8794e-02,  3.0889e-02],\n",
      "          [ 1.3101e-01,  4.7049e-02, -6.5045e-02]],\n",
      "\n",
      "         [[-2.2474e-01,  1.6525e-01, -2.0604e-01],\n",
      "          [ 5.9726e-02, -1.1334e-01,  7.3295e-02],\n",
      "          [-1.2668e-01,  3.2486e-02, -1.2809e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 1.0451e-01,  6.0219e-02,  2.4282e-02],\n",
      "          [ 9.9849e-02,  1.2526e-02, -3.2231e-02],\n",
      "          [ 9.9278e-02,  1.5336e-02, -2.5885e-03]],\n",
      "\n",
      "         [[ 1.5843e-01,  1.1578e-01,  8.3367e-02],\n",
      "          [ 7.1920e-02,  1.1041e-01,  1.2684e-01],\n",
      "          [ 1.0148e-01,  9.1610e-02,  3.4580e-02]],\n",
      "\n",
      "         [[-2.6679e-03,  4.9262e-03, -1.9427e-02],\n",
      "          [-4.6746e-02, -6.0817e-03, -6.0158e-03],\n",
      "          [ 8.1787e-02,  7.5852e-02,  2.1493e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.6626e-01, -7.2667e-02,  5.7606e-02],\n",
      "          [ 2.3496e-02, -1.0818e-02, -4.5040e-02],\n",
      "          [ 4.9620e-02,  8.3640e-02,  1.0318e-01]],\n",
      "\n",
      "         [[-3.7982e-02,  7.8739e-02,  7.0561e-02],\n",
      "          [ 3.1127e-02,  1.8868e-02, -3.1974e-02],\n",
      "          [ 9.4597e-02,  1.2509e-01,  9.6719e-02]],\n",
      "\n",
      "         [[-1.2815e-01, -2.9824e-02,  1.4684e-01],\n",
      "          [ 1.8461e-02,  1.0330e-01, -1.0461e-01],\n",
      "          [ 1.4956e-02,  9.9251e-03,  4.4921e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-1.3120e-02,  2.7302e-03,  1.0911e-02,  9.7089e-03,  4.7915e-03,\n",
      "        -2.0121e-03, -2.2340e-03, -8.2630e-03, -8.0058e-03, -4.5982e-03,\n",
      "        -6.2552e-03, -5.3277e-03, -1.1684e-02, -1.3548e-02, -2.0941e-03,\n",
      "         2.7373e-03,  8.0142e-04, -1.1087e-02, -1.5679e-03,  8.7992e-04,\n",
      "        -6.1364e-03,  9.0708e-03,  4.6830e-03,  1.6608e-03,  1.0328e-02,\n",
      "        -4.7447e-03, -1.3011e-02, -1.4117e-02,  5.9525e-03, -1.3399e-02,\n",
      "         1.3531e-03,  9.8922e-04,  1.3944e-03, -1.1353e-02, -3.8890e-03,\n",
      "         1.2006e-03, -1.1597e-02, -1.2936e-02, -1.0140e-02,  1.2193e-02,\n",
      "        -1.1656e-02, -3.1781e-03, -5.0782e-03, -1.2418e-02,  1.3674e-02,\n",
      "        -2.2066e-03,  1.1686e-03, -9.1069e-03,  7.7148e-03,  1.1552e-02,\n",
      "         6.1786e-03,  3.5100e-03,  4.7431e-03,  6.6189e-03, -2.8792e-03,\n",
      "         5.9946e-03,  1.4638e-02, -1.0568e-02, -4.0910e-03,  1.3183e-02,\n",
      "        -1.3067e-02, -8.6930e-03, -3.2679e-03,  7.8238e-03,  1.4889e-03,\n",
      "        -5.6928e-03, -2.0571e-03,  1.1462e-02, -3.1512e-03, -1.2381e-02,\n",
      "        -3.1727e-03,  5.9656e-03, -5.7805e-03, -7.0650e-03, -8.5646e-03,\n",
      "         1.2997e-02, -8.8724e-04,  5.8733e-03, -1.1355e-02,  6.1464e-03,\n",
      "         2.1798e-03,  6.2766e-03, -1.5116e-03,  4.9408e-03,  1.3042e-02,\n",
      "         1.9189e-03, -7.3244e-03, -1.7993e-03,  8.9227e-03, -4.4415e-03,\n",
      "        -3.0902e-03, -1.2370e-02,  1.4453e-02, -9.1614e-03,  1.2105e-02,\n",
      "         4.5369e-04,  1.1764e-02,  1.3622e-03, -7.2355e-03, -9.4284e-03,\n",
      "        -6.7362e-05,  5.5650e-03,  1.1747e-02,  5.7910e-03,  8.8913e-04,\n",
      "         7.2632e-03,  1.4035e-02,  8.6666e-03,  8.8483e-03,  3.3219e-03,\n",
      "         2.5962e-04,  3.8353e-03, -1.4684e-02, -5.0156e-03, -5.5467e-04,\n",
      "         8.4642e-03, -1.3253e-02,  9.9452e-03, -1.1906e-02, -7.9499e-03,\n",
      "         8.6398e-03,  1.0600e-02, -1.2184e-02,  5.5551e-03, -9.7008e-04,\n",
      "        -3.8945e-03, -1.5951e-03,  4.6045e-04, -2.4870e-03, -7.9141e-03,\n",
      "         3.9299e-03, -1.4616e-02, -1.3850e-02, -8.9078e-03, -1.2756e-02,\n",
      "         1.3090e-02,  9.3300e-04,  5.6623e-03,  8.6804e-04,  5.1441e-03,\n",
      "        -6.6399e-03, -2.8369e-03,  1.0793e-02, -7.0014e-03,  5.8686e-03,\n",
      "        -5.0232e-03,  7.1117e-03,  2.1258e-03, -1.0748e-02,  1.4439e-02,\n",
      "        -9.8095e-03, -8.7273e-03,  1.1240e-02, -1.4333e-03,  1.1116e-02,\n",
      "         1.6935e-03,  9.4019e-04, -8.4525e-03, -5.5247e-03, -6.9072e-03,\n",
      "         9.9145e-03,  1.3626e-02,  1.1123e-04,  5.4835e-03,  2.6061e-03,\n",
      "        -1.0718e-02, -1.3282e-02, -3.6124e-03,  4.3053e-04, -1.0076e-02,\n",
      "        -8.3750e-03,  8.4530e-03,  1.0815e-02, -8.1699e-03,  9.7555e-03,\n",
      "        -8.9168e-03,  2.7804e-03,  5.4305e-03,  4.0616e-04, -9.3986e-03,\n",
      "         5.5483e-03, -4.3263e-03,  1.3902e-02,  1.2191e-02, -1.3301e-03,\n",
      "         1.0917e-02, -2.4380e-04,  6.1168e-03, -1.2943e-02,  1.0440e-02,\n",
      "         3.2720e-03, -4.0766e-03,  2.9766e-03, -1.0240e-02,  1.1706e-02,\n",
      "         2.7294e-03, -3.4152e-03,  1.6131e-03,  9.8759e-03,  6.5325e-03,\n",
      "        -1.1873e-02,  6.9977e-03,  1.2320e-02, -1.2045e-03, -6.3866e-03,\n",
      "        -7.6516e-03, -1.1451e-02,  9.8387e-03,  1.0641e-02,  2.8112e-03,\n",
      "         9.8516e-03, -1.0567e-02,  4.6000e-04, -9.5100e-03,  1.0476e-03,\n",
      "        -6.7971e-03, -1.0611e-02,  1.0766e-02,  6.3411e-03,  9.9326e-03,\n",
      "        -8.2638e-03,  8.1791e-03, -1.4467e-03, -1.5290e-03,  3.7390e-03,\n",
      "        -1.4013e-02, -1.0183e-02,  1.4319e-02,  1.3768e-02, -8.3860e-03,\n",
      "        -2.6022e-03,  5.8480e-03,  1.4584e-03, -1.1104e-02,  1.4224e-02,\n",
      "         7.9318e-03,  4.2953e-03,  1.4236e-02, -7.5196e-03,  1.2898e-02,\n",
      "        -8.9305e-03,  4.1334e-03, -1.2410e-02, -2.2011e-03,  7.5497e-03,\n",
      "        -1.0171e-02,  6.9881e-03,  1.0089e-02, -9.6961e-03,  3.5490e-03,\n",
      "         5.4065e-03, -1.4077e-02,  3.3678e-03,  2.6259e-03,  8.0750e-03,\n",
      "        -1.2257e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.9595, 0.6876, 0.7912, 1.0155, 0.8334, 0.7536, 0.9613, 0.9502, 1.0869,\n",
      "        0.7982, 1.0609, 1.1874, 1.0693, 0.9693, 0.9017, 1.0055, 1.1560, 0.9191,\n",
      "        0.8442, 0.7782, 1.0695, 0.7785, 1.1182, 1.0371, 0.7893, 0.5894, 0.8888,\n",
      "        1.0930, 1.0026, 0.9375, 0.8658, 1.1131, 0.9199, 1.0598, 1.5675, 0.7816,\n",
      "        0.9649, 0.7714, 1.2401, 0.9207, 0.9263, 1.2181, 0.8426, 1.1566, 0.8551,\n",
      "        0.9269, 1.0939, 1.0157, 0.9837, 0.6659, 0.9544, 0.9990, 1.0113, 0.8331,\n",
      "        1.1263, 0.8991, 1.0259, 0.6729, 0.6834, 1.0902, 0.9412, 0.5504, 1.0255,\n",
      "        1.0791, 0.8152, 1.0528, 0.9846, 0.9735, 0.9342, 1.0449, 0.9740, 0.8734,\n",
      "        1.0871, 1.0569, 1.1355, 0.7144, 0.8677, 0.8942, 0.7127, 0.9789, 0.9628,\n",
      "        0.9358, 0.9201, 0.9950, 0.8963, 1.1058, 0.9821, 1.1006, 0.9852, 1.1630,\n",
      "        0.9624, 1.1640, 0.8914, 0.9706, 1.0061, 1.0286, 0.8004, 0.9865, 1.0948,\n",
      "        1.1795, 0.9945, 0.7629, 0.8818, 0.9128, 0.4758, 0.8408, 0.8897, 0.8842,\n",
      "        1.5558, 1.2389, 1.0424, 1.1171, 0.8772, 1.0423, 1.0825, 1.1264, 1.0990,\n",
      "        1.2552, 0.9681, 0.9260, 0.7300, 0.9759, 1.1129, 0.9163, 0.7936, 1.0522,\n",
      "        0.9833, 0.6719, 1.1972, 0.9890, 1.1228, 1.0731, 0.9625, 1.3049, 0.9371,\n",
      "        1.0920, 0.9450, 1.0207, 0.7805, 1.0371, 0.9990, 1.1700, 0.8775, 1.0394,\n",
      "        0.8395, 0.9762, 0.9902, 0.9538, 0.8192, 1.3649, 0.8817, 0.7256, 0.8772,\n",
      "        1.0482, 0.9481, 1.0462, 0.9632, 1.0030, 0.6652, 1.0477, 0.8270, 0.9104,\n",
      "        0.9786, 0.9907, 0.8365, 0.9363, 0.9641, 0.9809, 1.0978, 1.2428, 1.0127,\n",
      "        1.0246, 0.8171, 0.9689, 0.9630, 0.9380, 0.5885, 1.2949, 0.9244, 0.8885,\n",
      "        1.1903, 1.0744, 0.9399, 0.9308, 1.1790, 0.9540, 1.1551, 0.6183, 1.0655,\n",
      "        0.8728, 0.6481, 0.8481, 1.0674, 1.0997, 1.0164, 0.9896, 1.0413, 0.9815,\n",
      "        0.8572, 0.9251, 1.0301, 1.3336, 0.8320, 0.9823, 0.9972, 0.9055, 0.9531,\n",
      "        1.1998, 0.8777, 0.8208, 0.9637, 1.0892, 1.1663, 1.0545, 1.0512, 0.8899,\n",
      "        1.1114, 1.2844, 0.9104, 0.9740, 0.9879, 0.8276, 0.8959, 0.8440, 1.1915,\n",
      "        0.9060, 0.9017, 1.0892, 0.9807, 0.9402, 1.1094, 1.0519, 0.9778, 0.9916,\n",
      "        0.5668, 0.9393, 1.0412, 0.9600, 0.9334, 1.0788, 0.9122, 0.9273, 0.9186,\n",
      "        0.9962, 1.0690, 1.0495, 1.1124, 1.0995, 0.9407, 0.9602, 1.0454, 0.9008,\n",
      "        1.2197, 1.0535, 0.8342, 0.9113], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-2.5378e-03, -1.8544e-01, -1.8000e-01, -1.1587e-01, -1.1367e-01,\n",
      "        -7.8887e-02, -7.7479e-03,  2.0333e-02, -1.5333e-01, -1.7625e-01,\n",
      "         7.6382e-02,  1.9270e-01,  4.9165e-02,  3.6651e-02,  4.4007e-02,\n",
      "         4.1508e-02,  2.2940e-01, -1.4057e-01, -9.4401e-02,  1.5904e-01,\n",
      "        -8.6009e-02, -7.8618e-02, -6.5632e-02,  9.7406e-02, -1.3597e-01,\n",
      "        -1.7551e-01, -9.4935e-02,  1.7424e-01, -1.1361e-01,  4.7134e-02,\n",
      "        -1.0314e-02,  1.0781e-01,  7.5792e-02, -1.0272e-01, -7.8811e-02,\n",
      "        -1.9180e-01,  1.7929e-01,  4.4129e-02, -3.8165e-02,  7.1791e-03,\n",
      "         1.4695e-01,  6.9864e-02,  1.5260e-03,  2.6436e-02,  6.8057e-04,\n",
      "        -1.8433e-01, -2.5153e-02, -1.7078e-01,  1.7286e-02, -1.7463e-01,\n",
      "         2.6220e-02, -1.4205e-01, -1.1224e-01, -1.6028e-01, -9.1764e-02,\n",
      "        -3.4272e-02,  7.7795e-02, -9.4015e-02, -6.6270e-02, -1.0291e-02,\n",
      "        -1.3342e-01, -2.1878e-01, -2.2580e-01, -1.1402e-01, -3.0986e-02,\n",
      "         3.3534e-02,  5.5965e-02, -7.9139e-02, -9.1088e-03, -9.1273e-02,\n",
      "         6.4108e-02, -1.7933e-01, -1.6905e-01,  2.8673e-02, -5.0031e-02,\n",
      "        -3.3147e-02, -1.9904e-01, -5.8044e-02, -8.9907e-02,  5.0069e-02,\n",
      "        -1.0149e-01, -1.5131e-01, -1.4470e-01,  7.5482e-02, -6.4586e-02,\n",
      "        -5.6087e-02, -1.5710e-01, -5.9466e-02,  6.1155e-02, -2.6573e-02,\n",
      "         1.3616e-01, -2.3543e-02,  9.0560e-03,  9.0249e-02, -1.0220e-01,\n",
      "         6.6651e-02, -1.5207e-01,  5.7128e-02,  9.4070e-02,  3.5611e-03,\n",
      "         7.7938e-02, -8.7104e-02, -4.6188e-02, -1.1893e-02, -1.7069e-01,\n",
      "        -1.7468e-02,  3.1519e-01, -8.2797e-02,  2.5926e-01, -2.5846e-02,\n",
      "        -2.4237e-02, -1.3912e-01,  7.8537e-02,  1.3648e-01, -6.0803e-02,\n",
      "        -3.1175e-04, -6.6340e-02, -1.0730e-01, -8.3465e-02,  1.0256e-01,\n",
      "         3.9251e-02, -1.2080e-01, -1.6921e-01, -3.8438e-02, -1.6753e-01,\n",
      "         7.8796e-02, -2.4981e-02, -2.9634e-01,  2.0295e-02, -6.2038e-02,\n",
      "        -5.5343e-02, -8.5210e-02, -4.6253e-02,  5.3934e-02,  4.0527e-02,\n",
      "         9.4325e-02,  2.7570e-02, -2.0270e-01, -1.8445e-01,  8.6707e-02,\n",
      "         1.1494e-01, -1.5557e-01, -2.0245e-03,  6.0037e-02, -2.0705e-02,\n",
      "        -1.2021e-01, -7.9973e-02,  1.1404e-01, -2.8592e-01,  2.3884e-01,\n",
      "        -1.5848e-01, -1.3619e-01, -5.9916e-02,  1.5103e-02, -1.3150e-01,\n",
      "         7.6496e-02, -1.0300e-01, -1.7808e-01, -1.2181e-01, -1.2438e-01,\n",
      "        -1.7984e-01, -7.1378e-02, -1.2467e-01, -1.9355e-01, -1.0567e-01,\n",
      "        -3.8288e-02,  1.1586e-02, -1.2745e-01, -1.4121e-01, -4.3592e-02,\n",
      "        -7.4791e-02, -2.0974e-02, -2.8806e-01, -1.2478e-01,  6.8129e-02,\n",
      "        -2.0972e-01, -1.1813e-01,  1.0950e-01,  2.1344e-02, -2.3291e-02,\n",
      "         8.6403e-02, -1.4500e-01, -5.5776e-02, -1.2467e-02,  1.8281e-01,\n",
      "        -4.1177e-02, -2.2090e-01, -7.9444e-02,  6.9919e-02, -3.5319e-02,\n",
      "        -1.8467e-01, -5.0364e-02, -7.0228e-02,  1.1385e-01, -3.4312e-02,\n",
      "        -1.6167e-01, -6.5796e-02,  1.8655e-02, -4.8994e-02,  4.6079e-02,\n",
      "         1.8243e-01,  1.1811e-01, -1.5804e-01,  2.1147e-02, -4.3652e-02,\n",
      "        -1.0560e-02,  3.3544e-02,  1.2003e-01, -1.3004e-01, -2.1851e-01,\n",
      "        -1.4082e-01, -7.1875e-02, -4.1285e-02, -1.4216e-01,  7.9222e-03,\n",
      "         6.0584e-03,  1.8849e-01,  1.5104e-01,  3.8519e-02,  3.9369e-02,\n",
      "         1.3267e-01, -1.9515e-01, -8.5096e-02, -8.7757e-02, -1.1157e-01,\n",
      "         1.2759e-02, -4.2672e-02,  1.9363e-01, -1.0053e-01, -6.6276e-02,\n",
      "         1.2036e-01, -1.3514e-01, -1.9348e-01,  4.0534e-02, -1.9874e-01,\n",
      "        -5.5416e-02, -1.3622e-01, -1.4541e-01, -2.2972e-01, -4.0961e-02,\n",
      "        -1.3330e-02,  2.8131e-02,  8.7739e-02,  8.6412e-02, -1.8672e-02,\n",
      "         1.0241e-01,  3.4310e-02, -4.2875e-02, -7.4656e-03, -1.8367e-01,\n",
      "         8.1139e-02, -1.7393e-01, -1.3842e-01, -1.4989e-02, -1.7011e-01,\n",
      "        -5.3091e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-0.1214,  0.0604, -0.1127],\n",
      "          [-0.0704,  0.0512, -0.0697],\n",
      "          [ 0.0307,  0.1892,  0.0772]],\n",
      "\n",
      "         [[-0.0819,  0.0344, -0.1035],\n",
      "          [ 0.0567,  0.0185,  0.0460],\n",
      "          [-0.0458,  0.0481, -0.0938]],\n",
      "\n",
      "         [[-0.1240, -0.1726, -0.2529],\n",
      "          [ 0.2127,  0.2298,  0.1776],\n",
      "          [ 0.1276,  0.0562,  0.0273]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.1425,  0.1162, -0.1396],\n",
      "          [-0.0586, -0.0407, -0.0236],\n",
      "          [-0.0273,  0.0601, -0.0180]],\n",
      "\n",
      "         [[ 0.0476, -0.0137,  0.0500],\n",
      "          [ 0.0877, -0.1668,  0.0807],\n",
      "          [ 0.1901,  0.3209,  0.2162]],\n",
      "\n",
      "         [[ 0.0372,  0.0233, -0.0065],\n",
      "          [-0.0186, -0.0119, -0.0249],\n",
      "          [-0.0267, -0.0103, -0.0857]]],\n",
      "\n",
      "\n",
      "        [[[ 0.2979, -0.1137, -0.1802],\n",
      "          [ 0.2030, -0.0480, -0.0829],\n",
      "          [ 0.2832,  0.0528, -0.1546]],\n",
      "\n",
      "         [[ 0.1954, -0.0510, -0.1707],\n",
      "          [ 0.0697,  0.0164,  0.0048],\n",
      "          [ 0.1824,  0.0045, -0.1243]],\n",
      "\n",
      "         [[-0.0920,  0.0141,  0.0050],\n",
      "          [ 0.1528,  0.1550,  0.1389],\n",
      "          [-0.1551, -0.0766, -0.0890]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.4488, -0.2111, -0.2556],\n",
      "          [ 0.1528,  0.0826, -0.0310],\n",
      "          [ 0.2912, -0.0628, -0.2859]],\n",
      "\n",
      "         [[-0.0501, -0.0048,  0.0256],\n",
      "          [ 0.0043, -0.1216,  0.1727],\n",
      "          [ 0.0950,  0.0615,  0.1206]],\n",
      "\n",
      "         [[ 0.1348, -0.0532, -0.0625],\n",
      "          [ 0.0540, -0.0032,  0.0199],\n",
      "          [ 0.1303, -0.0536, -0.1255]]],\n",
      "\n",
      "\n",
      "        [[[-0.0900, -0.0895,  0.0229],\n",
      "          [-0.0722, -0.0368,  0.0066],\n",
      "          [-0.1176, -0.1308,  0.0571]],\n",
      "\n",
      "         [[-0.1007, -0.0158, -0.0336],\n",
      "          [-0.0435,  0.0327, -0.0043],\n",
      "          [-0.0924, -0.0073, -0.0340]],\n",
      "\n",
      "         [[-0.0305, -0.0127, -0.0515],\n",
      "          [ 0.0629,  0.0972,  0.0713],\n",
      "          [-0.0164,  0.0841,  0.0607]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.1046, -0.0619,  0.0485],\n",
      "          [-0.0621, -0.0695,  0.0811],\n",
      "          [-0.0446,  0.1256,  0.0005]],\n",
      "\n",
      "         [[ 0.0030,  0.0300, -0.0616],\n",
      "          [-0.1584,  0.0744, -0.2578],\n",
      "          [-0.3539,  0.0560, -0.3959]],\n",
      "\n",
      "         [[-0.1562, -0.0862, -0.1352],\n",
      "          [-0.0713, -0.0391, -0.0701],\n",
      "          [-0.1117, -0.0306, -0.0676]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0448,  0.0160, -0.0713],\n",
      "          [-0.0945, -0.0156, -0.0048],\n",
      "          [-0.0769, -0.1237, -0.0692]],\n",
      "\n",
      "         [[ 0.0129,  0.0206,  0.0742],\n",
      "          [-0.1319, -0.1299, -0.1181],\n",
      "          [-0.0249, -0.0216,  0.0053]],\n",
      "\n",
      "         [[ 0.0648,  0.1901,  0.1211],\n",
      "          [-0.0166, -0.0967, -0.0085],\n",
      "          [ 0.0958,  0.1489,  0.1225]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0980,  0.1338,  0.0475],\n",
      "          [-0.0674, -0.0286, -0.1065],\n",
      "          [-0.0896, -0.0222,  0.0231]],\n",
      "\n",
      "         [[-0.0704, -0.0918, -0.0721],\n",
      "          [-0.0910,  0.0218, -0.1742],\n",
      "          [-0.1790, -0.1566, -0.2124]],\n",
      "\n",
      "         [[-0.0135,  0.0148,  0.0215],\n",
      "          [-0.1129, -0.1100, -0.0693],\n",
      "          [-0.0240,  0.0179,  0.0216]]],\n",
      "\n",
      "\n",
      "        [[[-0.0779, -0.0210, -0.1637],\n",
      "          [-0.1277, -0.0572, -0.1423],\n",
      "          [-0.0718,  0.0343, -0.2054]],\n",
      "\n",
      "         [[-0.0139, -0.0349, -0.0994],\n",
      "          [ 0.0384,  0.0300, -0.0180],\n",
      "          [ 0.0808,  0.0556, -0.0145]],\n",
      "\n",
      "         [[-0.1224, -0.0271, -0.1453],\n",
      "          [ 0.1819,  0.2475,  0.2080],\n",
      "          [ 0.0228,  0.0355, -0.0275]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0839,  0.0229, -0.2462],\n",
      "          [-0.0990, -0.1007, -0.0351],\n",
      "          [-0.1905, -0.0358, -0.3718]],\n",
      "\n",
      "         [[ 0.1224, -0.2495,  0.1369],\n",
      "          [ 0.0808, -0.1684,  0.0732],\n",
      "          [ 0.1734, -0.2250,  0.0463]],\n",
      "\n",
      "         [[ 0.0111,  0.0126, -0.0601],\n",
      "          [-0.0138, -0.0185, -0.0497],\n",
      "          [ 0.0315,  0.0481, -0.0157]]],\n",
      "\n",
      "\n",
      "        [[[-0.2689, -0.1897, -0.0336],\n",
      "          [-0.1797, -0.1098, -0.0361],\n",
      "          [-0.2626, -0.1612,  0.0478]],\n",
      "\n",
      "         [[-0.1950, -0.0882, -0.1251],\n",
      "          [-0.0402,  0.0340,  0.0329],\n",
      "          [-0.0826, -0.0115, -0.0452]],\n",
      "\n",
      "         [[ 0.0091,  0.0381,  0.0201],\n",
      "          [-0.0155,  0.0628,  0.0110],\n",
      "          [-0.1166, -0.0670, -0.0224]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.2305, -0.2085, -0.0759],\n",
      "          [-0.1339, -0.0995,  0.0251],\n",
      "          [-0.1263,  0.0653,  0.0181]],\n",
      "\n",
      "         [[-0.0277,  0.0638, -0.0369],\n",
      "          [-0.1323, -0.0433, -0.2042],\n",
      "          [-0.2233,  0.0839, -0.2808]],\n",
      "\n",
      "         [[-0.2446, -0.1686, -0.2008],\n",
      "          [-0.0567,  0.0313,  0.0085],\n",
      "          [-0.0791, -0.0111, -0.0745]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0204,  0.0194,  0.0115,  0.0023,  0.0007, -0.0002,  0.0023,  0.0018,\n",
      "        -0.0181, -0.0101, -0.0038,  0.0078, -0.0151, -0.0042, -0.0155, -0.0161,\n",
      "         0.0018,  0.0057,  0.0188, -0.0009,  0.0011,  0.0086,  0.0142, -0.0060,\n",
      "         0.0017,  0.0197,  0.0007,  0.0197,  0.0183, -0.0177, -0.0140, -0.0059,\n",
      "         0.0045, -0.0204,  0.0126,  0.0053,  0.0190,  0.0114, -0.0008,  0.0056,\n",
      "         0.0116, -0.0149, -0.0159,  0.0198, -0.0039,  0.0189,  0.0160, -0.0151,\n",
      "        -0.0038, -0.0191,  0.0175, -0.0016, -0.0059,  0.0087, -0.0102,  0.0065,\n",
      "         0.0079, -0.0022,  0.0154, -0.0204, -0.0108,  0.0203,  0.0073,  0.0096,\n",
      "         0.0060,  0.0050, -0.0190,  0.0171, -0.0103, -0.0208,  0.0204,  0.0190,\n",
      "        -0.0010, -0.0004, -0.0142, -0.0169, -0.0120, -0.0104, -0.0056, -0.0086,\n",
      "        -0.0175,  0.0138,  0.0064, -0.0045, -0.0133,  0.0018, -0.0086, -0.0065,\n",
      "         0.0203,  0.0167,  0.0170, -0.0124,  0.0165, -0.0038,  0.0145,  0.0200,\n",
      "         0.0201, -0.0205, -0.0021, -0.0109, -0.0006, -0.0062, -0.0169,  0.0054,\n",
      "         0.0160, -0.0095, -0.0074, -0.0031, -0.0001,  0.0062,  0.0115, -0.0030,\n",
      "         0.0008, -0.0137, -0.0174,  0.0173, -0.0079,  0.0006,  0.0166, -0.0118,\n",
      "        -0.0016, -0.0075,  0.0164, -0.0204, -0.0045, -0.0058, -0.0073, -0.0080,\n",
      "        -0.0135,  0.0083, -0.0094, -0.0034, -0.0097, -0.0030,  0.0026, -0.0058,\n",
      "         0.0156,  0.0106, -0.0042,  0.0087,  0.0031, -0.0147, -0.0057,  0.0017,\n",
      "         0.0159, -0.0193, -0.0063,  0.0005,  0.0003,  0.0189,  0.0174, -0.0040,\n",
      "         0.0033,  0.0091, -0.0191,  0.0196, -0.0185,  0.0107, -0.0145,  0.0014,\n",
      "        -0.0187, -0.0020, -0.0128, -0.0044,  0.0177,  0.0033,  0.0157,  0.0050,\n",
      "         0.0135, -0.0063, -0.0049, -0.0018, -0.0164,  0.0057, -0.0033, -0.0120,\n",
      "        -0.0150,  0.0071,  0.0176,  0.0192,  0.0088, -0.0074,  0.0160,  0.0144,\n",
      "        -0.0182, -0.0015,  0.0205,  0.0035, -0.0205,  0.0127,  0.0013,  0.0109,\n",
      "        -0.0147, -0.0082,  0.0150,  0.0143, -0.0141, -0.0160, -0.0202, -0.0193,\n",
      "        -0.0003,  0.0020, -0.0145, -0.0134,  0.0071,  0.0123, -0.0018, -0.0108,\n",
      "         0.0146,  0.0054, -0.0161, -0.0021, -0.0064, -0.0162, -0.0137, -0.0183,\n",
      "         0.0036,  0.0047, -0.0043, -0.0092, -0.0099,  0.0006,  0.0166,  0.0099,\n",
      "        -0.0054, -0.0120, -0.0038, -0.0128,  0.0128, -0.0064,  0.0056,  0.0025,\n",
      "        -0.0010, -0.0057,  0.0011, -0.0143, -0.0202, -0.0087, -0.0116,  0.0080,\n",
      "         0.0195, -0.0188, -0.0102, -0.0046, -0.0148, -0.0085, -0.0011, -0.0185,\n",
      "        -0.0037, -0.0202, -0.0019,  0.0076, -0.0199,  0.0061,  0.0043,  0.0051],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.7219, 1.4050, 0.9033, 0.9821, 1.1595, 1.1478, 1.0223, 1.1549, 0.8698,\n",
      "        0.9736, 1.0697, 0.7380, 0.5380, 1.1336, 0.9613, 0.9837, 0.6785, 0.7102,\n",
      "        0.9719, 0.8077, 1.1661, 0.9226, 0.7420, 0.9085, 0.9945, 0.9005, 0.9368,\n",
      "        0.8957, 0.8700, 1.3245, 1.0603, 0.9300, 0.8972, 0.7342, 0.8480, 0.9612,\n",
      "        0.9789, 0.9873, 0.7794, 0.8365, 0.9607, 1.1796, 0.7135, 1.7343, 0.5248,\n",
      "        1.0152, 0.9379, 0.6636, 0.9673, 0.8199, 0.9367, 1.0405, 0.8422, 0.9941,\n",
      "        1.2049, 0.8843, 0.4930, 1.0246, 1.4389, 0.7419, 1.1259, 0.5569, 0.8927,\n",
      "        0.8921, 1.0017, 0.8586, 1.2694, 1.4859, 0.5285, 0.9242, 0.8106, 1.0571,\n",
      "        1.1624, 0.9519, 0.8852, 1.2890, 1.1794, 0.8907, 1.3273, 1.1038, 1.0367,\n",
      "        0.9285, 0.7373, 0.9804, 1.0118, 0.9950, 0.9075, 0.8891, 0.7335, 1.2288,\n",
      "        0.8324, 1.1115, 0.7819, 0.9192, 1.0487, 0.9316, 1.1962, 1.1040, 1.0826,\n",
      "        1.0092, 0.5737, 0.9466, 0.9351, 0.6808, 1.0606, 1.3370, 1.0195, 1.1325,\n",
      "        0.8177, 1.1021, 1.0286, 0.4766, 1.1237, 1.1300, 1.0256, 1.0150, 1.0442,\n",
      "        1.5451, 0.9892, 1.0829, 0.8556, 1.1124, 1.0400, 0.5116, 0.8995, 0.8492,\n",
      "        0.9487, 0.8980, 0.6150, 0.9441, 0.9947, 0.8940, 0.8627, 0.8978, 1.1514,\n",
      "        0.9276, 0.5432, 0.5690, 0.9449, 1.0380, 0.7008, 0.5976, 0.9561, 0.9054,\n",
      "        1.0196, 0.8869, 0.8869, 0.7519, 1.2724, 0.9380, 1.1225, 1.0346, 0.7616,\n",
      "        0.9055, 0.8555, 0.8175, 0.8706, 1.0338, 0.9304, 0.9971, 0.8829, 1.1891,\n",
      "        0.8874, 1.5845, 1.0028, 1.0042, 0.9878, 0.8109, 0.8859, 0.8283, 0.9308,\n",
      "        1.0529, 1.0270, 0.9663, 1.1209, 0.5486, 0.9739, 1.1162, 0.7432, 1.0575,\n",
      "        0.5713, 0.9453, 0.7076, 1.0077, 0.6437, 0.9661, 1.0637, 0.9500, 0.9306,\n",
      "        0.7345, 0.8334, 1.0102, 0.8328, 0.8004, 0.9307, 1.0401, 1.0769, 0.5189,\n",
      "        0.9038, 1.0417, 0.7066, 1.0905, 0.6587, 0.9803, 0.9642, 0.9384, 0.5475,\n",
      "        1.1710, 0.4851, 0.9865, 0.8783, 0.9573, 0.8235, 0.5178, 0.9949, 0.9455,\n",
      "        1.0437, 1.2429, 1.1069, 1.5525, 0.9954, 0.9453, 0.9744, 0.5615, 1.1969,\n",
      "        1.0178, 0.7936, 0.8946, 1.2649, 1.1266, 0.9888, 0.7737, 0.8530, 0.6299,\n",
      "        0.7318, 1.0016, 0.8159, 1.0135, 0.8080, 0.5874, 0.9252, 1.0618, 0.9005,\n",
      "        1.0144, 0.8972, 1.1054, 1.1564, 0.8728, 1.0411, 0.7826, 1.1618, 0.8506,\n",
      "        1.1726, 0.9944, 0.8938, 0.9538], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-4.4624e-02, -1.6631e-01, -1.1547e-01, -9.9616e-02, -1.2880e-01,\n",
      "         2.1792e-02, -1.1999e-01, -4.5932e-02, -2.1000e-01,  1.0411e-01,\n",
      "        -2.9920e-02, -1.4978e-01, -3.1240e-01, -1.7099e-01, -2.3486e-02,\n",
      "        -1.3536e-01, -2.7996e-01, -1.6367e-01,  1.4012e-01, -1.3986e-01,\n",
      "         1.2713e-01, -2.9940e-01, -2.3848e-01, -3.5006e-02,  3.4755e-02,\n",
      "        -1.1579e-01, -8.2883e-02, -3.0938e-01, -2.4685e-01, -3.3551e-01,\n",
      "         8.6102e-02,  6.4343e-02, -1.2222e-02, -5.5844e-02, -6.3486e-02,\n",
      "        -2.1223e-01, -8.1760e-02, -1.1802e-01, -9.3300e-02, -9.5586e-02,\n",
      "        -7.1152e-02, -3.1238e-02, -1.1528e-01,  2.3888e-01, -2.1675e-01,\n",
      "        -5.2127e-02, -2.4854e-01, -1.6823e-01, -2.2022e-01, -1.6824e-01,\n",
      "        -1.0789e-01,  4.1600e-02, -1.0628e-01, -1.1808e-02, -1.5335e-02,\n",
      "        -1.6954e-02, -1.8780e-01, -3.1344e-02, -2.9227e-02, -1.0786e-01,\n",
      "        -2.6813e-01, -1.7755e-01, -2.0471e-01, -2.7117e-01,  7.7576e-02,\n",
      "        -1.4731e-01, -1.8817e-01,  1.8091e-01, -1.8359e-01, -9.1750e-03,\n",
      "        -1.2041e-01, -4.1947e-01, -1.1162e-01,  8.9179e-02, -9.4981e-02,\n",
      "        -1.6402e-01, -1.4670e-02,  7.0274e-03,  5.0933e-03,  6.8059e-03,\n",
      "        -7.5420e-02, -7.3808e-02, -1.0205e-01,  7.0358e-02, -2.0156e-01,\n",
      "         2.9532e-02, -1.0188e-01,  3.7182e-02, -1.7069e-01, -2.1990e-01,\n",
      "         7.8725e-02, -1.1526e-01, -1.1869e-01,  3.5464e-02, -5.0541e-02,\n",
      "        -1.4053e-01,  1.3763e-01, -5.9938e-02,  2.1905e-01, -1.9165e-01,\n",
      "        -2.3582e-01, -1.9097e-01,  7.7478e-02, -2.3992e-01,  6.8676e-02,\n",
      "         1.9307e-01,  1.8516e-01,  6.2220e-02, -1.9196e-01,  9.4371e-02,\n",
      "         6.9047e-02, -3.4805e-01, -2.2542e-02,  3.3877e-02,  3.0130e-02,\n",
      "        -1.5718e-02, -2.7830e-01,  2.0456e-01,  1.2660e-01,  1.7493e-01,\n",
      "        -3.2648e-01, -2.7462e-01, -3.2270e-02, -2.4712e-01, -3.9181e-01,\n",
      "        -3.2616e-01,  2.8647e-02, -8.2006e-02, -2.1611e-01,  8.1151e-02,\n",
      "        -1.3785e-01, -1.1557e-01, -4.0772e-01, -2.3966e-01,  1.0791e-01,\n",
      "         2.6733e-02, -1.3823e-01,  1.6405e-04,  3.0748e-02, -2.7188e-01,\n",
      "        -1.3849e-01, -2.5844e-01, -6.0297e-02, -3.5980e-01, -4.8632e-02,\n",
      "         4.9246e-02, -1.0316e-01, -9.5168e-02, -2.1419e-01, -7.2956e-02,\n",
      "        -2.2467e-01, -2.1405e-01, -1.6228e-01, -1.5508e-01,  7.7702e-03,\n",
      "         8.0857e-02,  1.8724e-02, -1.3421e-01, -8.1946e-02, -2.2918e-01,\n",
      "        -4.4867e-02,  4.5873e-02, -2.8215e-01,  6.6404e-02,  4.2591e-02,\n",
      "        -1.7104e-02,  8.8603e-02, -1.3140e-01, -9.1213e-02, -1.4030e-01,\n",
      "        -4.4013e-02,  2.1454e-02, -2.5647e-01, -1.5352e-01,  5.0544e-02,\n",
      "        -2.0803e-01,  1.0742e-01,  8.2482e-02, -2.9737e-01,  6.9206e-02,\n",
      "        -9.9369e-02, -6.9711e-03, -6.5903e-02, -6.6452e-02, -5.5079e-02,\n",
      "         7.1523e-02, -2.9322e-01, -4.7183e-02, -2.7106e-02, -3.2548e-01,\n",
      "        -7.5326e-02,  4.8643e-02, -2.2485e-01, -2.1650e-01, -1.8064e-01,\n",
      "        -1.3157e-01, -8.1834e-02, -2.1147e-01, -3.0618e-01,  2.0613e-01,\n",
      "        -1.0702e-01, -6.5050e-02, -1.7684e-01, -1.2545e-02,  3.0999e-02,\n",
      "         6.4054e-02, -8.8756e-02, -3.4458e-02, -3.1180e-01,  4.3619e-02,\n",
      "         5.4419e-03, -4.9420e-02, -1.5569e-01, -2.6611e-01,  6.0491e-02,\n",
      "         2.1742e-03, -5.4731e-03,  6.7644e-02,  1.4850e-01, -2.4923e-02,\n",
      "        -7.5870e-02, -1.5256e-02,  9.6750e-04, -9.5969e-02, -2.0402e-01,\n",
      "        -1.0626e-01, -1.1631e-01, -1.7532e-01,  1.2316e-01,  1.0442e-01,\n",
      "        -1.2005e-01,  6.0476e-02, -1.0256e-01, -1.9113e-01, -7.0404e-02,\n",
      "        -6.8880e-02, -2.2715e-01, -2.0039e-01, -1.5146e-01, -1.6225e-01,\n",
      "        -8.1102e-02, -2.9500e-02, -4.1226e-02,  1.2365e-01, -1.7699e-01,\n",
      "        -1.6416e-01, -3.1565e-01, -3.4979e-01, -1.3591e-01, -2.6370e-02,\n",
      "         9.1336e-02, -1.1914e-01, -2.3024e-01,  1.0928e-01, -8.2085e-03,\n",
      "        -7.9582e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.1976, -0.0689,  0.1157],\n",
      "          [ 0.0979, -0.0613,  0.0181],\n",
      "          [ 0.1305, -0.0856,  0.0644]],\n",
      "\n",
      "         [[-0.0585,  0.1286,  0.0848],\n",
      "          [-0.1391,  0.0608,  0.1127],\n",
      "          [-0.1102, -0.0255,  0.0402]],\n",
      "\n",
      "         [[-0.2813,  0.0974, -0.1919],\n",
      "          [-0.1786,  0.1481, -0.1551],\n",
      "          [-0.3873,  0.0713, -0.3192]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0419,  0.0885, -0.0592],\n",
      "          [-0.1145, -0.0388, -0.0757],\n",
      "          [-0.2643,  0.0246, -0.2793]],\n",
      "\n",
      "         [[ 0.1786, -0.1076, -0.0297],\n",
      "          [ 0.2602, -0.1337,  0.0650],\n",
      "          [ 0.3330, -0.0413,  0.0983]],\n",
      "\n",
      "         [[-0.2147,  0.0605, -0.0921],\n",
      "          [-0.1243,  0.1109, -0.0469],\n",
      "          [-0.3323,  0.0076, -0.2372]]],\n",
      "\n",
      "\n",
      "        [[[-0.0027, -0.0085, -0.0344],\n",
      "          [-0.1256, -0.0613, -0.2428],\n",
      "          [-0.0147, -0.0270, -0.0847]],\n",
      "\n",
      "         [[-0.0938,  0.0536,  0.1281],\n",
      "          [-0.3810, -0.1495,  0.0313],\n",
      "          [-0.2652, -0.1596,  0.0359]],\n",
      "\n",
      "         [[-0.1059, -0.0460, -0.0935],\n",
      "          [ 0.0022, -0.0597, -0.0066],\n",
      "          [-0.0353, -0.0044, -0.0337]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.1826,  0.0269,  0.1343],\n",
      "          [-0.2220, -0.1523, -0.1531],\n",
      "          [-0.0720, -0.1677, -0.1205]],\n",
      "\n",
      "         [[-0.0552, -0.0322, -0.2348],\n",
      "          [-0.1651, -0.1117, -0.3750],\n",
      "          [ 0.0082,  0.1149, -0.1828]],\n",
      "\n",
      "         [[-0.1243, -0.0505, -0.1096],\n",
      "          [ 0.0053, -0.0723,  0.0130],\n",
      "          [-0.0996, -0.0461, -0.0867]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1449,  0.0585,  0.1601],\n",
      "          [-0.2540, -0.1526, -0.1681],\n",
      "          [-0.1442, -0.1841, -0.0686]],\n",
      "\n",
      "         [[-0.1543,  0.0109, -0.0500],\n",
      "          [-0.2310,  0.0321, -0.0631],\n",
      "          [-0.3135, -0.0709, -0.1101]],\n",
      "\n",
      "         [[ 0.0130, -0.0339, -0.0316],\n",
      "          [ 0.0325, -0.0119, -0.0270],\n",
      "          [ 0.0620, -0.0031,  0.0424]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0405, -0.1133, -0.1133],\n",
      "          [ 0.0314,  0.0417, -0.0452],\n",
      "          [ 0.1136,  0.0580,  0.0987]],\n",
      "\n",
      "         [[ 0.1257,  0.0580,  0.2651],\n",
      "          [ 0.0255,  0.0728,  0.2211],\n",
      "          [-0.1094, -0.1961, -0.0734]],\n",
      "\n",
      "         [[ 0.0506,  0.0186,  0.0422],\n",
      "          [ 0.1273,  0.0420,  0.0312],\n",
      "          [ 0.1258,  0.0641,  0.1378]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.2144,  0.0590, -0.2393],\n",
      "          [-0.2067,  0.0501, -0.2444],\n",
      "          [-0.3374,  0.0962, -0.2979]],\n",
      "\n",
      "         [[ 0.1336, -0.1885, -0.0078],\n",
      "          [ 0.3591, -0.1244,  0.0048],\n",
      "          [ 0.1311, -0.2653,  0.0523]],\n",
      "\n",
      "         [[ 0.0072, -0.1031,  0.0516],\n",
      "          [-0.0695, -0.0097,  0.0410],\n",
      "          [ 0.1076,  0.0410,  0.1308]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.1407, -0.1450, -0.1339],\n",
      "          [ 0.0160, -0.0016,  0.0963],\n",
      "          [ 0.1494,  0.0973,  0.1215]],\n",
      "\n",
      "         [[-0.1354,  0.0386, -0.1435],\n",
      "          [-0.0236,  0.1379, -0.0015],\n",
      "          [-0.1814,  0.0318, -0.2192]],\n",
      "\n",
      "         [[ 0.0470, -0.0112,  0.1449],\n",
      "          [-0.0238,  0.0203, -0.0083],\n",
      "          [ 0.0773,  0.0619,  0.1406]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0692, -0.0494,  0.0267],\n",
      "          [-0.0742, -0.1017, -0.1413],\n",
      "          [-0.0253, -0.1726, -0.0274]],\n",
      "\n",
      "         [[-0.4160,  0.1796, -0.0474],\n",
      "          [-0.1078,  0.2311, -0.0467],\n",
      "          [-0.4421,  0.1630, -0.1025]],\n",
      "\n",
      "         [[-0.0616, -0.0401, -0.0611],\n",
      "          [-0.0031,  0.0382,  0.0265],\n",
      "          [ 0.0305, -0.0621,  0.0214]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.1201, -0.1855, -0.1562],\n",
      "          [ 0.0194,  0.0153, -0.0577],\n",
      "          [ 0.0241, -0.0295,  0.0375]],\n",
      "\n",
      "         [[ 0.1016,  0.0071,  0.1597],\n",
      "          [ 0.0146,  0.1258,  0.1836],\n",
      "          [-0.0862, -0.1103, -0.1823]],\n",
      "\n",
      "         [[ 0.1311,  0.1092,  0.1227],\n",
      "          [ 0.1088,  0.1279,  0.1735],\n",
      "          [ 0.1042,  0.0712,  0.1342]]],\n",
      "\n",
      "\n",
      "        [[[ 0.2199,  0.0221,  0.1576],\n",
      "          [ 0.1241,  0.0225,  0.0607],\n",
      "          [ 0.1172, -0.0016,  0.0476]],\n",
      "\n",
      "         [[-0.0369,  0.2855,  0.0455],\n",
      "          [-0.0839,  0.2929,  0.0108],\n",
      "          [-0.1202,  0.1957, -0.0103]],\n",
      "\n",
      "         [[-0.2313,  0.0050, -0.2199],\n",
      "          [-0.1668,  0.0363, -0.1335],\n",
      "          [-0.2656,  0.0085, -0.2670]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0021,  0.1517, -0.0371],\n",
      "          [ 0.0167, -0.0356,  0.0431],\n",
      "          [-0.0261,  0.1096, -0.0837]],\n",
      "\n",
      "         [[ 0.2657, -0.1133,  0.1162],\n",
      "          [ 0.3186, -0.1591,  0.0950],\n",
      "          [ 0.2990, -0.1320,  0.0569]],\n",
      "\n",
      "         [[-0.1006, -0.0893, -0.0189],\n",
      "          [-0.0836,  0.0342,  0.0100],\n",
      "          [-0.1535, -0.0724, -0.0667]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0009,  0.0017, -0.0072,  0.0145, -0.0204, -0.0080,  0.0099, -0.0062,\n",
      "         0.0195, -0.0119,  0.0182,  0.0198, -0.0075, -0.0153,  0.0194, -0.0046,\n",
      "         0.0039,  0.0045,  0.0185,  0.0110,  0.0047, -0.0042, -0.0119, -0.0090,\n",
      "         0.0076, -0.0068, -0.0044, -0.0152,  0.0069, -0.0160, -0.0110, -0.0101,\n",
      "        -0.0087,  0.0055,  0.0147, -0.0170, -0.0132, -0.0080, -0.0095,  0.0192,\n",
      "         0.0047, -0.0026, -0.0004, -0.0159,  0.0109,  0.0143,  0.0130, -0.0110,\n",
      "        -0.0114, -0.0028,  0.0138,  0.0118, -0.0004, -0.0007, -0.0023,  0.0182,\n",
      "         0.0053,  0.0170, -0.0194, -0.0009,  0.0070,  0.0058,  0.0151, -0.0172,\n",
      "        -0.0176,  0.0035,  0.0075, -0.0130,  0.0160,  0.0021, -0.0096, -0.0148,\n",
      "         0.0162, -0.0058,  0.0153, -0.0169, -0.0146, -0.0063,  0.0103, -0.0200,\n",
      "        -0.0020, -0.0135, -0.0142,  0.0166,  0.0123,  0.0043,  0.0168,  0.0163,\n",
      "         0.0044,  0.0084, -0.0195, -0.0129,  0.0201,  0.0162,  0.0162, -0.0056,\n",
      "        -0.0175, -0.0162, -0.0164, -0.0058,  0.0023,  0.0191,  0.0081, -0.0054,\n",
      "        -0.0123, -0.0094,  0.0091,  0.0006, -0.0069,  0.0077,  0.0104, -0.0076,\n",
      "         0.0050,  0.0150,  0.0124, -0.0162, -0.0088,  0.0021,  0.0148, -0.0100,\n",
      "         0.0118,  0.0029, -0.0071, -0.0002, -0.0184,  0.0012, -0.0071,  0.0016,\n",
      "        -0.0012, -0.0047,  0.0138, -0.0045,  0.0136, -0.0050,  0.0188,  0.0178,\n",
      "         0.0007,  0.0176, -0.0052, -0.0086, -0.0058,  0.0025, -0.0097,  0.0197,\n",
      "        -0.0141, -0.0069,  0.0152,  0.0079,  0.0064, -0.0177,  0.0176, -0.0092,\n",
      "        -0.0172,  0.0179, -0.0208,  0.0178, -0.0087,  0.0070,  0.0104,  0.0026,\n",
      "         0.0049,  0.0035,  0.0139, -0.0112,  0.0017,  0.0035,  0.0062, -0.0043,\n",
      "         0.0036, -0.0121, -0.0169,  0.0091,  0.0150,  0.0122, -0.0109,  0.0022,\n",
      "         0.0090,  0.0107, -0.0005, -0.0120,  0.0144, -0.0169, -0.0208, -0.0096,\n",
      "        -0.0052,  0.0118,  0.0137, -0.0156, -0.0172, -0.0208, -0.0011,  0.0124,\n",
      "         0.0137,  0.0119,  0.0073,  0.0025,  0.0193, -0.0205,  0.0155,  0.0192,\n",
      "         0.0068, -0.0186,  0.0193, -0.0150, -0.0097, -0.0136, -0.0071, -0.0019,\n",
      "         0.0098, -0.0191,  0.0128, -0.0170,  0.0195,  0.0016,  0.0163, -0.0111,\n",
      "        -0.0022, -0.0180,  0.0090,  0.0080, -0.0027,  0.0195, -0.0192, -0.0149,\n",
      "         0.0018, -0.0089,  0.0034,  0.0023, -0.0133,  0.0116,  0.0134,  0.0003,\n",
      "        -0.0076, -0.0024,  0.0086, -0.0172, -0.0069,  0.0096,  0.0039,  0.0148,\n",
      "        -0.0095,  0.0171, -0.0089, -0.0134,  0.0123,  0.0153,  0.0108, -0.0073,\n",
      "        -0.0169,  0.0010,  0.0084,  0.0123, -0.0190, -0.0085, -0.0150, -0.0140],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.7613, 0.9132, 0.9380, 0.8986, 1.3332, 0.9076, 1.0666, 0.8907, 1.0227,\n",
      "        0.8487, 0.9590, 0.9980, 0.4681, 0.9228, 0.9326, 0.9620, 0.7343, 0.8823,\n",
      "        0.9724, 1.0982, 0.8218, 1.0909, 1.8117, 0.9472, 0.9999, 0.9688, 0.6914,\n",
      "        0.8248, 0.8609, 1.4808, 0.8952, 1.2545, 0.9656, 1.0195, 0.8331, 0.9628,\n",
      "        0.9460, 0.7916, 0.7926, 0.9024, 0.9157, 0.9211, 1.1713, 0.9513, 0.8922,\n",
      "        0.9396, 0.9040, 0.8475, 0.9341, 0.7189, 1.0993, 0.9290, 0.7270, 0.6627,\n",
      "        1.4380, 0.9552, 0.5928, 0.8850, 1.0147, 0.9127, 0.9202, 0.8184, 1.0143,\n",
      "        0.7885, 0.9538, 0.9032, 0.8990, 0.9355, 0.9439, 0.6750, 0.8233, 0.8129,\n",
      "        1.0038, 1.0005, 0.9089, 0.9606, 0.9004, 0.9056, 0.8712, 0.8630, 0.6285,\n",
      "        0.7572, 1.0063, 0.8576, 0.9611, 0.9568, 0.9405, 0.8837, 0.9025, 1.7152,\n",
      "        0.9264, 0.9700, 0.9104, 0.8220, 0.8157, 0.8627, 0.9301, 0.8704, 1.4353,\n",
      "        0.9318, 0.8760, 1.0407, 0.9148, 0.6295, 0.9590, 0.8337, 1.0294, 0.8947,\n",
      "        0.7924, 0.7208, 0.9400, 1.0696, 0.8051, 0.9287, 0.8004, 0.9785, 0.9204,\n",
      "        0.8690, 1.1491, 1.2154, 0.9252, 0.9899, 0.8132, 1.0866, 0.8733, 0.9472,\n",
      "        0.9352, 0.8961, 0.9107, 0.9548, 0.4936, 0.8689, 1.3764, 0.9069, 0.8682,\n",
      "        0.9718, 0.9341, 0.6495, 0.8798, 0.9343, 0.8835, 0.9094, 0.8242, 0.8486,\n",
      "        0.8527, 0.8798, 0.9569, 0.7833, 0.9663, 0.7978, 0.9845, 0.9946, 0.9417,\n",
      "        0.9399, 0.9775, 1.0163, 0.7317, 0.5164, 0.9293, 0.9379, 0.9399, 0.8692,\n",
      "        0.8813, 0.8297, 0.8774, 0.7346, 0.8363, 0.9064, 0.9039, 0.8211, 1.6258,\n",
      "        1.2295, 0.7409, 0.9339, 0.8454, 0.8162, 0.9166, 0.8934, 0.8822, 0.9214,\n",
      "        0.9681, 0.9750, 1.0731, 0.9705, 0.7873, 0.8168, 0.9575, 0.9212, 0.7764,\n",
      "        0.7261, 0.9727, 0.8589, 1.0744, 0.7363, 0.8806, 0.7955, 0.7397, 0.8306,\n",
      "        0.7143, 0.9615, 1.2180, 0.8578, 0.9685, 0.9186, 0.9119, 1.1553, 0.9035,\n",
      "        0.8262, 0.7868, 0.7027, 1.0300, 0.7566, 0.7535, 1.0304, 1.0491, 0.8512,\n",
      "        0.7800, 0.6840, 1.2851, 0.8960, 1.0400, 0.9319, 0.9338, 0.8500, 1.0154,\n",
      "        0.7974, 0.9752, 0.9403, 0.9249, 0.8797, 0.9283, 1.0812, 0.8440, 0.8995,\n",
      "        0.9131, 1.1327, 0.8361, 1.1718, 0.8599, 0.4533, 1.2318, 1.0406, 0.9848,\n",
      "        1.3534, 0.8423, 1.0853, 0.5621, 0.9131, 1.0033, 0.9317, 0.8183, 0.9456,\n",
      "        0.9599, 0.8541, 0.9497, 0.6433], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 9.9870e-02, -3.2317e-01,  6.8363e-02, -5.8766e-02,  1.2110e-01,\n",
      "         1.2069e-01,  3.7878e-02, -6.8299e-02,  1.2847e-01, -1.4576e-01,\n",
      "        -2.6061e-01, -2.2283e-01, -7.2646e-02,  7.7130e-02, -1.5236e-01,\n",
      "         1.4501e-01, -8.6803e-02,  1.2758e-01,  7.0855e-02,  1.2942e-01,\n",
      "         1.1114e-02,  1.2189e-01,  4.2290e-01, -1.1938e-01, -2.4499e-01,\n",
      "        -1.8310e-01, -3.5784e-02,  9.7110e-02, -4.1725e-02,  4.3006e-02,\n",
      "        -3.9873e-02,  1.9056e-01, -1.7368e-01, -2.6610e-01,  1.5575e-01,\n",
      "        -1.0410e-01, -2.9871e-02, -1.6596e-01, -3.7191e-02,  5.7420e-02,\n",
      "        -1.2787e-01, -6.4371e-02,  1.4078e-01, -1.4960e-01,  8.6105e-02,\n",
      "        -7.3646e-02,  3.8477e-02,  4.8009e-02,  1.7401e-02, -6.1487e-03,\n",
      "         5.9796e-02, -4.0461e-01,  4.1867e-02, -6.3100e-02,  4.7653e-01,\n",
      "         4.4706e-02, -5.0268e-02, -5.5428e-02, -1.4167e-01, -2.0242e-01,\n",
      "        -9.0229e-02, -4.4319e-02,  1.2237e-01, -1.1922e-01,  4.2902e-02,\n",
      "         5.6122e-02,  5.3756e-02, -2.3511e-01, -9.2602e-02, -2.2381e-02,\n",
      "        -1.6358e-01, -2.8004e-01,  7.6613e-02,  6.9429e-02,  3.2618e-03,\n",
      "         1.9949e-02, -1.4122e-01, -1.9652e-01, -1.9792e-01, -1.4365e-01,\n",
      "        -1.0908e-01, -8.2894e-02,  6.4656e-03,  1.2883e-01, -2.5031e-01,\n",
      "         4.2644e-02, -3.1203e-01, -3.7331e-01, -3.3918e-02,  2.5451e-01,\n",
      "        -1.2668e-01, -3.9177e-01, -3.6442e-01,  4.8548e-02, -9.6991e-02,\n",
      "        -8.4454e-02,  4.3182e-02,  3.0259e-03,  5.8443e-02, -1.4428e-01,\n",
      "        -8.6365e-03, -2.7298e-01,  6.4045e-02,  9.6168e-03, -1.9234e-01,\n",
      "        -6.3751e-02, -1.7843e-01, -5.5509e-02, -8.0075e-02, -6.0291e-02,\n",
      "         8.7540e-02, -1.5508e-01,  1.6199e-03, -5.0368e-02, -6.7874e-02,\n",
      "        -3.1299e-01, -2.8349e-01,  5.2736e-02, -1.4398e-01,  2.1592e-04,\n",
      "        -1.5021e-01,  9.4835e-02, -1.0235e-01,  1.8478e-01, -1.0845e-01,\n",
      "         2.4664e-02, -7.3121e-02, -1.4056e-01,  1.2090e-01,  8.3751e-02,\n",
      "        -2.1287e-01, -3.8593e-01,  1.9665e-01, -1.2680e-01,  2.7514e-02,\n",
      "         8.8836e-02, -7.9561e-02,  5.4291e-02, -1.4688e-01, -3.6793e-03,\n",
      "        -1.9080e-01, -3.8755e-03, -3.5817e-03,  1.1537e-01, -1.1887e-02,\n",
      "         9.4974e-03, -1.0683e-01,  5.6153e-02,  5.2311e-02, -3.1120e-01,\n",
      "         1.0353e-01,  4.8806e-02,  3.4408e-02, -2.7698e-01,  6.7773e-02,\n",
      "        -1.5440e-01, -4.9376e-02,  2.2684e-02,  5.5332e-02,  2.4848e-02,\n",
      "        -6.2998e-02,  2.7532e-02,  1.9334e-02, -8.9973e-02,  5.8429e-02,\n",
      "        -7.3365e-02, -6.0978e-02, -1.2369e-01, -3.4426e-02, -9.3267e-02,\n",
      "         5.3325e-01, -3.6506e-01,  3.7646e-02,  4.8528e-02, -8.9443e-02,\n",
      "        -6.6578e-02, -7.3204e-04,  4.9684e-02,  7.7021e-02,  1.0819e-01,\n",
      "         5.2039e-02,  6.2392e-02,  5.3350e-02,  1.8719e-01,  2.1165e-02,\n",
      "        -5.0736e-02, -2.0717e-01, -1.0480e-01, -1.1559e-02,  2.6038e-03,\n",
      "         7.5114e-02,  6.0681e-02,  1.0899e-01,  2.6700e-02,  1.1686e-01,\n",
      "         8.0278e-02, -2.0756e-02,  9.7552e-03, -5.9420e-02,  3.9181e-02,\n",
      "        -3.9583e-01, -2.5243e-01, -3.4089e-01,  1.6555e-01,  2.7637e-02,\n",
      "         7.1462e-02, -1.7015e-01, -1.7371e-02, -1.5478e-01, -3.5762e-02,\n",
      "         1.3483e-01, -1.1290e-01,  1.0298e-01,  3.8563e-02, -1.9310e-01,\n",
      "         1.1021e-01,  2.4755e-02, -1.2090e-01,  9.2969e-02, -1.9481e-01,\n",
      "        -2.1618e-01, -2.3824e-01, -7.6058e-02,  3.5763e-02, -1.5190e-01,\n",
      "        -2.0507e-02, -3.4065e-01, -1.8004e-02, -3.1690e-02,  1.1345e-01,\n",
      "         1.1179e-01,  2.0924e-01,  7.9991e-02,  8.7546e-02,  6.9491e-02,\n",
      "        -6.9679e-02, -7.3174e-02, -1.8721e-01, -9.4037e-04, -3.5669e-01,\n",
      "        -2.4193e-01,  4.0311e-02, -8.5729e-02, -2.5243e-01, -3.1842e-02,\n",
      "         6.5128e-02, -1.5251e-01,  6.2814e-03,  6.1549e-02,  4.3034e-02,\n",
      "        -4.4199e-02, -1.3857e-01,  4.4679e-02,  5.1918e-02, -1.2191e-01,\n",
      "        -1.5983e-01], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.1003,  0.0076],\n",
      "          [-0.0450, -0.0696]],\n",
      "\n",
      "         [[-0.0128, -0.0282],\n",
      "          [-0.0633, -0.0833]],\n",
      "\n",
      "         [[-0.0310,  0.0516],\n",
      "          [ 0.0808,  0.0328]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.1228, -0.0331],\n",
      "          [ 0.0977, -0.0401]],\n",
      "\n",
      "         [[ 0.1031,  0.0576],\n",
      "          [-0.0723, -0.0696]],\n",
      "\n",
      "         [[ 0.0037, -0.0314],\n",
      "          [ 0.0012,  0.0516]]],\n",
      "\n",
      "\n",
      "        [[[-0.1395, -0.0120],\n",
      "          [ 0.1340,  0.1355]],\n",
      "\n",
      "         [[-0.0137, -0.0455],\n",
      "          [-0.1296, -0.2001]],\n",
      "\n",
      "         [[ 0.0902,  0.0555],\n",
      "          [-0.1055, -0.1690]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0736, -0.0785],\n",
      "          [ 0.1272,  0.1650]],\n",
      "\n",
      "         [[-0.0773, -0.0372],\n",
      "          [ 0.1764,  0.1347]],\n",
      "\n",
      "         [[-0.1184, -0.0551],\n",
      "          [ 0.1620,  0.2378]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0374,  0.1118],\n",
      "          [ 0.0130,  0.0664]],\n",
      "\n",
      "         [[ 0.0731,  0.0821],\n",
      "          [ 0.0867,  0.0252]],\n",
      "\n",
      "         [[-0.0780, -0.1544],\n",
      "          [ 0.0145, -0.0189]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0481,  0.1633],\n",
      "          [-0.1520,  0.0068]],\n",
      "\n",
      "         [[ 0.0651,  0.1686],\n",
      "          [ 0.0650,  0.0092]],\n",
      "\n",
      "         [[ 0.1297,  0.0702],\n",
      "          [-0.0290,  0.0471]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.0183, -0.0687],\n",
      "          [ 0.0200,  0.0377]],\n",
      "\n",
      "         [[ 0.0445,  0.1203],\n",
      "          [ 0.0238,  0.0514]],\n",
      "\n",
      "         [[-0.0659,  0.0126],\n",
      "          [-0.0072,  0.0466]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0218,  0.0200],\n",
      "          [-0.0183, -0.0963]],\n",
      "\n",
      "         [[ 0.1010, -0.0484],\n",
      "          [ 0.0985,  0.0053]],\n",
      "\n",
      "         [[ 0.0949, -0.0732],\n",
      "          [ 0.0664, -0.0604]]],\n",
      "\n",
      "\n",
      "        [[[-0.0808, -0.0370],\n",
      "          [-0.0523, -0.0015]],\n",
      "\n",
      "         [[ 0.0924,  0.0641],\n",
      "          [ 0.0133,  0.0875]],\n",
      "\n",
      "         [[ 0.0313, -0.0649],\n",
      "          [-0.0020, -0.0501]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0987,  0.0129],\n",
      "          [-0.0902, -0.0936]],\n",
      "\n",
      "         [[-0.0537, -0.0345],\n",
      "          [ 0.0166, -0.0231]],\n",
      "\n",
      "         [[-0.0656, -0.0532],\n",
      "          [-0.0174, -0.0355]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0670, -0.0223],\n",
      "          [-0.0101, -0.0760]],\n",
      "\n",
      "         [[-0.0556,  0.0123],\n",
      "          [-0.0683,  0.0254]],\n",
      "\n",
      "         [[-0.0668,  0.0301],\n",
      "          [-0.0508,  0.0845]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0446, -0.0132],\n",
      "          [ 0.0491, -0.0860]],\n",
      "\n",
      "         [[ 0.0376, -0.0461],\n",
      "          [-0.0733, -0.0693]],\n",
      "\n",
      "         [[ 0.0792, -0.0918],\n",
      "          [-0.0253, -0.0515]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.1752,  0.3092,  0.0039,  0.0281, -0.3036, -0.4768,  0.2491,  0.0834,\n",
      "        -0.2559, -0.6370,  0.2822,  0.1425, -0.1553,  0.1308, -0.0573,  0.0270,\n",
      "         0.1621, -0.0730, -0.4249,  0.1941, -0.2441, -0.1076, -0.2189, -0.2265,\n",
      "         0.2123, -0.2919, -0.2618, -0.3862,  0.6124, -0.2329, -0.5584,  0.3657,\n",
      "         0.3446,  0.1155,  0.2332, -0.1021,  0.2592, -0.3028, -0.2511,  0.2360,\n",
      "         0.5813,  0.2837,  0.1920, -0.2464,  0.0361,  0.1890,  0.2444,  0.3283,\n",
      "         0.2639,  0.2829, -0.1328,  0.1521,  0.2197, -0.3267,  0.1240,  0.4472,\n",
      "        -0.2682,  0.2963,  0.1108, -0.1258, -0.3197, -0.2352, -0.0151, -0.3492,\n",
      "        -0.2349, -0.1271, -0.3007, -0.5450,  0.1445,  0.3462, -0.3636,  0.2496,\n",
      "        -0.1180,  0.3233,  0.1735,  0.4233, -0.5257,  0.0829, -0.6033,  0.2440,\n",
      "         0.1215,  0.2756,  0.2090,  0.5761, -0.3318,  0.3568, -0.3610, -0.5593,\n",
      "        -0.2799, -0.3644,  0.2107,  0.1666, -0.1682, -0.1455, -0.2263, -0.1994,\n",
      "         0.3397, -0.2811,  0.2609,  0.3930, -0.2003, -0.4171, -0.2224,  0.3352,\n",
      "        -0.2086, -0.1341, -0.2172,  0.0193, -0.1774,  0.1268, -0.1082,  0.2391,\n",
      "        -0.3624,  0.0931, -0.3182,  0.3985,  0.2518,  0.1413,  0.3786, -0.2154,\n",
      "        -0.1468, -0.4017, -0.5776, -0.1932, -0.2433,  0.4069,  0.3258,  0.2257],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-8.0787e-02, -3.8271e-02, -4.0657e-04],\n",
      "          [-8.7700e-02, -6.1555e-02, -5.8130e-02],\n",
      "          [-1.4267e-01, -1.4026e-01, -7.6058e-02]],\n",
      "\n",
      "         [[ 7.7229e-02,  9.9864e-02,  1.1954e-01],\n",
      "          [ 9.8209e-02,  9.2407e-02,  9.5859e-02],\n",
      "          [-5.8942e-02, -4.9924e-02, -3.4386e-02]],\n",
      "\n",
      "         [[-1.2310e-01, -5.9130e-02, -5.1680e-02],\n",
      "          [-1.9678e-01, -1.3006e-01, -1.0692e-01],\n",
      "          [-2.2881e-01, -1.6345e-01, -1.5559e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.4213e-02,  6.9615e-04,  1.7695e-01],\n",
      "          [-3.5479e-02,  7.2377e-03,  8.1197e-02],\n",
      "          [ 6.2961e-02,  1.7072e-01,  2.1361e-01]],\n",
      "\n",
      "         [[ 1.3961e-01,  2.6972e-02,  4.7128e-02],\n",
      "          [ 1.7011e-03, -5.0630e-02, -7.8332e-02],\n",
      "          [ 1.7804e-01,  1.2989e-01,  2.5012e-01]],\n",
      "\n",
      "         [[ 2.1824e-01, -2.8650e-02,  1.3798e-01],\n",
      "          [-8.0578e-02, -1.3534e-01,  1.4223e-02],\n",
      "          [ 2.4458e-01,  9.8379e-02,  2.7530e-01]]],\n",
      "\n",
      "\n",
      "        [[[-3.4402e-02, -2.4299e-02, -1.5074e-02],\n",
      "          [-8.4391e-02, -6.8062e-02, -5.6867e-02],\n",
      "          [-1.2626e-01, -1.0386e-01, -5.6539e-02]],\n",
      "\n",
      "         [[ 1.7756e-02,  3.1347e-03,  5.5774e-04],\n",
      "          [ 3.7646e-02,  2.3576e-02,  3.9669e-02],\n",
      "          [-1.1163e-02, -1.6541e-02, -1.9033e-02]],\n",
      "\n",
      "         [[-1.1855e-01, -5.6323e-02, -6.0653e-02],\n",
      "          [-1.0403e-01, -8.5429e-02, -4.6692e-02],\n",
      "          [-9.0846e-02, -5.0450e-02,  3.8424e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.4661e-01,  3.1224e-04, -3.0441e-02],\n",
      "          [-2.0293e-01, -7.3053e-02, -6.8656e-04],\n",
      "          [-5.2018e-02, -2.0216e-02,  3.1367e-02]],\n",
      "\n",
      "         [[-1.2117e-01, -8.1895e-02, -5.7427e-02],\n",
      "          [ 1.7829e-02, -2.4220e-02, -5.5237e-02],\n",
      "          [ 1.1828e-01,  1.4824e-01,  1.3262e-01]],\n",
      "\n",
      "         [[ 1.3273e-01,  1.7012e-02,  4.1777e-02],\n",
      "          [-7.7441e-02, -1.2907e-01,  5.0406e-02],\n",
      "          [ 1.0190e-01,  2.9232e-03,  1.0700e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.1324e-02,  4.3485e-02,  1.8914e-02],\n",
      "          [-3.4054e-02, -1.3041e-02,  5.3626e-03],\n",
      "          [-6.4906e-02, -2.8910e-02,  1.4017e-02]],\n",
      "\n",
      "         [[-3.3145e-02, -8.6816e-02, -7.6887e-02],\n",
      "          [-2.8265e-02, -7.9255e-02, -6.5202e-02],\n",
      "          [-6.8988e-02, -8.6276e-02, -8.1212e-02]],\n",
      "\n",
      "         [[-8.0675e-02, -4.8290e-02, -4.8078e-02],\n",
      "          [-8.6476e-02, -4.5162e-02, -3.2370e-03],\n",
      "          [-1.0365e-01, -2.5526e-02, -8.1730e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.0114e-01,  4.8398e-02,  3.6177e-02],\n",
      "          [-4.6519e-02,  2.9742e-02,  2.3733e-02],\n",
      "          [-2.1506e-01, -8.6339e-02, -6.7413e-02]],\n",
      "\n",
      "         [[ 3.3906e-02, -3.4017e-02, -4.7059e-02],\n",
      "          [-1.0469e-01, -2.8022e-02, -1.0505e-01],\n",
      "          [ 1.5072e-01,  7.1657e-02,  6.4083e-02]],\n",
      "\n",
      "         [[-1.3228e-01, -1.9093e-02, -3.7954e-02],\n",
      "          [ 7.0582e-02, -1.3495e-01,  2.6652e-02],\n",
      "          [-1.1301e-01, -6.7552e-02, -5.1206e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 2.0522e-01,  1.8530e-01,  1.4539e-01],\n",
      "          [ 1.3009e-01,  1.1018e-01,  8.5507e-02],\n",
      "          [-1.4684e-03,  6.1816e-03, -5.0039e-02]],\n",
      "\n",
      "         [[ 2.4757e-02,  6.9077e-02,  1.3352e-01],\n",
      "          [-6.4801e-02, -2.5083e-03,  1.9866e-02],\n",
      "          [-6.2455e-02, -3.9403e-02, -3.2413e-02]],\n",
      "\n",
      "         [[-7.3809e-02,  9.4562e-02,  1.1292e-01],\n",
      "          [ 6.3636e-02,  2.1574e-01,  2.0152e-01],\n",
      "          [-3.2340e-02,  9.7347e-02,  1.0134e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.9185e-01, -1.0242e-01,  7.7651e-02],\n",
      "          [-1.7751e-01, -9.9137e-02,  1.6309e-01],\n",
      "          [-3.2414e-01, -1.0395e-01,  1.7304e-01]],\n",
      "\n",
      "         [[ 2.0306e-02, -1.7114e-01, -7.0319e-02],\n",
      "          [ 1.1418e-01, -1.0725e-01, -8.3508e-02],\n",
      "          [-1.8396e-02, -1.4934e-01, -5.1515e-02]],\n",
      "\n",
      "         [[-6.9598e-02, -9.8158e-02, -1.6983e-02],\n",
      "          [-8.7359e-03, -2.9679e-02, -3.7263e-02],\n",
      "          [-1.1577e-01, -8.0851e-02,  4.2041e-02]]],\n",
      "\n",
      "\n",
      "        [[[-8.3972e-02, -1.0485e-01, -1.2341e-01],\n",
      "          [-1.5587e-01, -1.7479e-01, -1.5686e-01],\n",
      "          [-1.9896e-01, -1.7763e-01, -2.0817e-01]],\n",
      "\n",
      "         [[ 2.1425e-02,  4.4663e-02,  9.2312e-03],\n",
      "          [-3.6907e-02, -7.5165e-02, -9.4419e-02],\n",
      "          [ 1.0131e-01,  7.8915e-02,  1.2768e-01]],\n",
      "\n",
      "         [[ 8.1708e-03, -9.4785e-03, -4.2173e-02],\n",
      "          [ 8.3155e-02,  6.8061e-02,  5.7638e-02],\n",
      "          [ 1.0933e-02,  2.2480e-02, -8.5575e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.2575e-01, -2.8452e-01, -1.5895e-01],\n",
      "          [-1.2692e-02,  2.5791e-02, -9.3725e-02],\n",
      "          [ 1.9736e-01,  1.9591e-01, -1.5092e-02]],\n",
      "\n",
      "         [[-1.5294e-01, -8.8362e-02, -9.4962e-02],\n",
      "          [ 3.0325e-05,  5.5921e-02, -2.8542e-02],\n",
      "          [-1.7771e-02, -3.9296e-02, -2.6691e-02]],\n",
      "\n",
      "         [[-2.3464e-01, -1.6989e-01, -1.4153e-01],\n",
      "          [-3.1524e-02,  5.1142e-02, -4.4034e-04],\n",
      "          [ 9.0693e-02,  6.9574e-02,  1.6729e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.9054e-01, -1.7202e-01, -2.1628e-01],\n",
      "          [-1.6897e-01, -1.4598e-01, -1.8073e-01],\n",
      "          [-2.0606e-01, -1.8238e-01, -2.0526e-01]],\n",
      "\n",
      "         [[-6.0288e-02, -2.0515e-02, -2.5168e-02],\n",
      "          [-1.7750e-02, -1.2280e-02,  2.3712e-02],\n",
      "          [-2.6985e-02,  2.2542e-02,  2.7123e-02]],\n",
      "\n",
      "         [[-2.1619e-01, -1.8443e-01, -2.3216e-01],\n",
      "          [-8.9039e-02, -4.7810e-02, -1.0313e-01],\n",
      "          [-9.6134e-02, -8.4365e-02, -1.1486e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.0844e-01,  3.5000e-02, -6.9519e-03],\n",
      "          [ 1.6266e-01,  5.4269e-02, -6.9182e-02],\n",
      "          [ 7.6688e-02, -6.0053e-02, -1.6393e-01]],\n",
      "\n",
      "         [[ 5.3644e-02,  6.9282e-02,  6.4564e-02],\n",
      "          [ 4.7171e-02,  2.5894e-02,  8.2424e-02],\n",
      "          [-1.2446e-01, -8.4271e-02, -1.2903e-01]],\n",
      "\n",
      "         [[-7.4799e-02, -5.4459e-02, -1.7744e-02],\n",
      "          [ 7.5733e-02, -1.2490e-02,  3.2098e-02],\n",
      "          [-2.0431e-02, -2.7437e-02,  5.2811e-03]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0162, -0.0139, -0.0102, -0.0197, -0.0195, -0.0108, -0.0066, -0.0084,\n",
      "        -0.0095, -0.0076,  0.0163, -0.0117, -0.0025, -0.0178, -0.0107, -0.0107,\n",
      "        -0.0156, -0.0128, -0.0067, -0.0172,  0.0034, -0.0070, -0.0067, -0.0143,\n",
      "         0.0189,  0.0183,  0.0207,  0.0078,  0.0118, -0.0120, -0.0075, -0.0034,\n",
      "        -0.0165,  0.0070,  0.0018,  0.0193,  0.0103, -0.0091, -0.0038,  0.0039,\n",
      "        -0.0032,  0.0189,  0.0062, -0.0099, -0.0045,  0.0039, -0.0056,  0.0097,\n",
      "         0.0200,  0.0109, -0.0098, -0.0011,  0.0116,  0.0042, -0.0158,  0.0065,\n",
      "        -0.0120, -0.0029, -0.0076,  0.0086, -0.0072,  0.0158,  0.0143,  0.0160,\n",
      "         0.0116,  0.0080,  0.0115,  0.0056,  0.0115,  0.0167,  0.0204,  0.0067,\n",
      "        -0.0030,  0.0135, -0.0163,  0.0203, -0.0094, -0.0054,  0.0040, -0.0092,\n",
      "        -0.0161, -0.0046,  0.0006,  0.0062, -0.0066, -0.0006,  0.0031, -0.0110,\n",
      "        -0.0185, -0.0129,  0.0070, -0.0021,  0.0153,  0.0025,  0.0176,  0.0152,\n",
      "         0.0162,  0.0045, -0.0115,  0.0004, -0.0167, -0.0010, -0.0156, -0.0201,\n",
      "         0.0134,  0.0069, -0.0020, -0.0173,  0.0195,  0.0070,  0.0119, -0.0201,\n",
      "        -0.0054,  0.0121, -0.0020,  0.0129, -0.0076, -0.0096,  0.0137, -0.0107,\n",
      "         0.0167, -0.0143, -0.0091, -0.0118, -0.0048, -0.0009, -0.0113,  0.0154],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.9462, 0.8350, 0.9091, 1.3468, 0.9778, 0.8124, 0.8547, 1.1184, 0.8548,\n",
      "        1.4497, 1.0268, 1.0971, 0.8618, 0.9573, 0.6949, 0.9780, 0.8721, 1.2269,\n",
      "        0.8285, 0.9836, 0.8326, 1.4308, 1.0431, 1.1673, 0.8828, 0.8013, 0.7247,\n",
      "        1.0106, 0.6897, 1.1107, 0.8145, 0.8459, 0.9190, 0.9338, 1.4309, 1.0188,\n",
      "        1.1038, 0.8513, 0.8668, 1.0949, 0.7451, 1.4507, 0.9441, 1.8503, 0.9383,\n",
      "        1.0047, 0.8306, 0.7573, 1.0938, 0.9490, 0.9586, 0.9256, 0.9087, 0.8317,\n",
      "        0.8926, 0.8805, 0.8229, 0.8409, 1.1892, 0.9586, 0.9518, 1.0093, 0.8745,\n",
      "        0.7829, 0.9382, 0.9413, 0.7890, 0.9434, 0.8658, 1.0456, 1.1110, 0.7107,\n",
      "        1.0093, 0.7860, 1.3345, 0.7267, 0.7958, 1.0432, 0.9417, 0.9675, 1.1610,\n",
      "        0.9287, 0.9357, 0.9870, 0.7552, 1.5234, 0.7177, 0.8154, 1.0188, 0.9809,\n",
      "        0.8454, 0.8253, 1.0386, 0.6111, 0.7872, 0.8846, 0.8570, 1.0256, 1.0339,\n",
      "        0.8636, 0.9224, 0.8285, 0.8287, 1.5171, 0.8783, 0.8799, 0.7392, 1.2403,\n",
      "        0.9187, 0.8126, 1.2383, 1.1241, 0.9513, 0.9206, 0.7190, 0.8752, 0.9730,\n",
      "        0.9067, 0.8999, 0.8803, 0.9581, 1.0868, 0.9984, 0.8692, 0.8730, 1.0119,\n",
      "        1.0292, 0.9368], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0114, -0.0397, -0.0938,  0.0423,  0.0230, -0.0994, -0.1816, -0.1154,\n",
      "        -0.0804, -0.0032, -0.2771, -0.1948, -0.0444, -0.1372, -0.3007, -0.0103,\n",
      "        -0.1026, -0.0713, -0.2002, -0.0640, -0.0120,  0.0573, -0.3640, -0.0927,\n",
      "        -0.0683, -0.1287, -0.1306, -0.0906, -0.3255,  0.0447, -0.1997, -0.1213,\n",
      "        -0.0906, -0.0065,  0.1618, -0.0232,  0.0417, -0.0349, -0.1390,  0.0664,\n",
      "        -0.0179,  0.0647, -0.0209,  0.1116, -0.0187,  0.0573, -0.1034, -0.1936,\n",
      "        -0.1143, -0.0381, -0.0109, -0.0548,  0.0135, -0.1366, -0.0786, -0.1050,\n",
      "        -0.2844,  0.0078, -0.0523,  0.0020, -0.0493,  0.0616, -0.0306, -0.1695,\n",
      "         0.0170, -0.0964, -0.1164,  0.0172, -0.1640, -0.1000, -0.2810, -0.2489,\n",
      "         0.0605, -0.2095,  0.0468, -0.1592, -0.0172, -0.0074, -0.0281, -0.0330,\n",
      "         0.0339, -0.0537, -0.0493, -0.2318, -0.1757,  0.0635, -0.1399, -0.0795,\n",
      "         0.0195, -0.0742, -0.1550, -0.1030, -0.1192, -0.1705, -0.1896, -0.0980,\n",
      "        -0.0878,  0.0026, -0.1621, -0.0508, -0.0845, -0.0473, -0.1694,  0.0573,\n",
      "         0.0362, -0.0949, -0.2134, -0.1302, -0.1332, -0.0655, -0.0886,  0.0408,\n",
      "        -0.0899, -0.0492, -0.1506, -0.0839,  0.0050, -0.0215, -0.1269, -0.2908,\n",
      "        -0.0499, -0.1958, -0.1081, -0.1372, -0.1414,  0.2521,  0.0407, -0.0124],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-1.3954e-01, -7.4377e-02, -2.6398e-02],\n",
      "          [-3.8592e-02,  2.9849e-02,  8.8732e-02],\n",
      "          [ 1.6171e-01,  1.5986e-01,  2.5195e-01]],\n",
      "\n",
      "         [[-1.5042e-01, -1.2555e-01, -1.5306e-02],\n",
      "          [ 4.1225e-03,  3.9198e-02,  6.9977e-02],\n",
      "          [ 6.7717e-02,  1.1954e-01,  1.9736e-01]],\n",
      "\n",
      "         [[-1.2498e-02,  2.4283e-02,  9.4864e-02],\n",
      "          [-6.1934e-03,  1.7334e-02,  1.0226e-01],\n",
      "          [ 9.6084e-02,  1.4051e-01,  2.0199e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.4952e-01, -1.6936e-01, -5.0801e-02],\n",
      "          [-1.1447e-01, -1.3425e-01, -3.1158e-02],\n",
      "          [-2.1049e-02, -1.0729e-02,  3.8591e-02]],\n",
      "\n",
      "         [[ 1.7136e-01,  1.2199e-01,  1.2241e-01],\n",
      "          [ 5.8520e-02,  1.2426e-02, -3.6031e-02],\n",
      "          [-1.0401e-01, -1.1470e-01, -1.9400e-01]],\n",
      "\n",
      "         [[ 8.3891e-02,  2.8757e-02,  1.3768e-02],\n",
      "          [-2.1728e-02, -4.0264e-02, -9.0834e-02],\n",
      "          [-3.7696e-02, -9.6658e-02, -1.1945e-01]]],\n",
      "\n",
      "\n",
      "        [[[-5.9824e-02, -1.3182e-01, -1.7791e-01],\n",
      "          [-8.9312e-03,  5.0378e-02, -8.0582e-03],\n",
      "          [-9.0883e-02, -1.2961e-01, -2.0127e-01]],\n",
      "\n",
      "         [[-2.7028e-01, -2.8241e-01, -2.0904e-01],\n",
      "          [-1.1038e-01, -9.3724e-02, -1.0234e-02],\n",
      "          [-2.9623e-01, -2.5739e-01, -1.6146e-01]],\n",
      "\n",
      "         [[-3.5562e-01, -3.0030e-01, -2.6979e-01],\n",
      "          [-9.3907e-02, -2.1575e-02,  2.0419e-02],\n",
      "          [-4.4161e-01, -4.0996e-01, -3.2350e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.2931e-01, -1.2556e-01, -2.2786e-01],\n",
      "          [-1.1982e-01, -4.6204e-02, -2.3893e-01],\n",
      "          [-2.1296e-01, -1.6403e-01, -3.1677e-01]],\n",
      "\n",
      "         [[ 2.1742e-02, -1.0599e-02, -5.2149e-02],\n",
      "          [-9.9378e-03, -1.1465e-02, -4.3241e-02],\n",
      "          [ 6.7132e-02,  4.6290e-02,  6.8796e-02]],\n",
      "\n",
      "         [[-1.3468e-02, -4.0824e-02, -5.5596e-02],\n",
      "          [-7.2666e-02, -3.6959e-02, -8.2171e-02],\n",
      "          [ 2.8615e-02,  1.5627e-02,  1.9260e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 5.5116e-03,  3.1535e-02,  3.2725e-03],\n",
      "          [-5.4366e-02, -8.7304e-02, -9.3522e-02],\n",
      "          [ 1.4181e-02, -1.5372e-02,  5.4336e-02]],\n",
      "\n",
      "         [[-1.4621e-02, -1.8745e-02,  5.0406e-02],\n",
      "          [ 7.3547e-03, -2.4772e-02, -2.1554e-02],\n",
      "          [-3.4921e-02, -4.6004e-02,  3.0114e-02]],\n",
      "\n",
      "         [[ 3.7475e-02,  3.8595e-02,  2.2013e-02],\n",
      "          [ 2.1111e-03, -1.7613e-02,  2.0490e-05],\n",
      "          [-9.1730e-03,  5.6126e-03,  3.5240e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.2131e-02, -9.1213e-02, -8.2826e-02],\n",
      "          [-7.7270e-02, -1.0943e-01, -9.8325e-02],\n",
      "          [-5.1283e-02, -8.3431e-02, -7.4984e-02]],\n",
      "\n",
      "         [[-3.1740e-01, -2.3141e-01, -3.1944e-01],\n",
      "          [-7.7661e-03,  4.9230e-02, -2.9144e-02],\n",
      "          [-2.5463e-01, -1.7317e-01, -2.6298e-01]],\n",
      "\n",
      "         [[-2.2126e-01, -1.8510e-01, -3.7784e-01],\n",
      "          [-9.2605e-02, -5.0292e-02, -1.9528e-01],\n",
      "          [-3.3326e-01, -2.8472e-01, -4.4613e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 1.7313e-02,  3.3045e-02, -5.9624e-03],\n",
      "          [ 6.3844e-02,  8.3528e-02,  4.2287e-02],\n",
      "          [ 8.1761e-02,  1.0698e-01,  3.1239e-02]],\n",
      "\n",
      "         [[-1.8881e-01, -1.3960e-01, -6.9538e-02],\n",
      "          [-9.0657e-02, -4.1228e-02, -2.6477e-02],\n",
      "          [-1.0761e-01, -1.1126e-02,  1.5284e-02]],\n",
      "\n",
      "         [[-9.1813e-02, -4.7018e-02,  4.0840e-03],\n",
      "          [-4.1372e-02,  1.9813e-02, -1.9837e-02],\n",
      "          [-1.4996e-01, -1.0319e-01, -7.3568e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.9607e-01, -1.2791e-01, -1.7649e-01],\n",
      "          [-2.2786e-01, -7.5567e-02, -1.3192e-01],\n",
      "          [-3.1843e-01, -1.5249e-01, -1.7162e-01]],\n",
      "\n",
      "         [[-1.4510e-01, -1.6508e-01, -2.2290e-01],\n",
      "          [-7.2942e-02, -1.2886e-01, -1.4526e-01],\n",
      "          [ 6.7889e-02, -1.4514e-04, -5.5304e-02]],\n",
      "\n",
      "         [[-9.1025e-02, -1.4198e-01, -1.8342e-01],\n",
      "          [-9.2802e-02, -1.5917e-01, -2.1939e-01],\n",
      "          [-1.1570e-01, -1.2017e-01, -2.0440e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 6.6935e-02,  5.6914e-02,  9.5015e-02],\n",
      "          [ 2.0439e-02, -1.4804e-02, -1.1540e-02],\n",
      "          [ 7.9970e-02,  3.3918e-02,  1.0224e-01]],\n",
      "\n",
      "         [[ 1.0541e-02,  5.9330e-03,  7.0439e-02],\n",
      "          [ 4.7941e-02,  9.6167e-04,  4.5973e-02],\n",
      "          [-3.0367e-02, -1.4202e-02, -4.7116e-03]],\n",
      "\n",
      "         [[ 3.0919e-02,  4.2567e-02,  7.9567e-02],\n",
      "          [ 3.8915e-02,  2.4127e-02,  5.7274e-02],\n",
      "          [ 2.9065e-02, -1.5709e-02,  4.3691e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.6262e-01, -1.9661e-01, -9.4795e-02],\n",
      "          [-1.5833e-01, -2.6061e-01, -1.7447e-01],\n",
      "          [-7.6300e-02, -1.5291e-01, -1.1137e-01]],\n",
      "\n",
      "         [[-1.6039e-01, -7.8571e-02, -2.0333e-01],\n",
      "          [-3.9820e-02,  6.9257e-02, -1.9641e-02],\n",
      "          [-2.0381e-01, -1.3179e-01, -1.9977e-01]],\n",
      "\n",
      "         [[-7.8281e-02, -9.6182e-02, -1.4301e-01],\n",
      "          [-8.6897e-02, -5.1559e-02, -1.5890e-01],\n",
      "          [-1.5980e-01, -9.4327e-02, -1.9898e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 1.8252e-02,  4.9802e-02,  5.9305e-02],\n",
      "          [ 1.6490e-01,  1.2073e-01,  2.0832e-01],\n",
      "          [ 7.1879e-02,  1.0232e-02,  1.1535e-01]],\n",
      "\n",
      "         [[ 9.0451e-02,  5.8867e-02,  1.1872e-01],\n",
      "          [ 1.8651e-01,  2.1085e-01,  2.0753e-01],\n",
      "          [ 1.8815e-01,  1.3612e-01,  1.7376e-01]],\n",
      "\n",
      "         [[ 1.8409e-01,  1.4667e-01,  1.3386e-01],\n",
      "          [ 1.7137e-01,  2.3414e-01,  2.0422e-01],\n",
      "          [ 3.8286e-01,  2.3942e-01,  3.0836e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.6589e-02,  2.3453e-02,  2.1892e-01],\n",
      "          [ 2.9652e-02, -3.1236e-02,  4.2026e-02],\n",
      "          [ 7.6742e-02,  1.1610e-02,  2.2476e-01]],\n",
      "\n",
      "         [[ 3.3230e-02,  3.6937e-02, -3.3107e-03],\n",
      "          [-5.4919e-02, -7.6017e-02, -7.5064e-02],\n",
      "          [-1.1401e-01, -1.1387e-01, -1.0527e-01]],\n",
      "\n",
      "         [[ 1.0296e-02,  8.4816e-03,  7.5557e-04],\n",
      "          [-3.1620e-03,  1.5880e-02, -4.7524e-04],\n",
      "          [ 4.5020e-02,  3.1669e-02, -5.3632e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0253, -0.0009,  0.0084, -0.0206, -0.0170, -0.0171, -0.0204, -0.0024,\n",
      "        -0.0289,  0.0108, -0.0116, -0.0140,  0.0109, -0.0163, -0.0126, -0.0187,\n",
      "         0.0082,  0.0193,  0.0229, -0.0286, -0.0238, -0.0019, -0.0013, -0.0283,\n",
      "         0.0207,  0.0054, -0.0065,  0.0215, -0.0234,  0.0250, -0.0071,  0.0169,\n",
      "         0.0077, -0.0117, -0.0228,  0.0219,  0.0150, -0.0229, -0.0284, -0.0007,\n",
      "         0.0226, -0.0108, -0.0063, -0.0134,  0.0069,  0.0215, -0.0075,  0.0200,\n",
      "        -0.0212,  0.0142, -0.0139, -0.0226, -0.0229,  0.0113, -0.0179, -0.0078,\n",
      "         0.0288,  0.0203,  0.0173, -0.0237, -0.0183,  0.0235,  0.0200,  0.0278,\n",
      "        -0.0224, -0.0220, -0.0284, -0.0278,  0.0050, -0.0189, -0.0040, -0.0131,\n",
      "         0.0228, -0.0181,  0.0068,  0.0245, -0.0198, -0.0224, -0.0020, -0.0130,\n",
      "         0.0214, -0.0261,  0.0291,  0.0128, -0.0181, -0.0115,  0.0268, -0.0107,\n",
      "        -0.0028,  0.0105, -0.0022,  0.0227, -0.0025,  0.0155,  0.0118, -0.0245,\n",
      "        -0.0282,  0.0047,  0.0052, -0.0179, -0.0138, -0.0108,  0.0282,  0.0185,\n",
      "        -0.0045,  0.0111,  0.0048, -0.0048, -0.0073, -0.0264,  0.0280,  0.0283,\n",
      "        -0.0058,  0.0022, -0.0279, -0.0172,  0.0181, -0.0008,  0.0118, -0.0069,\n",
      "         0.0255,  0.0057,  0.0015,  0.0054, -0.0293, -0.0265,  0.0055, -0.0117],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1.5030, 1.0833, 0.7510, 1.0021, 0.7334, 0.6891, 0.9323, 0.8581, 0.7621,\n",
      "        1.0681, 0.9444, 0.7287, 0.8552, 0.7168, 0.8207, 0.7131, 0.8675, 1.0416,\n",
      "        1.0499, 0.9237, 0.7328, 0.9339, 0.7663, 0.7924, 0.9175, 0.8140, 0.7381,\n",
      "        0.6984, 1.2161, 1.1304, 0.7974, 1.0446, 0.7302, 0.8064, 0.7215, 1.0719,\n",
      "        1.3417, 1.3394, 0.8267, 1.2378, 0.8888, 0.7177, 1.1193, 0.7992, 0.9537,\n",
      "        1.3265, 0.9316, 0.8908, 0.9391, 0.7335, 1.0096, 0.9340, 0.9677, 0.7318,\n",
      "        0.9222, 0.7316, 0.7319, 0.8738, 0.8062, 0.6978, 0.9329, 0.8403, 0.9446,\n",
      "        0.7528, 0.8862, 1.4631, 0.7627, 0.7965, 0.7501, 0.7401, 0.8216, 1.3045,\n",
      "        0.7286, 0.6924, 0.8510, 1.5958, 0.8064, 0.7918, 0.8245, 0.9212, 0.7573,\n",
      "        0.7335, 0.7831, 0.9933, 0.9929, 0.7141, 0.8576, 0.7143, 1.0214, 0.7091,\n",
      "        0.7840, 0.9044, 1.4440, 0.8355, 0.8181, 0.7665, 0.9240, 0.9222, 0.7109,\n",
      "        0.7055, 0.7426, 0.8376, 0.9176, 0.7981, 1.5552, 0.9052, 0.7889, 0.9472,\n",
      "        0.8942, 0.8276, 0.9427, 1.0816, 1.0092, 0.7587, 0.9212, 0.7313, 0.8159,\n",
      "        0.7078, 0.6867, 1.0529, 0.7469, 0.9358, 0.9714, 1.1140, 1.1367, 0.9286,\n",
      "        0.8076, 0.9328], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.1687, -0.0872,  0.0392, -0.2031, -0.1621, -0.2750, -0.1753,  0.1059,\n",
      "        -0.1280, -0.1242,  0.1221, -0.2043, -0.0195, -0.3020, -0.2443, -0.2747,\n",
      "        -0.0535,  0.0481,  0.1651, -0.0992, -0.0142, -0.1621, -0.1949, -0.3570,\n",
      "        -0.2662,  0.1105,  0.0262, -0.1918,  0.1393,  0.1103, -0.2616, -0.0040,\n",
      "        -0.1361, -0.0135, -0.1478,  0.1343,  0.0555,  0.1449, -0.3883,  0.2604,\n",
      "        -0.0637, -0.1879, -0.0513, -0.1442,  0.0766,  0.3767, -0.3917,  0.0379,\n",
      "         0.1734, -0.2064,  0.0034,  0.0214, -0.0433, -0.3404, -0.3560, -0.1938,\n",
      "        -0.2315, -0.3037,  0.0818, -0.3288, -0.3122, -0.1847,  0.1543, -0.3475,\n",
      "        -0.0753,  0.5012, -0.1751, -0.0138, -0.1893,  0.0128, -0.0681, -0.0232,\n",
      "        -0.1769, -0.3147,  0.0467,  0.2670, -0.1781,  0.0477, -0.1638, -0.1119,\n",
      "        -0.0725, -0.3597, -0.2705, -0.0813,  0.0427, -0.0485, -0.1773, -0.2946,\n",
      "         0.0055, -0.1712,  0.0036, -0.1338,  0.5023,  0.1060, -0.1087, -0.1773,\n",
      "        -0.3301, -0.2744, -0.1759, -0.2533, -0.0472,  0.0111,  0.0645, -0.1699,\n",
      "         0.0989, -0.1893, -0.0976, -0.1009, -0.1407,  0.0902, -0.3851, -0.0592,\n",
      "         0.0058, -0.0621, -0.1085, -0.3048, -0.3725, -0.1251, -0.2387, -0.0099,\n",
      "        -0.1231, -0.2560, -0.0301,  0.0951,  0.0709,  0.1412, -0.1023, -0.1589],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-2.4350e-01, -1.5753e-01, -2.3913e-01],\n",
      "          [-1.9285e-02,  6.3227e-02, -4.1356e-02],\n",
      "          [-1.3276e-01, -2.9883e-02, -1.3222e-01]],\n",
      "\n",
      "         [[ 1.7511e-01,  1.1126e-01,  7.9091e-02],\n",
      "          [ 1.3282e-01,  1.0306e-01,  9.0250e-02],\n",
      "          [ 1.4523e-01,  1.0125e-01,  1.9556e-02]],\n",
      "\n",
      "         [[-2.0068e-02,  5.7899e-02,  5.9140e-03],\n",
      "          [ 3.0758e-02,  9.4656e-02,  4.7158e-02],\n",
      "          [-3.4393e-02,  4.7624e-02,  2.8867e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.4075e-02,  5.2614e-02,  8.5369e-02],\n",
      "          [-3.5009e-02,  1.6847e-02, -1.9556e-02],\n",
      "          [-5.2006e-02,  1.0116e-02, -1.9499e-02]],\n",
      "\n",
      "         [[-4.2401e-02,  4.4842e-02, -1.8315e-02],\n",
      "          [ 5.2185e-02,  1.5108e-01,  4.0905e-02],\n",
      "          [-2.6404e-02,  3.8484e-02, -2.2705e-02]],\n",
      "\n",
      "         [[-1.5891e-01, -1.2152e-01, -1.5189e-01],\n",
      "          [-9.6668e-02, -7.5668e-02, -7.2140e-02],\n",
      "          [-7.8650e-02, -1.3699e-02, -5.4039e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 1.7067e-01,  1.6009e-01,  1.4524e-01],\n",
      "          [ 1.6948e-01,  1.1716e-01,  1.2360e-01],\n",
      "          [-5.9687e-02, -1.2704e-01, -1.3144e-01]],\n",
      "\n",
      "         [[ 5.9716e-02,  1.6017e-01,  1.4470e-01],\n",
      "          [-1.6942e-01, -4.1548e-02, -7.0204e-02],\n",
      "          [ 9.3637e-02,  2.0133e-01,  1.9834e-01]],\n",
      "\n",
      "         [[ 1.4701e-02, -3.8828e-02, -8.4938e-02],\n",
      "          [ 9.5775e-02,  7.3123e-02,  6.4416e-02],\n",
      "          [-6.2366e-02, -5.0921e-02, -1.6282e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.0879e-01,  1.3042e-01,  2.7727e-02],\n",
      "          [ 1.5536e-01,  1.9266e-01,  8.1209e-02],\n",
      "          [ 7.3549e-02,  8.4836e-02, -1.6029e-02]],\n",
      "\n",
      "         [[ 1.8135e-03, -3.2561e-02, -7.5201e-02],\n",
      "          [ 1.3450e-01,  1.0513e-01,  8.2126e-02],\n",
      "          [-4.4662e-02, -3.5683e-02, -1.3247e-01]],\n",
      "\n",
      "         [[-3.3411e-01, -3.5018e-01, -3.2354e-01],\n",
      "          [-1.1531e-01, -9.2539e-02, -3.0582e-02],\n",
      "          [-3.4539e-01, -3.0870e-01, -3.3868e-01]]],\n",
      "\n",
      "\n",
      "        [[[-5.1983e-02,  3.3411e-03,  6.8700e-02],\n",
      "          [ 6.6040e-02,  1.5296e-01,  1.5937e-01],\n",
      "          [ 6.5984e-02,  1.1144e-01,  1.4795e-01]],\n",
      "\n",
      "         [[ 4.2619e-02,  4.0704e-02,  2.1026e-02],\n",
      "          [ 3.7663e-02,  4.6261e-02,  3.4065e-02],\n",
      "          [ 1.3079e-01,  7.8872e-02,  3.8236e-02]],\n",
      "\n",
      "         [[ 2.8830e-04,  1.6127e-02, -2.2297e-02],\n",
      "          [ 1.4414e-02,  7.6920e-02,  3.8440e-02],\n",
      "          [-1.6238e-02,  3.8384e-04, -1.9327e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1632e-02, -1.4399e-02, -1.4994e-02],\n",
      "          [-1.6409e-02, -5.4053e-02, -6.4102e-02],\n",
      "          [ 1.7222e-02, -2.4824e-02, -3.8048e-02]],\n",
      "\n",
      "         [[ 5.0571e-05,  1.2690e-02,  4.1540e-02],\n",
      "          [ 3.1131e-02,  3.6772e-02,  3.9967e-02],\n",
      "          [-2.7793e-02,  1.1045e-02,  4.0265e-03]],\n",
      "\n",
      "         [[-1.0274e-01, -5.3174e-02, -3.7002e-02],\n",
      "          [-2.0483e-02,  2.5224e-02, -2.0058e-02],\n",
      "          [-1.2535e-01, -5.1801e-02, -7.7849e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-7.7579e-02, -2.1403e-02, -5.8280e-02],\n",
      "          [ 1.8336e-02,  9.4572e-02,  4.5558e-02],\n",
      "          [ 2.1839e-02,  6.8497e-02,  6.6774e-02]],\n",
      "\n",
      "         [[ 7.4569e-02,  5.3002e-02,  3.2011e-02],\n",
      "          [ 1.2498e-01,  1.1537e-01,  1.1048e-01],\n",
      "          [ 1.3843e-01,  1.1442e-01,  6.0773e-02]],\n",
      "\n",
      "         [[-8.3595e-03, -1.1683e-02, -1.0735e-02],\n",
      "          [ 1.3483e-02, -5.8551e-03,  2.6859e-02],\n",
      "          [-6.7180e-02, -2.9283e-02, -4.8603e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.3716e-02, -8.2327e-02, -3.6806e-02],\n",
      "          [-9.1412e-02, -8.0888e-02, -5.8422e-02],\n",
      "          [-5.5617e-02, -1.0792e-01, -7.8612e-02]],\n",
      "\n",
      "         [[-4.4044e-02,  4.2472e-03, -2.7240e-02],\n",
      "          [-3.0064e-02,  1.6902e-02, -4.2641e-02],\n",
      "          [-4.1653e-02, -3.5962e-02, -5.8953e-02]],\n",
      "\n",
      "         [[-9.4936e-02, -9.3472e-02, -6.6067e-02],\n",
      "          [-2.1166e-02, -4.1710e-02, -2.8181e-02],\n",
      "          [-7.6134e-02, -3.8619e-02, -7.2866e-02]]],\n",
      "\n",
      "\n",
      "        [[[-4.5809e-02,  4.7197e-02,  5.6610e-02],\n",
      "          [ 4.7910e-02,  1.0294e-01,  1.1615e-01],\n",
      "          [ 5.2013e-02,  1.2640e-01,  1.5691e-01]],\n",
      "\n",
      "         [[-4.0938e-02, -1.2334e-02, -7.0725e-02],\n",
      "          [ 3.7915e-03, -2.7746e-02, -5.6123e-03],\n",
      "          [ 4.5685e-02,  3.6814e-02,  2.1748e-03]],\n",
      "\n",
      "         [[-7.6597e-02, -9.6280e-03, -3.6897e-02],\n",
      "          [ 5.8360e-03,  5.5350e-02,  2.7029e-02],\n",
      "          [-5.9005e-02,  2.9103e-02, -1.1000e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.6798e-02, -2.7743e-02, -4.8855e-02],\n",
      "          [-1.9918e-02, -3.6774e-02, -4.0967e-02],\n",
      "          [ 4.8742e-03, -1.8632e-02, -2.2058e-02]],\n",
      "\n",
      "         [[-3.8208e-02,  2.6743e-02, -3.3090e-02],\n",
      "          [ 4.1209e-03, -1.4402e-03,  3.5513e-03],\n",
      "          [-7.3184e-02,  1.1040e-02, -5.1715e-02]],\n",
      "\n",
      "         [[-4.5045e-02, -4.3471e-02, -4.7258e-02],\n",
      "          [-1.0104e-02,  5.7873e-02,  2.6890e-02],\n",
      "          [-9.0274e-02, -3.5443e-02, -3.8539e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 9.1538e-02,  8.1535e-02, -7.6051e-02],\n",
      "          [ 6.0530e-02,  3.6946e-03, -1.1106e-01],\n",
      "          [-2.0036e-01, -1.9724e-01, -3.8809e-01]],\n",
      "\n",
      "         [[ 2.1389e-01,  2.7490e-01,  2.2308e-01],\n",
      "          [ 2.4882e-01,  3.1048e-01,  2.2564e-01],\n",
      "          [ 1.1492e-01,  1.6360e-01,  1.2435e-01]],\n",
      "\n",
      "         [[-1.3594e-01, -5.1874e-02, -1.3854e-01],\n",
      "          [-1.5676e-01, -9.2342e-02, -1.2021e-01],\n",
      "          [-1.0763e-01,  1.8610e-02, -4.3201e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 6.5550e-02,  1.2728e-01,  1.0932e-01],\n",
      "          [ 6.3611e-02,  1.5755e-01,  1.2478e-01],\n",
      "          [ 1.2644e-01,  1.6870e-01,  1.4959e-01]],\n",
      "\n",
      "         [[-1.5530e-01, -4.4794e-02, -1.5202e-01],\n",
      "          [-6.2587e-02,  2.4198e-02, -4.6551e-02],\n",
      "          [-9.2495e-02,  6.4891e-02, -9.3051e-02]],\n",
      "\n",
      "         [[-3.7431e-01, -4.5024e-01, -4.2370e-01],\n",
      "          [-4.3129e-01, -4.3634e-01, -5.0690e-01],\n",
      "          [-2.4615e-01, -3.3361e-01, -3.4218e-01]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0236,  0.0182, -0.0190,  0.0116, -0.0138,  0.0029,  0.0034, -0.0250,\n",
      "        -0.0204, -0.0282,  0.0119,  0.0269, -0.0108, -0.0230, -0.0223,  0.0277,\n",
      "         0.0292,  0.0146,  0.0239, -0.0291,  0.0050, -0.0213, -0.0048,  0.0023,\n",
      "         0.0146, -0.0020,  0.0024,  0.0251, -0.0231, -0.0235,  0.0016,  0.0137,\n",
      "        -0.0046, -0.0028, -0.0257,  0.0141,  0.0121, -0.0048, -0.0087,  0.0018,\n",
      "        -0.0246,  0.0110,  0.0066,  0.0140,  0.0267,  0.0275,  0.0073, -0.0271,\n",
      "        -0.0232,  0.0149,  0.0214,  0.0082,  0.0081, -0.0236, -0.0258, -0.0280,\n",
      "        -0.0094, -0.0222, -0.0111, -0.0289, -0.0081, -0.0183,  0.0285,  0.0015,\n",
      "         0.0268,  0.0183,  0.0086, -0.0279,  0.0195, -0.0096, -0.0096, -0.0075,\n",
      "        -0.0034,  0.0226, -0.0291,  0.0224, -0.0265, -0.0173,  0.0085, -0.0246,\n",
      "         0.0280, -0.0252, -0.0100, -0.0266,  0.0092,  0.0165, -0.0140, -0.0073,\n",
      "         0.0223, -0.0017, -0.0147,  0.0086, -0.0187,  0.0141, -0.0165, -0.0257,\n",
      "        -0.0149,  0.0018, -0.0271, -0.0286,  0.0031,  0.0115,  0.0207, -0.0112,\n",
      "         0.0286,  0.0230, -0.0145, -0.0202, -0.0041, -0.0117,  0.0260, -0.0049,\n",
      "         0.0036,  0.0005, -0.0130,  0.0203, -0.0238,  0.0057,  0.0119,  0.0040,\n",
      "         0.0030,  0.0176,  0.0219, -0.0009, -0.0059, -0.0006, -0.0056, -0.0180],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.7793, 0.7931, 0.6602, 0.7612, 0.9100, 0.4514, 0.7127, 0.7322, 0.5217,\n",
      "        0.7169, 0.6941, 0.3751, 0.8002, 0.7019, 0.5877, 0.5805, 0.5916, 0.7471,\n",
      "        0.7961, 0.8152, 0.6838, 0.7346, 0.6620, 0.6608, 0.7262, 0.7530, 0.4361,\n",
      "        0.4248, 0.5984, 0.6662, 0.6720, 0.8872, 0.6621, 0.7787, 0.7450, 0.7950,\n",
      "        0.6665, 0.6693, 0.9075, 0.6227, 0.7561, 0.4939, 0.7492, 0.7092, 0.7901,\n",
      "        0.4213, 0.6224, 0.7369, 0.5813, 0.6571, 0.7199, 0.7053, 0.6817, 0.4609,\n",
      "        0.3695, 0.8518, 0.7641, 0.5938, 0.7031, 0.6741, 0.8868, 0.7509, 0.7456,\n",
      "        0.4377, 0.4956, 0.5578, 0.8466, 0.4437, 0.6451, 0.7636, 0.6079, 0.5680,\n",
      "        0.6963, 0.5958, 0.5405, 0.6886, 0.6678, 0.6883, 0.7151, 0.6778, 0.6959,\n",
      "        0.7012, 0.7406, 0.7727, 0.7093, 0.8742, 0.7660, 0.6675, 0.6864, 0.4155,\n",
      "        0.6367, 0.8289, 0.6482, 0.5938, 0.6608, 0.7270, 0.6589, 0.7802, 0.7029,\n",
      "        0.4340, 0.7750, 0.7111, 0.6973, 0.8875, 0.6523, 0.5759, 0.6763, 0.6545,\n",
      "        0.6263, 0.6842, 0.5957, 0.9559, 0.6766, 0.7353, 0.6614, 0.6935, 0.7501,\n",
      "        0.9176, 0.3960, 0.7304, 0.8653, 0.9493, 0.6952, 0.6416, 0.6417, 0.7528,\n",
      "        0.6705, 0.7868], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.2248, -0.3500, -0.2933, -0.2737, -0.1109, -0.3471, -0.3256, -0.3424,\n",
      "        -0.4154, -0.2169, -0.3566, -0.3964, -0.2182, -0.2876, -0.4307, -0.4840,\n",
      "        -0.4047, -0.2523, -0.1668, -0.1777, -0.3944, -0.2663, -0.3294, -0.3574,\n",
      "        -0.2331, -0.2800, -0.4071, -0.5722, -0.2812, -0.3257, -0.3823, -0.0728,\n",
      "        -0.1832, -0.1867, -0.3513, -0.1269, -0.3145, -0.3019, -0.0294, -0.3086,\n",
      "        -0.1717, -0.4203, -0.3271, -0.3268, -0.2007, -0.2981, -0.3967, -0.3030,\n",
      "        -0.4322, -0.2969, -0.3311, -0.4148, -0.2726, -0.4169, -0.4674, -0.0173,\n",
      "        -0.2354, -0.4672, -0.2900, -0.3321,  0.0120, -0.2906, -0.1743, -0.4924,\n",
      "        -0.2201, -0.4327, -0.1264, -0.3898, -0.3148, -0.2583, -0.1600, -0.2999,\n",
      "        -0.2442, -0.4461, -0.3581, -0.3981, -0.4284, -0.3041, -0.3958, -0.3299,\n",
      "        -0.2860, -0.3973, -0.1780, -0.2031, -0.2825, -0.0454, -0.1734, -0.2903,\n",
      "        -0.3199, -0.3080, -0.3817, -0.0988, -0.4645, -0.4133, -0.2130, -0.3243,\n",
      "        -0.3624, -0.1717, -0.4319, -0.3279, -0.2845, -0.3605, -0.2484, -0.0423,\n",
      "        -0.1158, -0.1102, -0.3578, -0.3674, -0.1942, -0.4003, -0.2760, -0.0154,\n",
      "        -0.2603, -0.2403, -0.1664, -0.3388, -0.2681, -0.1114, -0.3964, -0.3705,\n",
      "        -0.1699, -0.0935, -0.2921, -0.3510, -0.6526, -0.2090, -0.2774, -0.1280],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.0565, -0.0019],\n",
      "          [ 0.0913, -0.0015]],\n",
      "\n",
      "         [[-0.2127, -0.1640],\n",
      "          [-0.1894, -0.1822]],\n",
      "\n",
      "         [[ 0.0821,  0.0850],\n",
      "          [ 0.0770,  0.0206]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0255,  0.0217],\n",
      "          [-0.0012,  0.0390]],\n",
      "\n",
      "         [[ 0.0359, -0.0390],\n",
      "          [-0.0393, -0.0625]],\n",
      "\n",
      "         [[-0.0947, -0.0965],\n",
      "          [-0.0545, -0.0309]]],\n",
      "\n",
      "\n",
      "        [[[-0.0375, -0.0061],\n",
      "          [-0.1408, -0.0964]],\n",
      "\n",
      "         [[ 0.2824,  0.1604],\n",
      "          [ 0.0773,  0.0445]],\n",
      "\n",
      "         [[ 0.2971,  0.3357],\n",
      "          [ 0.2922,  0.3664]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.1907, -0.0978],\n",
      "          [-0.0107,  0.0290]],\n",
      "\n",
      "         [[-0.0317,  0.0634],\n",
      "          [-0.0016,  0.0407]],\n",
      "\n",
      "         [[-0.1822, -0.1681],\n",
      "          [-0.1219, -0.1247]]],\n",
      "\n",
      "\n",
      "        [[[-0.1367, -0.0679],\n",
      "          [-0.1291, -0.0786]],\n",
      "\n",
      "         [[-0.2574, -0.2992],\n",
      "          [-0.3168, -0.2982]],\n",
      "\n",
      "         [[-0.0887, -0.1133],\n",
      "          [-0.1301, -0.1695]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.1452,  0.2209],\n",
      "          [ 0.2264,  0.1351]],\n",
      "\n",
      "         [[ 0.0690,  0.1081],\n",
      "          [ 0.0662,  0.0908]],\n",
      "\n",
      "         [[ 0.1092,  0.0936],\n",
      "          [ 0.1054,  0.1481]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.1839, -0.1477],\n",
      "          [-0.2329, -0.1521]],\n",
      "\n",
      "         [[-0.1185, -0.1638],\n",
      "          [-0.1909, -0.1390]],\n",
      "\n",
      "         [[-0.0504, -0.0082],\n",
      "          [-0.1231, -0.0710]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.1978,  0.1943],\n",
      "          [ 0.1560,  0.1770]],\n",
      "\n",
      "         [[-0.0200,  0.0123],\n",
      "          [ 0.0173,  0.0228]],\n",
      "\n",
      "         [[ 0.1439,  0.0445],\n",
      "          [ 0.1560,  0.0537]]],\n",
      "\n",
      "\n",
      "        [[[-0.2091, -0.2159],\n",
      "          [-0.1414, -0.1909]],\n",
      "\n",
      "         [[-0.2837, -0.2803],\n",
      "          [-0.2339, -0.3168]],\n",
      "\n",
      "         [[-0.1869, -0.1075],\n",
      "          [-0.1847, -0.1212]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.1754,  0.2579],\n",
      "          [ 0.2005,  0.2175]],\n",
      "\n",
      "         [[ 0.1360,  0.1282],\n",
      "          [ 0.0668,  0.1538]],\n",
      "\n",
      "         [[ 0.2247,  0.2230],\n",
      "          [ 0.1969,  0.1360]]],\n",
      "\n",
      "\n",
      "        [[[ 0.2264,  0.1079],\n",
      "          [ 0.1061,  0.1694]],\n",
      "\n",
      "         [[ 0.2755,  0.2239],\n",
      "          [ 0.1831,  0.2371]],\n",
      "\n",
      "         [[ 0.0093,  0.0714],\n",
      "          [ 0.0591,  0.0315]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0324,  0.0479],\n",
      "          [-0.0281,  0.0361]],\n",
      "\n",
      "         [[-0.2091, -0.2009],\n",
      "          [-0.1796, -0.2072]],\n",
      "\n",
      "         [[-0.0815, -0.1062],\n",
      "          [-0.0552, -0.1153]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0077, -0.1559, -0.9247,  1.3316, -0.8928,  0.2392, -0.7287,  1.4983,\n",
      "         2.1760,  0.4737, -0.1221, -0.2015,  0.9374,  0.8579, -1.0220,  0.4508,\n",
      "         1.5121, -0.2778, -0.2189,  0.1826, -0.7417,  0.3152, -1.0769, -1.4502,\n",
      "        -0.5360,  0.3163,  0.6162,  0.4896,  0.0238, -0.2415, -0.1335, -0.8612,\n",
      "        -1.4895, -1.9434, -0.5702,  0.0493, -0.0261,  0.0982, -1.3440,  0.1018,\n",
      "         2.1638, -0.7221,  1.5881, -0.6282,  0.7569,  0.0680,  1.9618, -1.1384,\n",
      "        -0.2800, -1.4469, -0.3658,  0.5804, -0.3077, -0.0830,  0.0299, -0.6329,\n",
      "         0.6013, -2.5828, -1.9668,  0.2527, -0.4881, -0.1372,  0.1504, -0.0371],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 3.7497e-02,  5.4246e-03, -9.9850e-03],\n",
      "          [ 2.9292e-02,  3.7559e-02,  1.9092e-02],\n",
      "          [ 3.2284e-02,  3.2740e-03, -2.9416e-02]],\n",
      "\n",
      "         [[ 5.2286e-02,  2.4768e-02,  3.4703e-02],\n",
      "          [ 5.3861e-03,  2.3801e-02,  4.9947e-02],\n",
      "          [ 3.4437e-02,  5.3058e-03,  2.2626e-02]],\n",
      "\n",
      "         [[ 8.9338e-02,  1.3322e-01,  1.6407e-01],\n",
      "          [ 3.4356e-02,  7.0987e-02,  1.2458e-01],\n",
      "          [ 4.7642e-02,  7.5467e-02,  8.9803e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.1446e-02, -4.4091e-02, -6.8369e-02],\n",
      "          [ 3.6357e-03, -3.4923e-02, -3.3540e-02],\n",
      "          [-2.7269e-02, -5.8540e-02, -1.0691e-01]],\n",
      "\n",
      "         [[ 2.9157e-02, -4.1171e-02,  7.1711e-03],\n",
      "          [-1.3959e-03, -6.0536e-02, -6.8489e-02],\n",
      "          [-3.3758e-02, -9.4463e-02, -4.9337e-02]],\n",
      "\n",
      "         [[ 8.7157e-02,  7.8412e-02,  3.7854e-02],\n",
      "          [ 1.3919e-01,  1.1572e-01,  1.0457e-01],\n",
      "          [ 6.0766e-02,  4.0579e-02,  1.2285e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.9863e-01, -2.5768e-01, -2.1317e-01],\n",
      "          [-2.1610e-01, -1.5687e-01, -1.0381e-01],\n",
      "          [-1.5960e-01, -5.7405e-02, -2.7294e-02]],\n",
      "\n",
      "         [[-1.5940e-01, -2.0179e-01, -2.3693e-01],\n",
      "          [-1.6040e-01, -1.7767e-01, -2.0662e-01],\n",
      "          [-1.5352e-01, -2.0175e-01, -2.0374e-01]],\n",
      "\n",
      "         [[-7.4664e-02,  1.5303e-01,  3.9241e-03],\n",
      "          [-1.2396e-02,  2.7300e-01,  1.0164e-01],\n",
      "          [-2.6048e-02,  2.2421e-01,  6.4298e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.6997e-01,  1.4954e-01,  1.1415e-01],\n",
      "          [ 1.5017e-01,  1.5820e-01,  1.3492e-01],\n",
      "          [ 1.7882e-01,  1.3615e-01,  1.4120e-01]],\n",
      "\n",
      "         [[ 1.8700e-01,  1.7987e-01,  1.9645e-01],\n",
      "          [ 1.7068e-01,  1.5781e-01,  1.7115e-01],\n",
      "          [ 1.5882e-01,  1.7163e-01,  1.2202e-01]],\n",
      "\n",
      "         [[ 3.2454e-01,  3.6716e-01,  3.2810e-01],\n",
      "          [ 2.5864e-01,  2.4656e-01,  3.0398e-01],\n",
      "          [ 2.8867e-01,  3.3431e-01,  3.2624e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 3.5799e-02,  9.8529e-02,  7.0997e-02],\n",
      "          [ 5.5453e-04, -3.7487e-02, -3.5522e-03],\n",
      "          [-3.8661e-02, -3.3502e-02, -4.0470e-02]],\n",
      "\n",
      "         [[-7.6861e-03,  1.2699e-02, -6.3197e-02],\n",
      "          [ 5.5704e-02,  3.1471e-02,  1.5614e-02],\n",
      "          [ 6.8491e-02,  2.1539e-02,  5.9100e-04]],\n",
      "\n",
      "         [[ 1.7825e-01,  1.7635e-01,  2.3860e-01],\n",
      "          [ 8.0221e-02,  4.7718e-02,  1.1399e-01],\n",
      "          [ 6.6878e-02,  9.5772e-02,  1.4360e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.6789e-02, -2.4843e-02,  1.0358e-02],\n",
      "          [-1.0455e-02,  2.6472e-03,  1.0351e-02],\n",
      "          [ 3.8752e-02, -2.9189e-02,  5.9512e-03]],\n",
      "\n",
      "         [[ 6.3594e-01,  6.0625e-01,  6.6101e-01],\n",
      "          [ 5.7471e-01,  5.5942e-01,  6.0604e-01],\n",
      "          [ 5.8257e-01,  6.1686e-01,  6.1907e-01]],\n",
      "\n",
      "         [[ 4.9545e-02,  5.1622e-02,  1.1239e-01],\n",
      "          [ 5.4419e-02,  4.2909e-02,  7.5017e-02],\n",
      "          [ 7.7783e-02,  9.9083e-02,  1.0491e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 8.9832e-03, -8.6441e-03, -6.9850e-02],\n",
      "          [ 3.8405e-02, -2.3358e-02, -3.8166e-02],\n",
      "          [ 3.7471e-02,  2.7654e-03, -4.2076e-02]],\n",
      "\n",
      "         [[-5.5717e-03, -4.3322e-02, -4.2964e-02],\n",
      "          [-2.4771e-02, -5.0586e-02, -3.5120e-02],\n",
      "          [ 4.1187e-03, -1.8077e-02, -3.6818e-04]],\n",
      "\n",
      "         [[ 9.6878e-03,  1.3629e-01,  1.0447e-01],\n",
      "          [-1.8773e-02,  8.1140e-02,  5.1466e-02],\n",
      "          [ 2.1395e-02,  1.7946e-01,  1.2822e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-8.4984e-02, -1.1556e-01, -1.4151e-01],\n",
      "          [-7.1594e-02, -1.0181e-01, -1.3395e-01],\n",
      "          [-1.7171e-01, -1.9816e-01, -1.8299e-01]],\n",
      "\n",
      "         [[-7.8311e-02, -6.9712e-02, -1.1148e-01],\n",
      "          [-7.3392e-02, -8.8898e-02, -1.0713e-01],\n",
      "          [-1.1399e-01, -1.7010e-01, -1.2514e-01]],\n",
      "\n",
      "         [[-1.4967e-01, -1.5321e-01, -1.6940e-01],\n",
      "          [-2.6555e-02, -1.0596e-01, -1.1329e-01],\n",
      "          [-2.2178e-01, -2.2265e-01, -2.3018e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 7.0341e-02,  5.6101e-02,  9.8246e-03],\n",
      "          [ 1.6991e-01,  1.7245e-01,  1.2648e-01],\n",
      "          [ 2.1047e-01,  1.7213e-01,  1.1235e-01]],\n",
      "\n",
      "         [[ 1.7264e-02,  5.7595e-02,  4.2984e-02],\n",
      "          [-1.2452e-02,  5.8111e-03,  7.8650e-02],\n",
      "          [-4.5580e-03,  4.1276e-02,  3.9238e-02]],\n",
      "\n",
      "         [[-9.9594e-02, -3.3241e-02, -1.1001e-01],\n",
      "          [-5.8255e-02, -3.2164e-02, -1.0848e-01],\n",
      "          [-3.9253e-02, -7.8294e-02, -1.5392e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.5175e-01,  1.2239e-01,  1.2154e-01],\n",
      "          [ 4.4436e-02,  8.9712e-02,  1.0477e-01],\n",
      "          [ 8.4132e-02,  8.9350e-02,  1.0464e-01]],\n",
      "\n",
      "         [[-1.0687e-01, -5.6318e-02, -9.6830e-02],\n",
      "          [-2.0801e-02, -5.2250e-02, -3.3675e-02],\n",
      "          [-5.5057e-02, -5.0089e-02, -3.5095e-02]],\n",
      "\n",
      "         [[ 6.8415e-02,  4.3885e-02,  6.1974e-02],\n",
      "          [ 9.2657e-02,  6.3640e-02,  1.1452e-01],\n",
      "          [ 1.1853e-01,  1.1694e-01,  9.7607e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 1.6161e-01,  1.5106e-01,  1.5710e-01],\n",
      "          [ 7.6084e-02,  7.2099e-02,  1.0581e-01],\n",
      "          [ 3.1669e-02,  5.0431e-02,  6.2524e-02]],\n",
      "\n",
      "         [[-9.1603e-02, -7.8936e-02, -1.0434e-01],\n",
      "          [-1.0037e-01, -6.2876e-02, -8.2094e-02],\n",
      "          [-1.0950e-01, -7.4977e-02, -6.2153e-02]],\n",
      "\n",
      "         [[ 1.5514e-02, -3.8843e-02,  9.3342e-02],\n",
      "          [-4.8210e-02, -8.4581e-02, -1.4587e-02],\n",
      "          [-7.5300e-03,  8.2185e-03,  5.4680e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.7795e-02,  4.9624e-02,  3.8107e-02],\n",
      "          [ 1.3538e-02,  8.0012e-03,  4.5699e-02],\n",
      "          [ 9.1960e-02,  3.4746e-02,  5.7669e-02]],\n",
      "\n",
      "         [[ 1.4945e-01,  9.8643e-02,  9.0747e-02],\n",
      "          [ 9.3258e-02,  7.6106e-02,  9.6881e-02],\n",
      "          [ 1.3420e-01,  9.8889e-02,  1.1669e-01]],\n",
      "\n",
      "         [[-4.3220e-02, -6.3888e-02, -6.9744e-02],\n",
      "          [-7.1391e-02, -8.2036e-02, -6.1966e-02],\n",
      "          [-5.6117e-02, -6.4999e-02, -5.9883e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0238,  0.0210,  0.0074, -0.0062, -0.0188, -0.0085, -0.0216,  0.0057,\n",
      "         0.0134, -0.0183,  0.0186, -0.0322, -0.0257, -0.0056, -0.0134, -0.0170,\n",
      "         0.0037, -0.0217,  0.0099, -0.0227,  0.0101, -0.0273, -0.0124, -0.0261,\n",
      "         0.0072,  0.0255,  0.0050, -0.0080,  0.0188, -0.0248,  0.0198,  0.0152,\n",
      "        -0.0044, -0.0133, -0.0134, -0.0162,  0.0239, -0.0211, -0.0106,  0.0196,\n",
      "         0.0013,  0.0229,  0.0160, -0.0204, -0.0072, -0.0048, -0.0060, -0.0230,\n",
      "        -0.0166, -0.0164, -0.0085, -0.0190, -0.0177, -0.0222, -0.0197, -0.0007,\n",
      "        -0.0176,  0.0245, -0.0131,  0.0101,  0.0266, -0.0276,  0.0271,  0.0125],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0.9918, 0.9657, 1.0893, 1.0243, 0.9178, 0.9082, 0.9041, 1.0081, 0.8919,\n",
      "        0.8232, 0.9174, 1.0296, 0.9390, 1.0268, 1.0330, 1.0103, 0.9156, 1.0224,\n",
      "        0.9925, 0.9124, 0.9670, 0.8325, 0.9538, 1.1089, 1.1634, 0.9051, 1.0483,\n",
      "        0.9815, 0.9645, 1.2049, 1.1565, 1.0640, 1.0753, 1.1057, 1.0760, 0.8883,\n",
      "        1.0280, 0.9470, 0.9886, 0.9024, 0.9609, 0.9451, 1.0303, 0.9594, 1.0460,\n",
      "        0.9172, 0.9819, 0.9924, 0.9603, 0.9678, 0.9322, 0.9272, 1.0599, 0.8577,\n",
      "        0.8970, 0.9714, 1.0411, 1.1191, 0.9343, 1.0482, 1.0194, 0.9861, 0.9960,\n",
      "        1.0186], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.1205, -0.1990,  0.1928, -0.3022, -0.0861, -0.2100, -0.0015, -0.2334,\n",
      "         0.1617, -0.3404, -0.0511, -0.1990, -0.2423,  0.1983, -0.1447, -0.1460,\n",
      "        -0.2506, -0.0300, -0.2470, -0.1216, -0.0016, -0.0898, -0.0358, -0.1272,\n",
      "         0.0467, -0.3501,  0.0356,  0.2030, -0.0863, -0.1246,  0.1224,  0.0085,\n",
      "        -0.1116, -0.1283, -0.1098,  0.1760, -0.2389, -0.1255,  0.1627, -0.1090,\n",
      "        -0.1350, -0.0588, -0.1791, -0.1716, -0.2584, -0.0688, -0.1702, -0.2355,\n",
      "        -0.1093, -0.2289, -0.2026, -0.2996, -0.0884, -0.2333, -0.1519, -0.2945,\n",
      "        -0.1193,  0.1608, -0.0919, -0.2789, -0.0618, -0.0659, -0.1767, -0.0790],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 2.6304e-01,  2.2637e-01,  2.9404e-01],\n",
      "          [ 1.8557e-01,  2.7843e-01,  2.7817e-01],\n",
      "          [ 3.5258e-01,  3.1747e-01,  3.3784e-01]],\n",
      "\n",
      "         [[ 5.5592e-02,  6.1421e-02, -3.3980e-03],\n",
      "          [ 5.7608e-02,  3.9298e-02,  7.1935e-02],\n",
      "          [ 1.0465e-01,  7.6245e-02,  4.5146e-02]],\n",
      "\n",
      "         [[ 6.3955e-02,  1.2168e-01,  7.5509e-02],\n",
      "          [ 6.0263e-02,  1.1866e-01,  7.6748e-02],\n",
      "          [ 1.3145e-01,  1.1756e-01,  7.6608e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.1673e-01,  2.6768e-01,  3.0031e-01],\n",
      "          [ 2.9488e-01,  2.7004e-01,  3.4524e-01],\n",
      "          [ 4.4059e-01,  4.4051e-01,  4.4476e-01]],\n",
      "\n",
      "         [[-4.0572e-01, -4.2551e-01, -3.8074e-01],\n",
      "          [-4.0466e-01, -3.8213e-01, -3.9420e-01],\n",
      "          [-4.1650e-01, -4.5788e-01, -3.7585e-01]],\n",
      "\n",
      "         [[-1.4137e-01, -6.9230e-02, -1.3929e-01],\n",
      "          [-1.0190e-01, -4.0503e-02, -8.7570e-02],\n",
      "          [-7.0457e-02, -6.2042e-02, -1.2625e-01]]],\n",
      "\n",
      "\n",
      "        [[[-7.9033e-02, -7.1283e-02, -6.6909e-02],\n",
      "          [-9.3759e-02, -6.2114e-02, -1.1888e-01],\n",
      "          [-9.3451e-02, -1.4438e-01, -1.2486e-01]],\n",
      "\n",
      "         [[-2.7402e-01, -8.0595e-02, -1.0585e-01],\n",
      "          [-1.6659e-01, -3.3649e-02, -3.9791e-02],\n",
      "          [-2.6687e-01, -8.0795e-02, -1.6048e-01]],\n",
      "\n",
      "         [[-1.0960e-01, -3.5681e-02, -3.0636e-02],\n",
      "          [-9.6154e-02, -6.6654e-02, -7.9298e-02],\n",
      "          [-1.0286e-01, -5.6243e-02,  1.2462e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.3144e-01,  7.7080e-02,  8.2851e-02],\n",
      "          [ 9.7690e-02,  2.7775e-02,  2.2308e-02],\n",
      "          [ 4.5942e-03,  4.3348e-02,  5.6736e-02]],\n",
      "\n",
      "         [[ 1.6256e-01,  1.6150e-01,  1.3906e-01],\n",
      "          [ 1.0207e-01,  1.0392e-01,  9.7259e-02],\n",
      "          [ 1.2859e-01,  1.0715e-01,  1.0527e-01]],\n",
      "\n",
      "         [[ 4.0190e-02, -3.5796e-02, -1.7725e-02],\n",
      "          [-1.7572e-02, -6.7419e-02, -4.9242e-02],\n",
      "          [-5.6763e-02, -7.3125e-02, -5.3832e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.0699e-02,  3.3117e-02,  1.2994e-02],\n",
      "          [-5.4806e-02,  3.6212e-02, -2.0478e-02],\n",
      "          [-3.5136e-02,  2.2479e-02,  7.8601e-03]],\n",
      "\n",
      "         [[-9.1551e-02, -8.5692e-02,  9.7679e-03],\n",
      "          [-5.7976e-02, -1.5370e-02,  4.0774e-02],\n",
      "          [-1.7375e-02, -2.7764e-02,  1.2057e-02]],\n",
      "\n",
      "         [[ 1.5912e-02,  5.4100e-02,  1.1941e-03],\n",
      "          [ 5.7283e-02,  9.7462e-02, -3.1975e-03],\n",
      "          [ 1.1644e-01,  8.2529e-02,  9.6607e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 9.1608e-02,  1.1188e-01,  7.2486e-02],\n",
      "          [ 1.0238e-01,  7.9625e-02,  1.3823e-01],\n",
      "          [ 6.3719e-02,  7.1871e-02,  1.1239e-01]],\n",
      "\n",
      "         [[ 1.7438e-01,  2.0628e-01,  1.7512e-01],\n",
      "          [ 1.2611e-01,  8.1212e-02,  1.2141e-01],\n",
      "          [ 1.6381e-01,  1.5148e-01,  1.1782e-01]],\n",
      "\n",
      "         [[-2.7662e-01, -1.9858e-01, -1.9695e-01],\n",
      "          [-1.7106e-01, -1.3867e-01, -1.5370e-01],\n",
      "          [-3.0055e-01, -2.1267e-01, -2.4109e-01]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 9.6080e-02,  3.6799e-02,  8.1402e-02],\n",
      "          [ 5.1608e-02,  1.0628e-01,  9.2982e-02],\n",
      "          [ 1.0713e-01,  5.0117e-02,  1.1341e-01]],\n",
      "\n",
      "         [[-9.5113e-02, -1.9609e-01, -1.3952e-01],\n",
      "          [-9.1506e-02, -1.7726e-01, -1.7517e-01],\n",
      "          [-1.1746e-01, -1.5970e-01, -1.7944e-01]],\n",
      "\n",
      "         [[ 1.7020e-01,  1.0735e-01,  1.4468e-01],\n",
      "          [ 8.2450e-02,  5.0715e-02,  4.3563e-02],\n",
      "          [ 9.4527e-02,  1.2214e-02,  8.7737e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.3489e-02,  2.9724e-02,  1.1141e-01],\n",
      "          [-4.2406e-03,  6.4796e-02,  2.0572e-02],\n",
      "          [ 4.9556e-02,  3.4955e-02,  2.6877e-02]],\n",
      "\n",
      "         [[-2.0059e-01, -1.2338e-01, -1.9859e-01],\n",
      "          [-1.3545e-01, -1.0040e-01, -9.0958e-02],\n",
      "          [-1.8997e-01, -1.1413e-01, -1.4821e-01]],\n",
      "\n",
      "         [[ 7.0278e-02,  3.2197e-02,  1.0191e-01],\n",
      "          [ 7.3126e-02,  6.4269e-02, -7.7448e-03],\n",
      "          [ 6.8522e-02,  3.5059e-02,  7.2143e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.0338e-01, -7.0942e-02, -8.0423e-02],\n",
      "          [-1.0124e-01, -9.3745e-02, -1.1049e-01],\n",
      "          [-1.5915e-01, -1.5468e-01, -1.6072e-01]],\n",
      "\n",
      "         [[ 1.1200e-01,  6.6966e-02,  7.9449e-02],\n",
      "          [ 1.2649e-01,  4.6232e-02,  1.2624e-01],\n",
      "          [ 1.3058e-01,  1.2015e-01,  1.3552e-01]],\n",
      "\n",
      "         [[ 1.3474e-01,  1.5936e-01,  1.9089e-01],\n",
      "          [ 1.0574e-01,  1.2610e-01,  1.5407e-01],\n",
      "          [ 1.3166e-01,  1.3419e-01,  1.4033e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.1540e-02, -2.7354e-02,  4.3632e-03],\n",
      "          [ 6.8280e-03, -2.2691e-02, -5.0733e-02],\n",
      "          [-6.6215e-02, -8.4803e-02, -4.2276e-02]],\n",
      "\n",
      "         [[-1.0685e-02, -6.9774e-03, -4.9751e-02],\n",
      "          [-4.0928e-02,  2.0207e-02, -2.9408e-02],\n",
      "          [-5.4847e-02, -4.5638e-02, -8.0969e-02]],\n",
      "\n",
      "         [[ 2.5775e-02, -1.5705e-02,  3.5024e-02],\n",
      "          [-2.5901e-02, -9.1860e-03,  2.5677e-02],\n",
      "          [-6.3473e-02, -4.1505e-02, -3.0133e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.8621e-02,  2.6644e-02, -2.7540e-03],\n",
      "          [-7.2499e-04, -3.1990e-04, -3.4956e-02],\n",
      "          [-1.5419e-02, -2.0912e-02, -6.8720e-02]],\n",
      "\n",
      "         [[-6.0075e-02, -4.1823e-02, -1.5993e-01],\n",
      "          [-3.2439e-02, -9.0448e-02, -1.8327e-01],\n",
      "          [-1.2549e-01, -1.8710e-01, -1.6812e-01]],\n",
      "\n",
      "         [[ 1.0702e-01,  3.7987e-02,  7.2854e-02],\n",
      "          [ 7.9848e-02,  6.1104e-02,  8.8093e-02],\n",
      "          [ 1.3272e-01,  1.3839e-01,  1.8409e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-9.2275e-02, -1.1125e-01, -1.0050e-01],\n",
      "          [-7.7163e-02, -5.1064e-02, -1.0279e-01],\n",
      "          [-1.4437e-01, -1.0525e-01, -9.9430e-02]],\n",
      "\n",
      "         [[ 1.1634e-01,  1.0081e-01,  1.5965e-01],\n",
      "          [ 1.1682e-01,  1.4788e-01,  1.5331e-01],\n",
      "          [ 6.6118e-02,  1.1061e-01,  1.6929e-01]],\n",
      "\n",
      "         [[ 2.3236e-01,  2.3949e-01,  2.4883e-01],\n",
      "          [ 2.0057e-01,  1.1521e-01,  2.0409e-01],\n",
      "          [ 2.7348e-01,  1.7713e-01,  2.0033e-01]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0068,  0.0363,  0.0385,  0.0264, -0.0266,  0.0043,  0.0299, -0.0348,\n",
      "         0.0089, -0.0318,  0.0380,  0.0142, -0.0245,  0.0334, -0.0308, -0.0379,\n",
      "         0.0122, -0.0167, -0.0228, -0.0056, -0.0019,  0.0122, -0.0329, -0.0063,\n",
      "         0.0319,  0.0243, -0.0393,  0.0363,  0.0062, -0.0388, -0.0061, -0.0067,\n",
      "        -0.0242, -0.0043, -0.0397,  0.0014, -0.0228, -0.0238, -0.0275, -0.0174,\n",
      "         0.0158, -0.0224, -0.0131,  0.0349,  0.0213,  0.0206, -0.0348,  0.0143,\n",
      "         0.0064, -0.0012, -0.0259, -0.0184, -0.0220,  0.0099, -0.0125,  0.0194,\n",
      "         0.0056, -0.0185, -0.0384, -0.0193,  0.0351,  0.0095,  0.0145, -0.0078],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([2.7652, 2.1726, 2.1636, 2.1842, 2.3254, 2.2128, 2.5827, 1.8220, 2.2574,\n",
      "        2.0641, 2.0101, 2.5335, 2.2713, 1.6739, 2.3074, 2.2433, 1.9926, 1.8495,\n",
      "        1.9656, 2.1180, 1.7709, 2.3511, 2.4087, 2.0221, 2.3971, 2.3867, 2.3972,\n",
      "        1.9904, 1.7717, 2.3953, 2.6887, 2.1068, 2.4038, 1.9224, 2.1506, 2.0389,\n",
      "        1.8871, 2.0564, 2.6789, 2.0426, 2.0316, 2.1927, 2.3179, 2.1848, 2.0457,\n",
      "        1.9696, 2.8801, 2.4263, 2.2818, 2.1850, 2.2264, 2.2663, 1.9447, 1.9244,\n",
      "        1.7426, 2.1203, 2.2987, 2.2373, 2.2475, 2.2666, 1.9902, 1.8494, 2.1013,\n",
      "        2.1393], device='cuda:0', requires_grad=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter containing:\n",
      "tensor([0.6747, 0.5083, 0.5943, 0.6942, 0.5133, 0.7143, 0.7480, 0.6629, 0.6383,\n",
      "        0.7319, 0.6875, 1.0013, 0.4468, 0.3845, 0.6462, 0.7221, 0.5916, 0.4148,\n",
      "        0.3414, 0.7169, 0.5807, 0.6327, 1.0257, 0.7256, 0.7152, 0.4838, 0.5127,\n",
      "        0.4531, 0.3532, 0.8095, 0.5027, 0.7993, 0.7482, 0.5583, 0.6101, 0.7150,\n",
      "        0.4813, 0.5103, 0.9942, 0.6535, 0.7364, 0.6215, 0.7102, 0.6552, 0.6857,\n",
      "        0.4390, 0.4329, 0.6919, 0.6009, 0.5875, 0.5054, 0.6212, 0.5180, 0.5133,\n",
      "        0.2513, 0.5133, 0.6033, 0.6133, 0.7958, 0.5916, 0.5272, 0.5436, 0.5458,\n",
      "        0.6335], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-0.5139]],\n",
      "\n",
      "         [[-0.2653]],\n",
      "\n",
      "         [[-0.4429]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.3371]],\n",
      "\n",
      "         [[-0.2894]],\n",
      "\n",
      "         [[-0.1467]]],\n",
      "\n",
      "\n",
      "        [[[-0.0026]],\n",
      "\n",
      "         [[-0.8769]],\n",
      "\n",
      "         [[-0.0459]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.4715]],\n",
      "\n",
      "         [[-0.5903]],\n",
      "\n",
      "         [[-0.2862]]],\n",
      "\n",
      "\n",
      "        [[[-0.3659]],\n",
      "\n",
      "         [[-0.4672]],\n",
      "\n",
      "         [[ 0.0038]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0838]],\n",
      "\n",
      "         [[-0.0857]],\n",
      "\n",
      "         [[-0.2938]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0303]],\n",
      "\n",
      "         [[-0.4255]],\n",
      "\n",
      "         [[-0.1553]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.2022]],\n",
      "\n",
      "         [[-0.2051]],\n",
      "\n",
      "         [[ 0.1943]]],\n",
      "\n",
      "\n",
      "        [[[ 0.6974]],\n",
      "\n",
      "         [[-0.3035]],\n",
      "\n",
      "         [[-0.0730]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0754]],\n",
      "\n",
      "         [[-0.3678]],\n",
      "\n",
      "         [[-0.5291]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1369]],\n",
      "\n",
      "         [[ 0.1096]],\n",
      "\n",
      "         [[-0.8113]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0318]],\n",
      "\n",
      "         [[-0.4226]],\n",
      "\n",
      "         [[-0.2905]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.3164,  0.2125,  0.1234,  0.1395,  0.0838,  0.0392, -0.2451, -0.2624,\n",
      "        -0.1709,  0.0929, -0.0662,  0.0540, -0.1960,  0.0154, -0.1950, -0.0407,\n",
      "         0.0320,  0.0426,  0.0385, -0.1187,  0.0555], device='cuda:0',\n",
      "       requires_grad=True)\n"
     ]
    }
   ],
   "source": [
    "def create_model_gpu():\n",
    "    model = Model()\n",
    "    model = model.cuda()\n",
    "    model = nn.DataParallel(model, device_ids=[g for g in gpu_id])\n",
    "    return model\n",
    "\n",
    "model = create_model_gpu()\n",
    "model.load_state_dict(torch.load('seg_model_gpu[0, 1, 2, 3]_n200_bs16_lr0.001.pkl'))\n",
    "print('Ready to train.')\n",
    "\n",
    "\n",
    "for param in model.parameters():\n",
    "    print(param)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "depth_model = Depth_Model()\n",
    "depth_model = depth_model.cuda()\n",
    "depth_model = nn.DataParallel(depth_model, device_ids=[g for g in gpu_id])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<All keys matched successfully>"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "state_dict = model.state_dict()\n",
    "#state_dict['classifier.weight'] = torch.randn(10, 10)\n",
    "#model.load_state_dict(state_dict)\n",
    "\n",
    "for name, param in depth_model.named_parameters():\n",
    "    if name != 'module.conv.weight' and name != 'module.conv.bias':\n",
    "        state_dict[name] = param\n",
    "model.load_state_dict(state_dict)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "module.down1.double_conv.0.weight\n",
      "torch.Size([64, 3, 3, 3])\n",
      "module.down1.double_conv.0.bias\n",
      "torch.Size([64])\n",
      "module.down1.double_conv.1.weight\n",
      "torch.Size([64])\n",
      "module.down1.double_conv.1.bias\n",
      "torch.Size([64])\n",
      "module.down1.double_conv.3.weight\n",
      "torch.Size([64, 64, 3, 3])\n",
      "module.down1.double_conv.3.bias\n",
      "torch.Size([64])\n",
      "module.down1.double_conv.4.weight\n",
      "torch.Size([64])\n",
      "module.down1.double_conv.4.bias\n",
      "torch.Size([64])\n",
      "module.down2.double_conv.0.weight\n",
      "torch.Size([128, 64, 3, 3])\n",
      "module.down2.double_conv.0.bias\n",
      "torch.Size([128])\n",
      "module.down2.double_conv.1.weight\n",
      "torch.Size([128])\n",
      "module.down2.double_conv.1.bias\n",
      "torch.Size([128])\n",
      "module.down2.double_conv.3.weight\n",
      "torch.Size([128, 128, 3, 3])\n",
      "module.down2.double_conv.3.bias\n",
      "torch.Size([128])\n",
      "module.down2.double_conv.4.weight\n",
      "torch.Size([128])\n",
      "module.down2.double_conv.4.bias\n",
      "torch.Size([128])\n",
      "module.down3.double_conv.0.weight\n",
      "torch.Size([256, 128, 3, 3])\n",
      "module.down3.double_conv.0.bias\n",
      "torch.Size([256])\n",
      "module.down3.double_conv.1.weight\n",
      "torch.Size([256])\n",
      "module.down3.double_conv.1.bias\n",
      "torch.Size([256])\n",
      "module.down3.double_conv.3.weight\n",
      "torch.Size([256, 256, 3, 3])\n",
      "module.down3.double_conv.3.bias\n",
      "torch.Size([256])\n",
      "module.down3.double_conv.4.weight\n",
      "torch.Size([256])\n",
      "module.down3.double_conv.4.bias\n",
      "torch.Size([256])\n",
      "module.down3.double_conv.6.weight\n",
      "torch.Size([256, 256, 3, 3])\n",
      "module.down3.double_conv.6.bias\n",
      "torch.Size([256])\n",
      "module.down3.double_conv.7.weight\n",
      "torch.Size([256])\n",
      "module.down3.double_conv.7.bias\n",
      "torch.Size([256])\n",
      "module.down4.double_conv.0.weight\n",
      "torch.Size([512, 256, 3, 3])\n",
      "module.down4.double_conv.0.bias\n",
      "torch.Size([512])\n",
      "module.down4.double_conv.1.weight\n",
      "torch.Size([512])\n",
      "module.down4.double_conv.1.bias\n",
      "torch.Size([512])\n",
      "module.down4.double_conv.3.weight\n",
      "torch.Size([512, 512, 3, 3])\n",
      "module.down4.double_conv.3.bias\n",
      "torch.Size([512])\n",
      "module.down4.double_conv.4.weight\n",
      "torch.Size([512])\n",
      "module.down4.double_conv.4.bias\n",
      "torch.Size([512])\n",
      "module.down4.double_conv.6.weight\n",
      "torch.Size([512, 512, 3, 3])\n",
      "module.down4.double_conv.6.bias\n",
      "torch.Size([512])\n",
      "module.down4.double_conv.7.weight\n",
      "torch.Size([512])\n",
      "module.down4.double_conv.7.bias\n",
      "torch.Size([512])\n",
      "module.down5.double_conv.0.weight\n",
      "torch.Size([1024, 512, 3, 3])\n",
      "module.down5.double_conv.0.bias\n",
      "torch.Size([1024])\n",
      "module.down5.double_conv.1.weight\n",
      "torch.Size([1024])\n",
      "module.down5.double_conv.1.bias\n",
      "torch.Size([1024])\n",
      "module.down5.double_conv.3.weight\n",
      "torch.Size([1024, 1024, 3, 3])\n",
      "module.down5.double_conv.3.bias\n",
      "torch.Size([1024])\n",
      "module.down5.double_conv.4.weight\n",
      "torch.Size([1024])\n",
      "module.down5.double_conv.4.bias\n",
      "torch.Size([1024])\n",
      "module.down5.double_conv.6.weight\n",
      "torch.Size([1024, 1024, 3, 3])\n",
      "module.down5.double_conv.6.bias\n",
      "torch.Size([1024])\n",
      "module.down5.double_conv.7.weight\n",
      "torch.Size([1024])\n",
      "module.down5.double_conv.7.bias\n",
      "torch.Size([1024])\n",
      "module.up1.up.weight\n",
      "torch.Size([1024, 512, 2, 2])\n",
      "module.up1.up.bias\n",
      "torch.Size([512])\n",
      "module.up1.conv.double_conv.0.weight\n",
      "torch.Size([512, 1024, 3, 3])\n",
      "module.up1.conv.double_conv.0.bias\n",
      "torch.Size([512])\n",
      "module.up1.conv.double_conv.1.weight\n",
      "torch.Size([512])\n",
      "module.up1.conv.double_conv.1.bias\n",
      "torch.Size([512])\n",
      "module.up1.conv.double_conv.3.weight\n",
      "torch.Size([512, 512, 3, 3])\n",
      "module.up1.conv.double_conv.3.bias\n",
      "torch.Size([512])\n",
      "module.up1.conv.double_conv.4.weight\n",
      "torch.Size([512])\n",
      "module.up1.conv.double_conv.4.bias\n",
      "torch.Size([512])\n",
      "module.up1.conv.double_conv.6.weight\n",
      "torch.Size([512, 512, 3, 3])\n",
      "module.up1.conv.double_conv.6.bias\n",
      "torch.Size([512])\n",
      "module.up1.conv.double_conv.7.weight\n",
      "torch.Size([512])\n",
      "module.up1.conv.double_conv.7.bias\n",
      "torch.Size([512])\n",
      "module.up2.up.weight\n",
      "torch.Size([512, 256, 2, 2])\n",
      "module.up2.up.bias\n",
      "torch.Size([256])\n",
      "module.up2.conv.double_conv.0.weight\n",
      "torch.Size([256, 512, 3, 3])\n",
      "module.up2.conv.double_conv.0.bias\n",
      "torch.Size([256])\n",
      "module.up2.conv.double_conv.1.weight\n",
      "torch.Size([256])\n",
      "module.up2.conv.double_conv.1.bias\n",
      "torch.Size([256])\n",
      "module.up2.conv.double_conv.3.weight\n",
      "torch.Size([256, 256, 3, 3])\n",
      "module.up2.conv.double_conv.3.bias\n",
      "torch.Size([256])\n",
      "module.up2.conv.double_conv.4.weight\n",
      "torch.Size([256])\n",
      "module.up2.conv.double_conv.4.bias\n",
      "torch.Size([256])\n",
      "module.up2.conv.double_conv.6.weight\n",
      "torch.Size([256, 256, 3, 3])\n",
      "module.up2.conv.double_conv.6.bias\n",
      "torch.Size([256])\n",
      "module.up2.conv.double_conv.7.weight\n",
      "torch.Size([256])\n",
      "module.up2.conv.double_conv.7.bias\n",
      "torch.Size([256])\n",
      "module.up3.up.weight\n",
      "torch.Size([256, 128, 2, 2])\n",
      "module.up3.up.bias\n",
      "torch.Size([128])\n",
      "module.up3.conv.double_conv.0.weight\n",
      "torch.Size([128, 256, 3, 3])\n",
      "module.up3.conv.double_conv.0.bias\n",
      "torch.Size([128])\n",
      "module.up3.conv.double_conv.1.weight\n",
      "torch.Size([128])\n",
      "module.up3.conv.double_conv.1.bias\n",
      "torch.Size([128])\n",
      "module.up3.conv.double_conv.3.weight\n",
      "torch.Size([128, 128, 3, 3])\n",
      "module.up3.conv.double_conv.3.bias\n",
      "torch.Size([128])\n",
      "module.up3.conv.double_conv.4.weight\n",
      "torch.Size([128])\n",
      "module.up3.conv.double_conv.4.bias\n",
      "torch.Size([128])\n",
      "module.up3.conv.double_conv.6.weight\n",
      "torch.Size([128, 128, 3, 3])\n",
      "module.up3.conv.double_conv.6.bias\n",
      "torch.Size([128])\n",
      "module.up3.conv.double_conv.7.weight\n",
      "torch.Size([128])\n",
      "module.up3.conv.double_conv.7.bias\n",
      "torch.Size([128])\n",
      "module.up4.up.weight\n",
      "torch.Size([128, 64, 2, 2])\n",
      "module.up4.up.bias\n",
      "torch.Size([64])\n",
      "module.up4.conv.double_conv.0.weight\n",
      "torch.Size([64, 128, 3, 3])\n",
      "module.up4.conv.double_conv.0.bias\n",
      "torch.Size([64])\n",
      "module.up4.conv.double_conv.1.weight\n",
      "torch.Size([64])\n",
      "module.up4.conv.double_conv.1.bias\n",
      "torch.Size([64])\n",
      "module.up4.conv.double_conv.3.weight\n",
      "torch.Size([64, 64, 3, 3])\n",
      "module.up4.conv.double_conv.3.bias\n",
      "torch.Size([64])\n",
      "module.up4.conv.double_conv.4.weight\n",
      "torch.Size([64])\n",
      "module.up4.conv.double_conv.4.bias\n",
      "torch.Size([64])\n",
      "module.conv.weight\n",
      "torch.Size([21, 64, 1, 1])\n",
      "module.conv.bias\n",
      "torch.Size([21])\n"
     ]
    }
   ],
   "source": [
    "for name,param in model.named_parameters():\n",
    "    print(name)\n",
    "    print(param.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter containing:\n",
      "tensor([[[[-0.0516, -0.0668, -0.1597],\n",
      "          [-0.0561,  0.0115, -0.0915],\n",
      "          [-0.1542,  0.1721, -0.1359]],\n",
      "\n",
      "         [[-0.1664, -0.0839,  0.0062],\n",
      "          [ 0.0463, -0.0797, -0.1726],\n",
      "          [ 0.0210, -0.0112,  0.1600]],\n",
      "\n",
      "         [[-0.1257,  0.0315, -0.1217],\n",
      "          [ 0.0700,  0.0954,  0.1204],\n",
      "          [ 0.1073, -0.0872, -0.0765]]],\n",
      "\n",
      "\n",
      "        [[[ 0.1150,  0.1064, -0.0845],\n",
      "          [ 0.1766, -0.0141,  0.0833],\n",
      "          [-0.0322,  0.0247,  0.1000]],\n",
      "\n",
      "         [[ 0.0286, -0.1094, -0.0380],\n",
      "          [-0.1849, -0.1907,  0.0363],\n",
      "          [ 0.0083, -0.1674,  0.1812]],\n",
      "\n",
      "         [[-0.1210,  0.1789,  0.0229],\n",
      "          [ 0.1781, -0.0610, -0.1117],\n",
      "          [ 0.0308,  0.1485, -0.0137]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0540, -0.0441, -0.0519],\n",
      "          [ 0.0703,  0.0567, -0.0177],\n",
      "          [ 0.1440, -0.1179,  0.1757]],\n",
      "\n",
      "         [[ 0.0548, -0.0045,  0.0862],\n",
      "          [ 0.0586, -0.1606,  0.0467],\n",
      "          [-0.0520, -0.1858, -0.0066]],\n",
      "\n",
      "         [[-0.0433,  0.1050, -0.1084],\n",
      "          [ 0.1185, -0.0780, -0.1025],\n",
      "          [-0.1363, -0.1845, -0.1069]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0558,  0.1201,  0.1443],\n",
      "          [-0.1138,  0.1206, -0.1921],\n",
      "          [ 0.0299,  0.1163,  0.0725]],\n",
      "\n",
      "         [[ 0.0768,  0.0360, -0.1384],\n",
      "          [ 0.1894,  0.1006, -0.1400],\n",
      "          [ 0.1588, -0.1509, -0.0728]],\n",
      "\n",
      "         [[ 0.0713,  0.0455,  0.0695],\n",
      "          [ 0.0735, -0.1825, -0.0890],\n",
      "          [ 0.1439,  0.0083, -0.1452]]],\n",
      "\n",
      "\n",
      "        [[[-0.1392, -0.1531,  0.1597],\n",
      "          [ 0.0210, -0.1618,  0.0187],\n",
      "          [-0.1159, -0.0035, -0.1906]],\n",
      "\n",
      "         [[ 0.0971, -0.0936, -0.1725],\n",
      "          [ 0.1068, -0.0988,  0.1047],\n",
      "          [-0.0729, -0.1497,  0.0350]],\n",
      "\n",
      "         [[ 0.0513, -0.0843, -0.0218],\n",
      "          [-0.1588,  0.1177,  0.1845],\n",
      "          [-0.1657,  0.0148,  0.0405]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0726,  0.1182, -0.1216],\n",
      "          [ 0.0814,  0.1036, -0.0100],\n",
      "          [ 0.1388,  0.0701,  0.1036]],\n",
      "\n",
      "         [[-0.0343, -0.1375,  0.1316],\n",
      "          [-0.0197,  0.0851, -0.0827],\n",
      "          [-0.1828, -0.0687, -0.0214]],\n",
      "\n",
      "         [[ 0.1617,  0.1084,  0.0384],\n",
      "          [ 0.1084, -0.0270,  0.1290],\n",
      "          [ 0.1198,  0.0416, -0.0715]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0998,  0.0487,  0.1729,  0.1870,  0.0563, -0.0927, -0.1095, -0.0893,\n",
      "         0.1281,  0.0538,  0.1122, -0.1263, -0.1515,  0.0720,  0.1621, -0.0405,\n",
      "         0.0066,  0.1810,  0.0638, -0.1599,  0.1838, -0.1549,  0.0285,  0.0661,\n",
      "         0.0125,  0.0065,  0.1557,  0.1505,  0.0970, -0.1178, -0.1536,  0.1355,\n",
      "         0.0269, -0.1565,  0.0113, -0.1793, -0.0566,  0.0301,  0.1274, -0.0456,\n",
      "        -0.0048, -0.0927,  0.0246, -0.1447,  0.0858,  0.1531,  0.1093, -0.0219,\n",
      "        -0.0285,  0.0652, -0.0610, -0.0237, -0.0770,  0.1829,  0.1739,  0.0582,\n",
      "         0.1291, -0.1795, -0.0861, -0.0756,  0.0346,  0.1576,  0.0038, -0.1752],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 1.9945e-02, -2.5884e-02,  1.9194e-03],\n",
      "          [ 3.8647e-02,  3.7896e-03, -9.7137e-03],\n",
      "          [ 2.9943e-02, -2.9205e-03, -2.2330e-02]],\n",
      "\n",
      "         [[-3.0176e-02, -3.2848e-02,  1.6461e-02],\n",
      "          [ 1.3939e-02,  1.1515e-02, -1.2893e-02],\n",
      "          [ 3.6748e-02,  2.2170e-02,  8.8993e-03]],\n",
      "\n",
      "         [[-3.9617e-02, -1.5663e-02, -1.3028e-02],\n",
      "          [-3.9761e-04,  2.6989e-02,  2.0662e-02],\n",
      "          [-3.6834e-02,  3.1668e-02, -4.5328e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.0241e-02, -6.9804e-03, -2.5006e-02],\n",
      "          [-2.2389e-02,  3.4262e-02, -5.6763e-04],\n",
      "          [-3.7215e-02,  3.2856e-02, -3.9003e-02]],\n",
      "\n",
      "         [[ 1.7944e-02,  2.4998e-02,  9.5637e-03],\n",
      "          [-3.7101e-02, -3.8943e-02,  2.5346e-02],\n",
      "          [ 2.9372e-02, -1.0902e-02, -4.1053e-02]],\n",
      "\n",
      "         [[ 6.2981e-03,  2.4687e-02,  1.9863e-02],\n",
      "          [-3.3362e-02, -1.4434e-02,  1.4961e-02],\n",
      "          [-1.9573e-02,  1.3111e-02,  3.8586e-03]]],\n",
      "\n",
      "\n",
      "        [[[-9.4668e-04, -3.8272e-04, -2.8270e-02],\n",
      "          [ 8.1424e-03,  1.0972e-02, -3.4342e-03],\n",
      "          [-1.7674e-02, -1.4586e-02,  1.4052e-02]],\n",
      "\n",
      "         [[ 2.6443e-02, -2.3496e-02, -2.9441e-02],\n",
      "          [ 3.0995e-02, -3.0215e-02,  1.1380e-02],\n",
      "          [-2.8366e-02,  2.9157e-02,  1.7547e-02]],\n",
      "\n",
      "         [[-4.4037e-03, -8.2226e-03, -2.6586e-02],\n",
      "          [ 3.6869e-03,  2.9878e-02,  1.9212e-02],\n",
      "          [-2.6825e-02,  4.1252e-02,  2.5150e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.8068e-02,  3.6168e-02,  2.5434e-02],\n",
      "          [-1.9837e-02,  2.6365e-03,  2.7629e-02],\n",
      "          [ 2.8256e-02,  7.3820e-03,  1.8185e-02]],\n",
      "\n",
      "         [[ 1.3096e-02, -7.3430e-03,  4.1138e-02],\n",
      "          [-1.9919e-02,  3.6050e-02,  1.0090e-02],\n",
      "          [ 1.2930e-02,  3.2111e-02,  7.1381e-03]],\n",
      "\n",
      "         [[-3.5542e-02,  9.7606e-03, -6.0208e-03],\n",
      "          [ 1.4376e-02, -2.9927e-02,  3.4819e-02],\n",
      "          [-1.7204e-02, -4.1617e-02,  2.0021e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.9256e-02,  2.7214e-03, -2.6077e-04],\n",
      "          [ 4.1533e-02, -8.8630e-03, -4.8270e-03],\n",
      "          [ 1.6776e-02, -1.7037e-02,  2.4536e-03]],\n",
      "\n",
      "         [[-1.5047e-02, -2.1883e-02,  6.0708e-03],\n",
      "          [ 9.1334e-03,  3.3125e-02, -1.7693e-02],\n",
      "          [-2.0096e-03, -3.5885e-02,  3.6757e-03]],\n",
      "\n",
      "         [[-2.1029e-02, -3.7038e-02, -1.5452e-02],\n",
      "          [-2.1354e-02, -3.8852e-02,  5.8061e-03],\n",
      "          [ 1.2121e-02, -1.3750e-02,  1.2875e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.5462e-02, -7.0748e-03, -1.3302e-02],\n",
      "          [ 2.9921e-02, -2.4936e-02, -1.3673e-02],\n",
      "          [-3.2335e-02,  2.2688e-02,  3.0946e-02]],\n",
      "\n",
      "         [[-1.1795e-02, -9.9689e-03, -1.1672e-02],\n",
      "          [ 1.2703e-02, -4.0451e-02,  3.5646e-02],\n",
      "          [ 3.8095e-02, -3.6397e-02,  1.9186e-02]],\n",
      "\n",
      "         [[ 2.8650e-02,  3.3582e-03, -3.2872e-02],\n",
      "          [ 5.1850e-03,  1.0567e-02,  2.4648e-02],\n",
      "          [-1.5248e-02,  2.9459e-02, -2.5696e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 6.3870e-03,  3.8836e-02, -2.1221e-02],\n",
      "          [-2.5330e-02,  3.7202e-02,  1.4605e-03],\n",
      "          [-4.1414e-02, -2.7560e-03, -2.7973e-02]],\n",
      "\n",
      "         [[-7.1220e-04, -4.0408e-02,  2.3757e-02],\n",
      "          [-3.0106e-02,  6.6372e-03, -4.8226e-03],\n",
      "          [ 3.9195e-02, -7.2445e-03,  1.9624e-02]],\n",
      "\n",
      "         [[-1.9424e-02, -1.8696e-02, -3.1079e-02],\n",
      "          [ 2.5949e-02, -2.1212e-02, -1.5089e-02],\n",
      "          [-1.9249e-02,  1.3439e-02, -7.1157e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-7.1666e-03, -2.4282e-02,  3.8485e-02],\n",
      "          [-2.0643e-02, -3.7848e-03,  5.6177e-04],\n",
      "          [-3.0869e-02,  9.1058e-04,  2.2671e-03]],\n",
      "\n",
      "         [[-3.0216e-03,  3.4873e-02, -3.9134e-02],\n",
      "          [ 2.9399e-02,  4.1601e-03, -2.5052e-02],\n",
      "          [ 2.2951e-02,  2.8175e-02,  2.1757e-02]],\n",
      "\n",
      "         [[-1.3869e-02,  3.0550e-02, -1.9649e-02],\n",
      "          [ 3.6226e-02, -2.4526e-02, -2.4766e-02],\n",
      "          [ 3.1719e-02, -2.5172e-02, -2.0364e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 8.6481e-03, -2.1903e-02, -1.0527e-02],\n",
      "          [-4.1636e-02,  3.2860e-02,  2.4294e-02],\n",
      "          [-2.1457e-02,  2.9454e-02, -2.4404e-02]],\n",
      "\n",
      "         [[-3.5398e-03,  1.7936e-02, -1.6093e-02],\n",
      "          [ 1.7175e-02,  4.0362e-02, -1.5835e-02],\n",
      "          [-3.6326e-02, -2.6677e-02, -6.2295e-03]],\n",
      "\n",
      "         [[ 4.1387e-02,  3.1755e-03, -9.8965e-03],\n",
      "          [ 2.1712e-02, -1.4680e-02, -2.8881e-02],\n",
      "          [ 2.6618e-02,  2.4277e-02, -3.7813e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.1041e-02, -3.0359e-02, -2.7486e-02],\n",
      "          [-5.5512e-03,  1.4161e-02, -2.3688e-02],\n",
      "          [ 3.1490e-03,  4.0604e-02, -2.7021e-02]],\n",
      "\n",
      "         [[-3.5831e-02, -7.7145e-03, -2.5884e-02],\n",
      "          [ 3.0287e-03,  3.1884e-02,  1.5543e-02],\n",
      "          [-1.5791e-03, -2.3747e-03, -2.5084e-02]],\n",
      "\n",
      "         [[ 5.3499e-05, -3.3740e-02, -2.0822e-02],\n",
      "          [ 9.2322e-03, -3.3877e-02, -1.0914e-02],\n",
      "          [ 2.4145e-02,  6.8035e-05, -1.1410e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.4585e-02, -2.1957e-02,  9.1009e-03],\n",
      "          [ 1.3561e-02, -4.4318e-03,  1.5575e-02],\n",
      "          [ 3.6876e-02,  2.7332e-02,  2.8017e-02]],\n",
      "\n",
      "         [[-3.7452e-03, -1.2740e-02, -1.9063e-02],\n",
      "          [ 6.8234e-04, -1.0049e-02, -3.9669e-02],\n",
      "          [-7.0398e-03, -1.8308e-02,  1.7959e-02]],\n",
      "\n",
      "         [[-2.5894e-02, -8.2183e-03, -3.4178e-02],\n",
      "          [ 1.0342e-02, -3.6128e-02,  3.5058e-02],\n",
      "          [-6.0770e-03, -3.3921e-02, -2.5567e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.8534e-02,  1.0076e-02, -2.0070e-02],\n",
      "          [-3.4861e-03,  1.2731e-03,  4.0291e-02],\n",
      "          [ 2.8730e-03,  2.3109e-02,  3.7734e-02]],\n",
      "\n",
      "         [[ 3.3009e-02,  4.7123e-03, -2.1058e-02],\n",
      "          [ 2.8783e-02, -3.7712e-02, -5.5555e-03],\n",
      "          [-3.5095e-02,  4.0386e-02,  2.9834e-02]],\n",
      "\n",
      "         [[ 2.6901e-02,  1.5100e-02,  3.5056e-02],\n",
      "          [ 3.6563e-02, -3.5803e-02, -1.2989e-02],\n",
      "          [ 2.9968e-02,  2.5132e-02, -2.9382e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0349,  0.0037, -0.0262,  0.0204, -0.0288,  0.0142,  0.0399,  0.0151,\n",
      "         0.0301, -0.0013,  0.0376,  0.0246,  0.0094, -0.0110, -0.0051, -0.0289,\n",
      "         0.0217, -0.0300, -0.0075,  0.0171,  0.0171, -0.0111,  0.0090, -0.0354,\n",
      "         0.0143,  0.0182,  0.0348, -0.0088, -0.0387, -0.0389, -0.0267,  0.0388,\n",
      "        -0.0308,  0.0020, -0.0108,  0.0213, -0.0234,  0.0139,  0.0249, -0.0016,\n",
      "         0.0082, -0.0030, -0.0276, -0.0141,  0.0204,  0.0237, -0.0389, -0.0316,\n",
      "        -0.0101, -0.0177,  0.0164, -0.0033,  0.0335, -0.0136,  0.0108,  0.0392,\n",
      "         0.0301, -0.0104,  0.0355, -0.0337, -0.0081,  0.0020, -0.0065,  0.0120],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-0.0003,  0.0342, -0.0065],\n",
      "          [-0.0308,  0.0033, -0.0298],\n",
      "          [ 0.0241, -0.0218,  0.0086]],\n",
      "\n",
      "         [[ 0.0175,  0.0122,  0.0058],\n",
      "          [ 0.0168, -0.0341, -0.0294],\n",
      "          [ 0.0149, -0.0254,  0.0172]],\n",
      "\n",
      "         [[ 0.0301,  0.0197,  0.0026],\n",
      "          [ 0.0368,  0.0052, -0.0111],\n",
      "          [ 0.0053, -0.0186, -0.0346]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0411, -0.0244, -0.0279],\n",
      "          [ 0.0148, -0.0235, -0.0055],\n",
      "          [ 0.0244, -0.0153, -0.0282]],\n",
      "\n",
      "         [[-0.0333,  0.0404, -0.0287],\n",
      "          [ 0.0124, -0.0128, -0.0201],\n",
      "          [ 0.0377, -0.0353, -0.0127]],\n",
      "\n",
      "         [[-0.0265, -0.0367,  0.0041],\n",
      "          [ 0.0248, -0.0238, -0.0026],\n",
      "          [ 0.0355,  0.0390, -0.0137]]],\n",
      "\n",
      "\n",
      "        [[[-0.0334,  0.0108,  0.0308],\n",
      "          [-0.0215, -0.0028,  0.0042],\n",
      "          [-0.0175,  0.0294,  0.0361]],\n",
      "\n",
      "         [[ 0.0245,  0.0048,  0.0226],\n",
      "          [ 0.0064,  0.0007, -0.0092],\n",
      "          [ 0.0343,  0.0045,  0.0041]],\n",
      "\n",
      "         [[-0.0262, -0.0159, -0.0155],\n",
      "          [-0.0118,  0.0229, -0.0207],\n",
      "          [-0.0359,  0.0410, -0.0122]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0222, -0.0198, -0.0121],\n",
      "          [ 0.0093, -0.0082,  0.0334],\n",
      "          [ 0.0380,  0.0181,  0.0329]],\n",
      "\n",
      "         [[ 0.0134,  0.0055, -0.0144],\n",
      "          [-0.0263, -0.0328,  0.0145],\n",
      "          [ 0.0405, -0.0346,  0.0192]],\n",
      "\n",
      "         [[ 0.0267, -0.0335, -0.0168],\n",
      "          [ 0.0339,  0.0153, -0.0281],\n",
      "          [ 0.0264, -0.0304, -0.0038]]],\n",
      "\n",
      "\n",
      "        [[[-0.0001, -0.0033, -0.0288],\n",
      "          [-0.0185,  0.0356, -0.0270],\n",
      "          [ 0.0196,  0.0207,  0.0186]],\n",
      "\n",
      "         [[ 0.0080,  0.0216, -0.0222],\n",
      "          [ 0.0127, -0.0399, -0.0364],\n",
      "          [ 0.0229, -0.0354, -0.0149]],\n",
      "\n",
      "         [[ 0.0263,  0.0322,  0.0262],\n",
      "          [-0.0340,  0.0060,  0.0111],\n",
      "          [ 0.0095, -0.0152, -0.0337]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0111, -0.0006, -0.0204],\n",
      "          [ 0.0084, -0.0162, -0.0133],\n",
      "          [-0.0223,  0.0273,  0.0293]],\n",
      "\n",
      "         [[-0.0009, -0.0081,  0.0140],\n",
      "          [ 0.0298,  0.0330,  0.0070],\n",
      "          [ 0.0234, -0.0217,  0.0297]],\n",
      "\n",
      "         [[ 0.0214, -0.0365, -0.0332],\n",
      "          [ 0.0260, -0.0177,  0.0023],\n",
      "          [-0.0108, -0.0071, -0.0201]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.0135,  0.0185,  0.0296],\n",
      "          [-0.0083,  0.0386, -0.0303],\n",
      "          [ 0.0219, -0.0403, -0.0351]],\n",
      "\n",
      "         [[-0.0363,  0.0152, -0.0314],\n",
      "          [ 0.0138, -0.0075,  0.0005],\n",
      "          [ 0.0144, -0.0398, -0.0067]],\n",
      "\n",
      "         [[-0.0366,  0.0090,  0.0052],\n",
      "          [ 0.0134, -0.0361,  0.0046],\n",
      "          [-0.0377,  0.0258,  0.0046]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0043, -0.0368, -0.0200],\n",
      "          [ 0.0173,  0.0057, -0.0315],\n",
      "          [-0.0177,  0.0045, -0.0276]],\n",
      "\n",
      "         [[ 0.0414, -0.0067,  0.0343],\n",
      "          [-0.0117, -0.0100, -0.0391],\n",
      "          [-0.0073, -0.0338,  0.0313]],\n",
      "\n",
      "         [[-0.0232,  0.0271,  0.0308],\n",
      "          [-0.0129, -0.0161,  0.0262],\n",
      "          [ 0.0227,  0.0374, -0.0203]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0263,  0.0361,  0.0146],\n",
      "          [ 0.0044,  0.0337,  0.0185],\n",
      "          [-0.0194, -0.0008, -0.0363]],\n",
      "\n",
      "         [[-0.0021, -0.0372, -0.0158],\n",
      "          [-0.0344, -0.0137,  0.0108],\n",
      "          [-0.0119, -0.0264,  0.0186]],\n",
      "\n",
      "         [[-0.0396, -0.0190,  0.0334],\n",
      "          [ 0.0128,  0.0306,  0.0175],\n",
      "          [-0.0315, -0.0108, -0.0198]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0244, -0.0141,  0.0169],\n",
      "          [ 0.0153, -0.0374,  0.0349],\n",
      "          [-0.0368,  0.0181, -0.0176]],\n",
      "\n",
      "         [[-0.0035, -0.0122, -0.0346],\n",
      "          [ 0.0245,  0.0259, -0.0373],\n",
      "          [-0.0068,  0.0140, -0.0275]],\n",
      "\n",
      "         [[ 0.0253, -0.0041,  0.0108],\n",
      "          [-0.0308, -0.0117,  0.0295],\n",
      "          [-0.0043, -0.0060,  0.0351]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0099, -0.0127,  0.0048],\n",
      "          [ 0.0076,  0.0156,  0.0055],\n",
      "          [ 0.0007, -0.0270, -0.0400]],\n",
      "\n",
      "         [[ 0.0041, -0.0225, -0.0317],\n",
      "          [-0.0412,  0.0035, -0.0361],\n",
      "          [-0.0258, -0.0326,  0.0256]],\n",
      "\n",
      "         [[ 0.0080,  0.0070, -0.0341],\n",
      "          [ 0.0130,  0.0231, -0.0107],\n",
      "          [-0.0292, -0.0330,  0.0006]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0306,  0.0358, -0.0193],\n",
      "          [-0.0043,  0.0206, -0.0260],\n",
      "          [-0.0281,  0.0272,  0.0280]],\n",
      "\n",
      "         [[-0.0321, -0.0289, -0.0187],\n",
      "          [-0.0351,  0.0297,  0.0316],\n",
      "          [-0.0269, -0.0044, -0.0398]],\n",
      "\n",
      "         [[-0.0171, -0.0264, -0.0232],\n",
      "          [-0.0294, -0.0080, -0.0370],\n",
      "          [-0.0149,  0.0247,  0.0098]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0138,  0.0057, -0.0228,  0.0127,  0.0379, -0.0322, -0.0033,  0.0174,\n",
      "         0.0060,  0.0172,  0.0049, -0.0411, -0.0185, -0.0007, -0.0298, -0.0160,\n",
      "        -0.0051, -0.0265, -0.0386,  0.0093,  0.0299,  0.0334, -0.0373, -0.0203,\n",
      "         0.0214,  0.0245, -0.0089,  0.0023, -0.0088,  0.0238, -0.0225,  0.0386,\n",
      "        -0.0150, -0.0063, -0.0207, -0.0041,  0.0151,  0.0138,  0.0195, -0.0120,\n",
      "        -0.0010,  0.0265, -0.0207,  0.0150, -0.0192,  0.0255, -0.0379, -0.0010,\n",
      "         0.0219, -0.0176, -0.0091, -0.0130,  0.0313,  0.0072, -0.0051, -0.0228,\n",
      "        -0.0216,  0.0175, -0.0019, -0.0126,  0.0085,  0.0132,  0.0199,  0.0373,\n",
      "        -0.0112, -0.0147,  0.0287, -0.0207,  0.0153,  0.0074,  0.0294, -0.0047,\n",
      "         0.0413,  0.0384,  0.0270,  0.0170, -0.0077, -0.0037,  0.0066,  0.0155,\n",
      "         0.0376, -0.0123, -0.0359, -0.0027, -0.0293,  0.0168,  0.0316,  0.0184,\n",
      "         0.0313,  0.0346,  0.0016, -0.0386, -0.0193,  0.0272,  0.0057,  0.0013,\n",
      "         0.0114, -0.0208, -0.0127, -0.0209, -0.0337, -0.0153,  0.0413,  0.0047,\n",
      "         0.0306,  0.0165, -0.0315,  0.0358, -0.0326,  0.0196,  0.0236, -0.0075,\n",
      "         0.0098, -0.0320, -0.0338, -0.0173,  0.0264,  0.0326, -0.0246,  0.0085,\n",
      "         0.0293,  0.0250, -0.0109,  0.0336,  0.0360,  0.0110,  0.0416,  0.0334],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-4.3357e-03,  2.3052e-02, -1.7917e-02],\n",
      "          [-2.4781e-02,  2.6756e-02,  7.1597e-03],\n",
      "          [ 1.0103e-02, -1.3169e-02, -1.8286e-02]],\n",
      "\n",
      "         [[ 2.2989e-02,  2.1569e-05, -2.2708e-02],\n",
      "          [-1.6796e-03, -2.6541e-02, -2.0532e-02],\n",
      "          [ 2.8326e-03,  8.5450e-03,  2.1749e-02]],\n",
      "\n",
      "         [[-1.8868e-02, -4.5271e-03,  2.0424e-02],\n",
      "          [ 4.5168e-04,  1.1200e-02,  1.7679e-02],\n",
      "          [-2.4530e-02,  1.7854e-03, -1.3863e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.2479e-02,  1.0428e-02,  9.6579e-04],\n",
      "          [-7.6198e-03,  1.0445e-02,  2.2619e-02],\n",
      "          [-5.7411e-03,  1.0666e-02, -1.6392e-02]],\n",
      "\n",
      "         [[-1.2220e-02, -2.8054e-02, -5.6841e-04],\n",
      "          [ 2.7242e-02, -2.6640e-02, -2.9086e-02],\n",
      "          [-1.3011e-02, -2.8015e-03,  4.5456e-03]],\n",
      "\n",
      "         [[ 9.6415e-03, -8.7155e-03,  2.1516e-02],\n",
      "          [-1.7064e-02, -7.6259e-03,  7.7368e-03],\n",
      "          [ 2.1263e-03, -2.6250e-02, -1.6620e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.2337e-02,  3.1010e-03,  1.6187e-02],\n",
      "          [-6.8546e-03,  7.8710e-03, -1.3030e-02],\n",
      "          [ 2.2469e-02, -1.3968e-02, -5.9606e-03]],\n",
      "\n",
      "         [[-2.7332e-02,  3.8892e-03,  9.7177e-03],\n",
      "          [-2.0565e-02,  2.7696e-03, -2.0889e-02],\n",
      "          [ 2.5415e-02,  2.4255e-02, -1.8866e-02]],\n",
      "\n",
      "         [[-1.8227e-02,  2.3970e-02, -4.7680e-03],\n",
      "          [-1.6653e-03, -2.8816e-02, -2.6530e-02],\n",
      "          [-2.0659e-02,  2.5997e-02, -5.9362e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.6123e-02, -2.6180e-03, -1.6064e-02],\n",
      "          [ 1.5707e-02,  2.6221e-02, -1.7734e-02],\n",
      "          [-2.0820e-02, -1.1738e-03, -1.3695e-03]],\n",
      "\n",
      "         [[ 2.5048e-02, -1.2754e-02, -6.0894e-04],\n",
      "          [-1.2654e-02,  5.5138e-03,  3.1030e-03],\n",
      "          [ 6.5214e-03, -2.1233e-02,  1.0434e-02]],\n",
      "\n",
      "         [[-1.4369e-02, -2.2306e-02,  2.5474e-02],\n",
      "          [ 2.9408e-02, -1.8178e-02, -5.2829e-04],\n",
      "          [ 1.3904e-02,  7.5962e-03, -6.3171e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 2.4524e-02,  3.0769e-03, -2.3054e-02],\n",
      "          [ 1.2461e-02, -2.7019e-02,  5.6243e-03],\n",
      "          [ 2.5164e-02,  1.6518e-02, -7.3066e-03]],\n",
      "\n",
      "         [[-1.1444e-03, -2.1560e-02,  6.6212e-03],\n",
      "          [ 2.1712e-02, -1.6022e-03, -2.4596e-03],\n",
      "          [ 2.5547e-02,  2.3802e-02, -1.9238e-02]],\n",
      "\n",
      "         [[ 2.3089e-02, -3.6097e-03, -1.0828e-02],\n",
      "          [-1.2167e-02,  1.9226e-02, -1.5277e-02],\n",
      "          [ 2.9090e-02,  1.5036e-02, -4.6568e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0234e-02, -2.8546e-02, -2.0526e-02],\n",
      "          [-2.3656e-02, -2.6253e-02, -8.4374e-05],\n",
      "          [ 1.4439e-02,  2.8230e-02,  8.8014e-03]],\n",
      "\n",
      "         [[ 7.6351e-03,  2.0578e-02, -2.7488e-02],\n",
      "          [ 2.9138e-02, -2.1692e-03,  2.5994e-02],\n",
      "          [ 2.6782e-02,  1.1930e-02, -1.2930e-03]],\n",
      "\n",
      "         [[-2.7082e-02,  2.2838e-02, -7.0231e-03],\n",
      "          [ 2.6991e-02, -1.9026e-02,  1.9221e-02],\n",
      "          [ 8.7192e-03,  1.0983e-02,  1.6283e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 2.7211e-02, -1.4014e-03, -1.2927e-02],\n",
      "          [-5.8432e-03,  2.6936e-02,  9.0214e-03],\n",
      "          [-8.3808e-03,  7.8144e-03,  2.5266e-02]],\n",
      "\n",
      "         [[-7.3229e-03, -1.6190e-02, -2.5437e-02],\n",
      "          [-2.9395e-02, -2.0348e-03,  1.8903e-02],\n",
      "          [-1.5880e-03,  1.3313e-02,  1.8463e-02]],\n",
      "\n",
      "         [[ 3.6346e-04, -2.1165e-02, -8.3176e-03],\n",
      "          [ 1.2784e-02,  3.5959e-03,  1.3113e-02],\n",
      "          [ 4.5222e-03,  2.8057e-02, -3.9090e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.1078e-02,  2.0363e-02,  1.6056e-02],\n",
      "          [ 2.6910e-02, -5.5436e-03, -7.5579e-03],\n",
      "          [ 1.5941e-02,  9.6254e-03,  6.5553e-03]],\n",
      "\n",
      "         [[ 2.6877e-02, -7.4420e-03, -1.8908e-04],\n",
      "          [-2.2301e-02, -2.6803e-02,  2.3279e-02],\n",
      "          [-2.6801e-02,  1.0706e-02, -8.7350e-03]],\n",
      "\n",
      "         [[-3.1578e-03,  2.5267e-02, -7.2994e-03],\n",
      "          [ 2.0461e-02,  6.1988e-03,  7.2391e-03],\n",
      "          [ 2.3530e-02, -2.5015e-02,  1.7783e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.4703e-02,  5.4266e-03, -2.2234e-02],\n",
      "          [-2.8874e-02,  2.1994e-02,  1.6952e-02],\n",
      "          [ 1.5088e-02, -1.6811e-02, -2.1099e-02]],\n",
      "\n",
      "         [[ 6.0692e-03,  1.3832e-02, -2.8026e-02],\n",
      "          [-1.0160e-02,  2.0484e-02, -2.9237e-02],\n",
      "          [-2.3864e-03,  2.4714e-02,  2.0499e-02]],\n",
      "\n",
      "         [[-8.4248e-03,  5.0560e-03, -2.0497e-02],\n",
      "          [ 2.0615e-02,  1.8031e-02,  1.5384e-02],\n",
      "          [ 2.6827e-02, -2.7965e-02, -1.0638e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.2777e-02, -2.3149e-02,  1.4320e-02],\n",
      "          [ 2.4634e-02, -9.5616e-03,  1.8964e-02],\n",
      "          [ 6.3329e-03, -1.0113e-02, -2.3679e-03]],\n",
      "\n",
      "         [[-1.8506e-02, -2.5268e-02, -1.2766e-02],\n",
      "          [ 1.5997e-02, -6.2852e-03, -1.1700e-02],\n",
      "          [ 5.8500e-03, -2.4139e-02, -1.8420e-03]],\n",
      "\n",
      "         [[ 2.7180e-02, -2.8765e-02,  1.8565e-02],\n",
      "          [-1.5654e-02, -1.5903e-02,  1.1048e-02],\n",
      "          [ 7.6467e-03, -3.3543e-03,  9.4158e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.4365e-02, -1.9441e-02, -1.0071e-02],\n",
      "          [-2.3726e-03,  6.8855e-03,  2.3535e-02],\n",
      "          [-4.1934e-03, -2.7583e-02, -1.1419e-02]],\n",
      "\n",
      "         [[ 2.7734e-02, -9.6111e-03, -5.0347e-03],\n",
      "          [ 1.6272e-02,  1.8892e-02, -1.4660e-02],\n",
      "          [ 2.0307e-02, -1.8399e-02, -7.7865e-03]],\n",
      "\n",
      "         [[-1.4039e-02,  8.8434e-03,  2.6344e-02],\n",
      "          [-2.0666e-02,  2.7999e-02, -1.8693e-02],\n",
      "          [-8.8575e-04,  4.2160e-03,  3.8775e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.6298e-02,  2.1106e-02, -2.5619e-02],\n",
      "          [-1.8521e-02, -2.1299e-03,  2.8824e-03],\n",
      "          [-2.8453e-02,  1.1678e-02,  1.0923e-02]],\n",
      "\n",
      "         [[ 1.0890e-02,  2.9248e-02, -2.9371e-02],\n",
      "          [ 1.9533e-02, -1.1632e-02,  8.4019e-03],\n",
      "          [ 2.3523e-04, -2.3116e-02, -8.9626e-03]],\n",
      "\n",
      "         [[ 1.1271e-02, -1.6698e-03,  2.5329e-02],\n",
      "          [-8.3189e-03, -2.8868e-02, -4.9728e-03],\n",
      "          [-4.2296e-03, -2.2607e-02, -1.1988e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0174, -0.0276,  0.0100,  0.0218, -0.0185, -0.0189, -0.0117,  0.0104,\n",
      "        -0.0116, -0.0247, -0.0183,  0.0083,  0.0052,  0.0281,  0.0282,  0.0161,\n",
      "         0.0026,  0.0256, -0.0012, -0.0211,  0.0109, -0.0010,  0.0294, -0.0177,\n",
      "        -0.0095, -0.0107, -0.0285, -0.0233, -0.0294, -0.0210, -0.0207, -0.0056,\n",
      "         0.0280, -0.0093, -0.0112, -0.0019,  0.0291, -0.0290, -0.0043, -0.0168,\n",
      "         0.0196,  0.0097,  0.0193, -0.0113,  0.0214,  0.0102,  0.0262,  0.0102,\n",
      "        -0.0049,  0.0245,  0.0144, -0.0187, -0.0056, -0.0149,  0.0097, -0.0181,\n",
      "        -0.0241, -0.0228,  0.0045, -0.0076, -0.0130, -0.0003, -0.0229,  0.0064,\n",
      "        -0.0293,  0.0120, -0.0204, -0.0096, -0.0010,  0.0203, -0.0294, -0.0019,\n",
      "        -0.0288,  0.0023,  0.0164, -0.0045, -0.0252, -0.0179, -0.0039,  0.0150,\n",
      "         0.0168, -0.0230, -0.0048,  0.0209, -0.0249,  0.0065, -0.0089,  0.0135,\n",
      "        -0.0244, -0.0125,  0.0204,  0.0252, -0.0130, -0.0165,  0.0104,  0.0178,\n",
      "         0.0274,  0.0064,  0.0266, -0.0224,  0.0056,  0.0172,  0.0104, -0.0123,\n",
      "         0.0119, -0.0080, -0.0234, -0.0240,  0.0123, -0.0111, -0.0021, -0.0226,\n",
      "        -0.0088, -0.0108, -0.0284,  0.0220, -0.0213,  0.0192, -0.0134,  0.0012,\n",
      "         0.0244, -0.0077, -0.0089, -0.0156,  0.0062,  0.0047,  0.0035, -0.0228],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-0.0285,  0.0013, -0.0074],\n",
      "          [ 0.0039, -0.0030, -0.0196],\n",
      "          [-0.0239, -0.0112,  0.0041]],\n",
      "\n",
      "         [[ 0.0007,  0.0183,  0.0259],\n",
      "          [-0.0128, -0.0083, -0.0069],\n",
      "          [ 0.0005,  0.0197, -0.0203]],\n",
      "\n",
      "         [[ 0.0277, -0.0161, -0.0154],\n",
      "          [ 0.0146, -0.0103,  0.0018],\n",
      "          [ 0.0269,  0.0071, -0.0020]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0240, -0.0142, -0.0191],\n",
      "          [-0.0116,  0.0241,  0.0266],\n",
      "          [ 0.0257, -0.0276,  0.0134]],\n",
      "\n",
      "         [[ 0.0245, -0.0043,  0.0016],\n",
      "          [-0.0283, -0.0199, -0.0081],\n",
      "          [-0.0073, -0.0007,  0.0102]],\n",
      "\n",
      "         [[-0.0216,  0.0055,  0.0123],\n",
      "          [ 0.0051, -0.0029, -0.0146],\n",
      "          [-0.0163,  0.0281,  0.0069]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0070, -0.0260,  0.0059],\n",
      "          [ 0.0125, -0.0039,  0.0210],\n",
      "          [-0.0249,  0.0036,  0.0184]],\n",
      "\n",
      "         [[ 0.0286,  0.0175, -0.0024],\n",
      "          [ 0.0082,  0.0210, -0.0026],\n",
      "          [ 0.0200,  0.0209,  0.0081]],\n",
      "\n",
      "         [[ 0.0059, -0.0041,  0.0224],\n",
      "          [-0.0110,  0.0076, -0.0186],\n",
      "          [-0.0172,  0.0195, -0.0228]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0064, -0.0199, -0.0248],\n",
      "          [ 0.0152,  0.0068,  0.0170],\n",
      "          [-0.0222,  0.0079, -0.0007]],\n",
      "\n",
      "         [[-0.0217, -0.0234, -0.0085],\n",
      "          [-0.0288,  0.0239,  0.0006],\n",
      "          [ 0.0028, -0.0254, -0.0285]],\n",
      "\n",
      "         [[ 0.0186,  0.0265, -0.0106],\n",
      "          [ 0.0064, -0.0182,  0.0213],\n",
      "          [-0.0012,  0.0119, -0.0067]]],\n",
      "\n",
      "\n",
      "        [[[-0.0006, -0.0024, -0.0089],\n",
      "          [ 0.0080, -0.0258,  0.0152],\n",
      "          [ 0.0061,  0.0018,  0.0187]],\n",
      "\n",
      "         [[ 0.0115, -0.0203,  0.0072],\n",
      "          [-0.0131,  0.0020,  0.0144],\n",
      "          [-0.0134, -0.0096,  0.0144]],\n",
      "\n",
      "         [[-0.0053,  0.0040, -0.0152],\n",
      "          [-0.0221,  0.0079,  0.0191],\n",
      "          [ 0.0291, -0.0155,  0.0264]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0108, -0.0192, -0.0067],\n",
      "          [-0.0233,  0.0109,  0.0225],\n",
      "          [-0.0112, -0.0278, -0.0173]],\n",
      "\n",
      "         [[ 0.0204, -0.0287,  0.0228],\n",
      "          [ 0.0163, -0.0033, -0.0179],\n",
      "          [-0.0168, -0.0039,  0.0110]],\n",
      "\n",
      "         [[-0.0046, -0.0147, -0.0193],\n",
      "          [-0.0053, -0.0271, -0.0099],\n",
      "          [-0.0105,  0.0173,  0.0022]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0021, -0.0194,  0.0221],\n",
      "          [-0.0206,  0.0130,  0.0156],\n",
      "          [-0.0022, -0.0210, -0.0122]],\n",
      "\n",
      "         [[ 0.0036,  0.0040,  0.0265],\n",
      "          [-0.0045, -0.0205,  0.0244],\n",
      "          [ 0.0003,  0.0179,  0.0275]],\n",
      "\n",
      "         [[-0.0155, -0.0183, -0.0230],\n",
      "          [ 0.0094, -0.0054, -0.0247],\n",
      "          [ 0.0166, -0.0170, -0.0094]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0172,  0.0130,  0.0282],\n",
      "          [-0.0169, -0.0211,  0.0283],\n",
      "          [ 0.0154, -0.0161,  0.0030]],\n",
      "\n",
      "         [[ 0.0142,  0.0007, -0.0256],\n",
      "          [ 0.0073,  0.0228, -0.0255],\n",
      "          [ 0.0005, -0.0074,  0.0044]],\n",
      "\n",
      "         [[-0.0228, -0.0241, -0.0225],\n",
      "          [ 0.0247, -0.0288,  0.0222],\n",
      "          [-0.0165, -0.0028,  0.0291]]],\n",
      "\n",
      "\n",
      "        [[[-0.0084, -0.0201, -0.0053],\n",
      "          [ 0.0009, -0.0207,  0.0162],\n",
      "          [ 0.0135, -0.0039,  0.0261]],\n",
      "\n",
      "         [[ 0.0094,  0.0045, -0.0055],\n",
      "          [ 0.0265, -0.0059, -0.0106],\n",
      "          [-0.0068,  0.0031, -0.0208]],\n",
      "\n",
      "         [[-0.0218,  0.0033,  0.0067],\n",
      "          [-0.0279, -0.0054, -0.0194],\n",
      "          [-0.0103, -0.0023, -0.0177]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0112,  0.0058, -0.0200],\n",
      "          [-0.0187, -0.0185, -0.0151],\n",
      "          [-0.0055,  0.0272,  0.0104]],\n",
      "\n",
      "         [[-0.0051, -0.0219, -0.0128],\n",
      "          [ 0.0290, -0.0069, -0.0065],\n",
      "          [-0.0057,  0.0129,  0.0073]],\n",
      "\n",
      "         [[ 0.0103, -0.0003,  0.0040],\n",
      "          [-0.0170, -0.0086, -0.0254],\n",
      "          [ 0.0149,  0.0035, -0.0188]]],\n",
      "\n",
      "\n",
      "        [[[-0.0084, -0.0213,  0.0215],\n",
      "          [ 0.0267,  0.0231,  0.0005],\n",
      "          [ 0.0235, -0.0082,  0.0209]],\n",
      "\n",
      "         [[-0.0019, -0.0193, -0.0124],\n",
      "          [ 0.0101, -0.0221, -0.0011],\n",
      "          [ 0.0259, -0.0163,  0.0114]],\n",
      "\n",
      "         [[ 0.0292,  0.0135,  0.0231],\n",
      "          [ 0.0256, -0.0029,  0.0268],\n",
      "          [ 0.0054, -0.0020, -0.0138]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0133,  0.0012, -0.0087],\n",
      "          [ 0.0240,  0.0285, -0.0031],\n",
      "          [ 0.0248, -0.0262, -0.0163]],\n",
      "\n",
      "         [[ 0.0287,  0.0226,  0.0007],\n",
      "          [ 0.0216, -0.0137,  0.0034],\n",
      "          [ 0.0127,  0.0101,  0.0294]],\n",
      "\n",
      "         [[ 0.0119,  0.0039, -0.0265],\n",
      "          [ 0.0063, -0.0219,  0.0070],\n",
      "          [-0.0091, -0.0260,  0.0166]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0122, -0.0143,  0.0125, -0.0175, -0.0219, -0.0028,  0.0114, -0.0156,\n",
      "        -0.0011, -0.0274, -0.0135, -0.0270, -0.0196, -0.0238, -0.0234, -0.0065,\n",
      "         0.0269,  0.0077, -0.0222,  0.0230,  0.0053,  0.0093, -0.0185,  0.0004,\n",
      "         0.0205,  0.0088, -0.0155,  0.0071,  0.0230, -0.0074,  0.0074, -0.0103,\n",
      "        -0.0192,  0.0028,  0.0126, -0.0251,  0.0091,  0.0090,  0.0242, -0.0069,\n",
      "        -0.0118,  0.0117,  0.0261,  0.0221,  0.0050, -0.0267,  0.0179,  0.0148,\n",
      "         0.0151,  0.0192,  0.0130, -0.0176, -0.0138, -0.0233,  0.0289,  0.0054,\n",
      "        -0.0111,  0.0028, -0.0144,  0.0151, -0.0047,  0.0268, -0.0020,  0.0046,\n",
      "         0.0218,  0.0048,  0.0151, -0.0145,  0.0024, -0.0211, -0.0183, -0.0079,\n",
      "         0.0036,  0.0033,  0.0070,  0.0011, -0.0148, -0.0066, -0.0231, -0.0097,\n",
      "         0.0185, -0.0150,  0.0142, -0.0087, -0.0101,  0.0157,  0.0190,  0.0132,\n",
      "        -0.0094, -0.0132,  0.0234,  0.0008,  0.0163,  0.0259,  0.0025,  0.0224,\n",
      "         0.0093,  0.0099, -0.0096,  0.0011,  0.0008,  0.0281,  0.0020, -0.0119,\n",
      "        -0.0133,  0.0167,  0.0211,  0.0210, -0.0019,  0.0032, -0.0073, -0.0208,\n",
      "         0.0175, -0.0137, -0.0183,  0.0255,  0.0127,  0.0213,  0.0294, -0.0050,\n",
      "         0.0095,  0.0266,  0.0152, -0.0243,  0.0048,  0.0257, -0.0261, -0.0265,\n",
      "        -0.0034,  0.0171,  0.0293,  0.0268,  0.0259,  0.0186, -0.0086,  0.0141,\n",
      "        -0.0221, -0.0179,  0.0292,  0.0283, -0.0072,  0.0191,  0.0156,  0.0270,\n",
      "        -0.0069,  0.0062,  0.0002, -0.0172, -0.0129, -0.0018,  0.0169, -0.0229,\n",
      "         0.0122,  0.0211,  0.0224,  0.0252, -0.0101,  0.0016,  0.0012, -0.0036,\n",
      "        -0.0031, -0.0237, -0.0097,  0.0146,  0.0210, -0.0207,  0.0207,  0.0148,\n",
      "        -0.0276, -0.0087, -0.0001,  0.0196, -0.0245, -0.0275, -0.0013,  0.0229,\n",
      "        -0.0082,  0.0285, -0.0143,  0.0130, -0.0077, -0.0142,  0.0018, -0.0188,\n",
      "        -0.0062, -0.0238, -0.0176,  0.0034, -0.0236, -0.0060,  0.0268, -0.0018,\n",
      "         0.0084,  0.0044,  0.0121, -0.0165,  0.0154,  0.0236, -0.0170, -0.0287,\n",
      "         0.0127,  0.0220, -0.0028, -0.0145, -0.0251, -0.0057, -0.0290, -0.0208,\n",
      "        -0.0080, -0.0169, -0.0197,  0.0106,  0.0069, -0.0022, -0.0041,  0.0098,\n",
      "        -0.0195,  0.0034,  0.0088, -0.0114,  0.0150, -0.0080, -0.0213,  0.0217,\n",
      "         0.0012, -0.0278, -0.0196, -0.0200,  0.0230,  0.0167, -0.0133, -0.0086,\n",
      "         0.0103, -0.0054,  0.0005, -0.0244, -0.0226,  0.0285, -0.0228,  0.0045,\n",
      "        -0.0247,  0.0256, -0.0057,  0.0281,  0.0277,  0.0131,  0.0190,  0.0067,\n",
      "         0.0214,  0.0091,  0.0022,  0.0246,  0.0019, -0.0113,  0.0151, -0.0043],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 1.6658e-02, -1.2922e-02, -8.0195e-03],\n",
      "          [-1.4453e-02, -1.4143e-02,  2.8466e-03],\n",
      "          [ 2.0545e-02,  2.2487e-03,  8.8586e-03]],\n",
      "\n",
      "         [[-5.4331e-03,  9.3823e-03, -1.8483e-02],\n",
      "          [-1.8808e-02,  5.0662e-03, -7.6865e-03],\n",
      "          [-6.9326e-03,  1.1457e-02, -1.9313e-02]],\n",
      "\n",
      "         [[ 1.5183e-02, -5.8641e-03,  7.2037e-03],\n",
      "          [ 1.3123e-02, -1.0726e-02, -1.0609e-02],\n",
      "          [-1.3773e-02, -1.4314e-02, -1.7589e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3558e-02,  1.7720e-02, -9.9550e-04],\n",
      "          [-3.2772e-03, -1.5698e-02, -2.6032e-03],\n",
      "          [-1.9062e-02,  2.9373e-03,  1.9887e-02]],\n",
      "\n",
      "         [[-4.8317e-03,  6.6918e-03, -1.1138e-02],\n",
      "          [-1.0825e-02,  2.0598e-02,  3.9346e-03],\n",
      "          [-1.4654e-02, -3.2573e-03, -5.2733e-03]],\n",
      "\n",
      "         [[-8.6352e-04, -8.1565e-03,  1.4682e-04],\n",
      "          [ 7.8758e-03,  1.7017e-02, -7.8092e-03],\n",
      "          [ 1.0989e-02,  5.8022e-03, -1.4996e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.5656e-03,  1.8225e-02, -1.9569e-02],\n",
      "          [-1.7967e-02,  1.3660e-02,  1.6912e-02],\n",
      "          [ 1.8878e-02, -5.0696e-03,  8.2615e-04]],\n",
      "\n",
      "         [[-2.9168e-03, -2.0134e-02,  1.5219e-02],\n",
      "          [-1.1962e-02, -1.9872e-02,  1.6098e-02],\n",
      "          [-2.0351e-02, -7.7400e-03,  1.9333e-02]],\n",
      "\n",
      "         [[ 9.7248e-03, -6.9226e-03, -2.8622e-03],\n",
      "          [-3.6860e-03,  1.1461e-03,  1.2793e-02],\n",
      "          [-6.9806e-03,  6.7260e-03,  1.2224e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.6004e-02, -7.4697e-03,  6.3206e-03],\n",
      "          [-8.7271e-03, -1.9954e-03, -1.8468e-02],\n",
      "          [-4.4075e-03,  1.5246e-02,  1.4856e-02]],\n",
      "\n",
      "         [[ 8.6368e-03,  3.7585e-03,  2.6334e-03],\n",
      "          [ 4.6872e-03,  1.7130e-02, -2.0571e-02],\n",
      "          [ 1.4137e-02, -1.1598e-02, -8.4018e-03]],\n",
      "\n",
      "         [[ 1.6307e-02,  1.2349e-02, -2.2602e-03],\n",
      "          [ 4.2378e-03, -1.0547e-02, -1.9538e-02],\n",
      "          [-1.2050e-02, -2.9091e-03, -1.4345e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.6990e-03,  1.4433e-02,  1.6625e-02],\n",
      "          [ 1.4186e-03,  9.6844e-03,  1.0663e-02],\n",
      "          [ 4.7918e-03,  1.2400e-02, -1.1243e-03]],\n",
      "\n",
      "         [[ 9.1905e-03,  8.0959e-04,  1.8035e-02],\n",
      "          [-4.6131e-03,  5.7840e-03, -1.0139e-02],\n",
      "          [ 1.5758e-02,  1.4779e-02,  1.6762e-02]],\n",
      "\n",
      "         [[ 1.3697e-02, -1.2927e-02,  1.3352e-02],\n",
      "          [-7.0374e-03,  9.6315e-03,  2.0749e-02],\n",
      "          [-1.4364e-02, -2.0605e-02, -9.0191e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1509e-03, -1.7256e-02, -4.6160e-03],\n",
      "          [ 4.0731e-03,  9.3172e-04,  6.6037e-03],\n",
      "          [-2.0088e-02, -1.1188e-02,  6.0601e-03]],\n",
      "\n",
      "         [[ 5.7713e-03,  7.6984e-03,  1.3740e-02],\n",
      "          [-8.8278e-03, -1.8547e-02, -1.7333e-02],\n",
      "          [ 6.5467e-03,  6.3886e-03, -7.3406e-03]],\n",
      "\n",
      "         [[-1.3517e-02,  9.4161e-04,  1.6777e-02],\n",
      "          [ 2.0345e-02, -1.4535e-02,  6.7301e-03],\n",
      "          [-8.9403e-03,  6.7619e-03,  1.5348e-03]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-1.7546e-02,  6.2101e-03,  1.7745e-03],\n",
      "          [-6.5191e-03,  3.8509e-03,  6.4150e-03],\n",
      "          [ 1.9208e-02, -3.7450e-03, -3.0817e-03]],\n",
      "\n",
      "         [[-1.0958e-04,  7.6501e-03,  5.6553e-03],\n",
      "          [ 1.5610e-02, -3.3353e-03, -1.8251e-02],\n",
      "          [-4.4690e-03, -6.5195e-03, -1.2392e-02]],\n",
      "\n",
      "         [[ 8.8760e-03, -2.3043e-03, -6.2313e-04],\n",
      "          [ 1.1891e-02,  1.9625e-02, -1.6243e-02],\n",
      "          [-1.5468e-02, -1.4869e-02, -1.5011e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.9541e-05,  7.8002e-03,  4.3886e-04],\n",
      "          [-1.6320e-02, -2.0623e-02, -1.5791e-03],\n",
      "          [-6.0379e-03, -2.1468e-03,  7.4068e-03]],\n",
      "\n",
      "         [[ 1.3374e-02,  1.6722e-02, -1.2463e-02],\n",
      "          [-9.0882e-03, -1.9431e-02,  5.2425e-03],\n",
      "          [ 2.0033e-02, -1.0817e-02, -1.0512e-02]],\n",
      "\n",
      "         [[-1.9210e-02,  3.7251e-03, -1.8702e-02],\n",
      "          [-6.8940e-03, -1.1114e-03,  9.2477e-03],\n",
      "          [ 4.1092e-03,  4.6257e-03,  4.9718e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 3.2383e-03, -1.3503e-02, -2.0153e-02],\n",
      "          [ 1.6875e-02,  3.8272e-03,  1.1990e-03],\n",
      "          [-9.8881e-03, -3.7618e-04,  1.1814e-02]],\n",
      "\n",
      "         [[ 1.2157e-02, -2.0729e-02, -2.8367e-03],\n",
      "          [ 1.6248e-02, -8.3867e-03,  1.3926e-02],\n",
      "          [ 1.1510e-02,  1.7146e-02, -1.8189e-02]],\n",
      "\n",
      "         [[-1.7690e-02, -1.7812e-02, -1.9654e-02],\n",
      "          [ 1.5072e-02, -5.0671e-03, -1.0309e-02],\n",
      "          [ 1.9293e-02,  1.7752e-02, -1.0097e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.8935e-02,  1.8260e-02, -1.3578e-02],\n",
      "          [ 1.5829e-04, -2.0007e-02,  1.4191e-02],\n",
      "          [-1.6017e-02, -1.4451e-02, -5.2509e-03]],\n",
      "\n",
      "         [[ 4.3566e-03, -1.7871e-03,  1.7749e-02],\n",
      "          [-8.0822e-03, -1.8644e-02, -5.8270e-03],\n",
      "          [ 2.1980e-04,  1.1701e-02,  1.6297e-02]],\n",
      "\n",
      "         [[ 5.1513e-03,  5.1766e-03, -9.7428e-04],\n",
      "          [ 6.8063e-04, -1.4505e-02, -1.9659e-02],\n",
      "          [-1.8619e-02, -9.6914e-03,  5.6151e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.2062e-03, -8.5066e-03, -1.9224e-02],\n",
      "          [ 1.9555e-02, -1.6374e-02, -1.7075e-02],\n",
      "          [-1.4892e-02,  9.9467e-03, -1.1881e-02]],\n",
      "\n",
      "         [[ 1.0020e-02,  9.8380e-03,  6.3668e-03],\n",
      "          [ 1.9690e-02,  9.2100e-03,  2.0447e-03],\n",
      "          [ 2.3070e-03,  1.7480e-02, -1.5729e-02]],\n",
      "\n",
      "         [[ 9.2462e-03, -7.0597e-03,  4.3196e-03],\n",
      "          [ 1.4234e-03, -6.4818e-03, -4.5993e-03],\n",
      "          [-1.6998e-04, -1.0441e-03, -1.9555e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.9310e-03, -9.3611e-03, -1.4976e-02],\n",
      "          [ 2.0274e-02,  1.8664e-02, -1.2162e-02],\n",
      "          [-1.4738e-02, -6.9871e-03, -6.4134e-03]],\n",
      "\n",
      "         [[-1.1709e-02, -1.9723e-02,  7.0989e-03],\n",
      "          [-1.5247e-02, -3.4883e-03, -3.9588e-03],\n",
      "          [ 2.0232e-02,  2.0347e-02,  7.0390e-03]],\n",
      "\n",
      "         [[-1.3111e-03, -1.1385e-02, -7.0219e-04],\n",
      "          [-2.2304e-03, -3.1248e-03, -1.5386e-02],\n",
      "          [-1.2416e-02,  1.2096e-02, -1.5144e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 2.2627e-03, -6.1557e-03, -1.8582e-02, -1.3868e-03,  2.4992e-03,\n",
      "        -9.4614e-03,  1.2919e-02,  1.0969e-02,  1.9751e-02,  2.0187e-02,\n",
      "         7.3855e-03,  4.8001e-03,  5.4111e-03, -1.3124e-02, -1.7264e-02,\n",
      "         2.0530e-02,  1.7381e-02, -1.8550e-02, -1.4204e-02,  1.2722e-02,\n",
      "         7.7158e-03, -4.9709e-03, -9.9834e-04,  1.3883e-02, -1.1723e-02,\n",
      "        -2.0335e-02, -8.3469e-03, -7.4594e-03,  6.7805e-03, -6.0062e-04,\n",
      "        -1.7735e-02,  9.1793e-03,  1.4884e-03,  9.6530e-03,  1.4464e-02,\n",
      "         8.5128e-03, -6.3259e-03,  2.0058e-02,  1.4582e-02,  1.0692e-02,\n",
      "         1.7750e-02, -6.0865e-03, -1.1226e-02, -1.1949e-02,  1.4604e-02,\n",
      "        -1.4684e-02,  9.4778e-03,  1.8575e-02,  8.2236e-04, -1.5255e-02,\n",
      "        -2.2325e-04,  1.8835e-02, -4.8146e-03,  7.2784e-03,  2.3392e-03,\n",
      "         6.7794e-03, -8.3847e-03,  1.0534e-02,  1.3307e-02, -8.3240e-03,\n",
      "         2.0497e-02, -6.6443e-03,  9.8028e-04, -1.8673e-02, -1.6712e-03,\n",
      "         1.4582e-02,  1.3505e-02, -1.0933e-02, -4.4510e-05,  1.3631e-02,\n",
      "        -2.0485e-02, -1.9673e-02, -1.7859e-02, -2.0472e-02,  1.8908e-02,\n",
      "        -9.7831e-03,  1.7971e-02,  9.1531e-03,  1.8749e-02,  1.3893e-02,\n",
      "        -1.0743e-03,  1.6515e-02,  1.6852e-02,  1.7400e-02, -1.2146e-02,\n",
      "        -7.7328e-04,  1.6789e-02,  2.5890e-03, -4.5478e-03, -4.2604e-03,\n",
      "         2.0226e-02,  1.3322e-02, -8.0473e-03, -4.2424e-03,  1.6091e-04,\n",
      "         1.3565e-02,  2.8892e-03, -1.2138e-02, -2.0105e-02,  1.2757e-02,\n",
      "        -2.0619e-02, -4.3809e-03,  3.2960e-03,  6.9873e-03, -1.3990e-03,\n",
      "        -1.3609e-02, -1.8296e-03, -1.5362e-02,  8.8609e-03, -1.6133e-02,\n",
      "         1.6092e-02,  1.5315e-02,  8.0522e-03,  1.9302e-02, -1.4129e-03,\n",
      "         3.1007e-05,  1.9558e-02,  3.8249e-03, -4.5580e-04,  9.1694e-04,\n",
      "         1.4551e-02,  3.0716e-03,  1.1494e-02, -4.4402e-03,  6.1508e-03,\n",
      "        -1.8243e-02, -1.4938e-02, -7.7133e-03, -1.6792e-02,  1.4607e-02,\n",
      "         2.2111e-03,  2.4736e-03, -1.3654e-02, -1.7737e-02, -7.3744e-03,\n",
      "        -6.8752e-03,  1.8981e-02, -3.7499e-03,  1.5966e-03, -7.6153e-03,\n",
      "        -1.3393e-02, -1.1439e-02,  2.0609e-02, -5.5082e-03, -2.0664e-02,\n",
      "        -1.4600e-02,  1.9244e-02,  1.4955e-02,  9.1996e-03,  1.0404e-03,\n",
      "         1.5118e-02,  4.1252e-03, -4.0011e-03,  1.1371e-03, -8.8373e-03,\n",
      "        -7.5050e-03, -1.8766e-02, -3.0340e-03, -1.7311e-03, -1.2746e-02,\n",
      "         1.9432e-03,  1.9961e-02, -1.4822e-02, -1.4276e-02,  1.5413e-02,\n",
      "         1.4893e-02, -2.0430e-02,  2.4289e-03, -1.2351e-02,  1.4364e-02,\n",
      "        -1.1376e-02, -6.7886e-03,  7.7276e-03, -7.9013e-05, -5.3842e-03,\n",
      "         1.2618e-02,  3.8959e-03,  6.6922e-03, -1.8309e-02, -1.2325e-02,\n",
      "        -5.8530e-03, -1.4342e-02,  4.7839e-03,  1.4390e-02,  8.8966e-03,\n",
      "        -7.3407e-03,  1.0489e-02,  1.7645e-02,  1.7981e-02, -8.0996e-03,\n",
      "         1.2226e-02,  6.8700e-04,  1.0050e-02,  1.8305e-02,  1.0967e-02,\n",
      "         1.0818e-02,  1.7052e-02, -1.7942e-02, -1.9284e-02,  2.0458e-02,\n",
      "        -1.7618e-02, -1.5587e-02,  1.3046e-02, -1.1085e-02,  1.7577e-02,\n",
      "         9.9575e-03,  1.9053e-02,  7.0385e-03, -1.6609e-02,  1.8908e-02,\n",
      "        -1.9688e-02, -2.8888e-03,  1.8294e-02,  7.6503e-03, -6.4032e-05,\n",
      "        -1.0575e-02, -9.2371e-03, -4.0976e-03, -6.6915e-03,  1.9846e-02,\n",
      "         8.6701e-03, -5.0152e-03, -3.4233e-03,  5.3735e-03, -7.0870e-03,\n",
      "        -8.6384e-03, -5.8165e-04,  7.7479e-03, -9.6833e-03, -1.3758e-02,\n",
      "         2.2906e-03,  1.0919e-02, -1.7767e-02, -1.8880e-02,  2.7270e-03,\n",
      "         1.9984e-02,  1.5993e-03, -1.2457e-02,  1.7610e-02, -1.8346e-02,\n",
      "         8.2348e-03, -3.0986e-03,  8.6661e-03,  1.0277e-03, -1.1346e-02,\n",
      "        -1.6244e-02, -8.2265e-03, -4.0472e-03,  1.3947e-03, -1.0873e-02,\n",
      "         9.6491e-03,  1.9265e-02,  1.9335e-02, -6.3902e-03,  4.3565e-03,\n",
      "        -1.4188e-02], device='cuda:0', requires_grad=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-6.0746e-03, -1.8835e-02,  1.6614e-02],\n",
      "          [-1.8285e-02,  1.1566e-02, -1.4534e-02],\n",
      "          [-1.2251e-04,  1.0550e-03,  9.9729e-03]],\n",
      "\n",
      "         [[-4.5858e-03,  1.2045e-02, -4.5525e-03],\n",
      "          [-1.6405e-02, -2.7222e-03, -1.8634e-02],\n",
      "          [-1.4663e-02, -7.7327e-03, -1.9698e-02]],\n",
      "\n",
      "         [[ 1.5859e-02, -3.6836e-05,  1.7690e-02],\n",
      "          [-6.1781e-03,  1.2440e-03,  4.5568e-03],\n",
      "          [ 8.1002e-03, -2.8859e-03,  1.0530e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.3148e-03,  1.4292e-02,  1.7409e-02],\n",
      "          [ 1.0659e-02,  9.2717e-03,  1.4610e-02],\n",
      "          [-1.4691e-02, -9.4991e-04, -4.8530e-03]],\n",
      "\n",
      "         [[ 1.5821e-02,  1.3400e-02,  1.8762e-02],\n",
      "          [-1.1180e-02, -4.4069e-03,  7.7579e-03],\n",
      "          [-4.3516e-04, -1.1027e-02, -9.1776e-03]],\n",
      "\n",
      "         [[-1.5149e-02, -1.0907e-02,  4.2632e-03],\n",
      "          [-1.8113e-02, -1.8741e-02, -1.9688e-02],\n",
      "          [-1.4076e-02, -3.6571e-03, -5.3659e-04]]],\n",
      "\n",
      "\n",
      "        [[[-4.2516e-04,  2.8335e-03, -1.3370e-02],\n",
      "          [-1.2798e-02, -1.2352e-02,  1.7545e-02],\n",
      "          [-1.2952e-02,  4.2029e-03, -1.0270e-02]],\n",
      "\n",
      "         [[-8.4907e-03, -1.4969e-02, -1.3708e-02],\n",
      "          [ 9.8682e-03,  1.0792e-02, -7.7447e-03],\n",
      "          [-1.5385e-02, -6.3394e-03, -1.7484e-02]],\n",
      "\n",
      "         [[ 3.1862e-03, -1.9899e-02,  1.1614e-02],\n",
      "          [ 1.0998e-02, -4.8682e-03,  1.7336e-03],\n",
      "          [-1.1090e-02,  1.2070e-02,  1.1939e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.5006e-02,  2.0425e-02,  1.3856e-02],\n",
      "          [ 1.6611e-03, -2.0544e-02,  3.2330e-03],\n",
      "          [-6.3116e-03, -9.1537e-03, -1.7882e-03]],\n",
      "\n",
      "         [[-3.4531e-03,  7.7525e-04,  1.1502e-02],\n",
      "          [ 3.4996e-03, -2.6452e-03,  8.9294e-03],\n",
      "          [-3.6722e-03, -1.7510e-02, -4.2738e-03]],\n",
      "\n",
      "         [[ 3.9859e-03,  1.5582e-02, -1.0684e-02],\n",
      "          [-6.6808e-03, -7.9934e-03, -1.0702e-02],\n",
      "          [-1.4000e-02,  1.2009e-02,  4.3959e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.3511e-02,  1.1880e-03, -1.5528e-02],\n",
      "          [-2.0617e-02,  3.7030e-03,  1.9091e-02],\n",
      "          [ 9.1248e-03,  7.7469e-03, -1.0597e-02]],\n",
      "\n",
      "         [[ 2.2214e-03,  5.3004e-03,  4.2776e-03],\n",
      "          [-1.8663e-02,  2.0179e-02, -4.0923e-03],\n",
      "          [-1.5559e-03,  5.8402e-03,  5.7518e-03]],\n",
      "\n",
      "         [[ 9.0442e-03,  1.0541e-02,  9.7770e-03],\n",
      "          [ 8.9242e-03, -8.7986e-03, -1.2356e-02],\n",
      "          [ 1.6869e-02,  2.0687e-02,  3.8698e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.1348e-02, -1.1460e-02,  1.7841e-02],\n",
      "          [ 5.5680e-03,  6.1463e-03, -1.0444e-02],\n",
      "          [ 6.1057e-03,  6.9796e-03, -2.0786e-02]],\n",
      "\n",
      "         [[ 1.8526e-02, -1.0242e-03,  1.7298e-02],\n",
      "          [-1.6213e-02, -1.1114e-02,  5.4526e-03],\n",
      "          [ 6.6797e-03, -2.3866e-03, -5.1087e-04]],\n",
      "\n",
      "         [[ 1.1847e-02, -1.4680e-02,  2.7161e-03],\n",
      "          [-8.4089e-03, -1.2626e-02, -8.6668e-03],\n",
      "          [ 1.2724e-03,  5.8429e-03, -2.0653e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 5.7627e-03,  1.0042e-03,  1.9213e-03],\n",
      "          [ 3.2880e-03,  8.1419e-03,  8.2841e-03],\n",
      "          [ 7.1525e-03, -1.7885e-03,  1.7053e-02]],\n",
      "\n",
      "         [[-5.9560e-03,  7.4287e-03,  3.5894e-03],\n",
      "          [-3.4841e-03,  1.2821e-02,  3.5433e-04],\n",
      "          [-1.7926e-02, -1.7248e-02,  6.2539e-03]],\n",
      "\n",
      "         [[ 2.0701e-02,  1.2142e-02,  1.9946e-02],\n",
      "          [ 1.3101e-02, -1.2821e-02, -8.2907e-03],\n",
      "          [ 1.1987e-02,  1.6058e-02,  2.0387e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.1800e-03, -1.2471e-02, -8.0761e-03],\n",
      "          [ 1.7555e-02, -2.1060e-03,  4.0570e-03],\n",
      "          [ 1.2446e-03, -2.0131e-02,  7.2867e-03]],\n",
      "\n",
      "         [[-1.1081e-02, -5.5446e-04,  8.0708e-03],\n",
      "          [-1.0853e-02,  6.9435e-03, -1.8655e-02],\n",
      "          [-5.9865e-03,  2.2674e-03,  1.4700e-02]],\n",
      "\n",
      "         [[-9.2839e-03,  1.0045e-02,  6.8048e-04],\n",
      "          [ 6.3107e-03,  2.1328e-03,  1.8515e-02],\n",
      "          [-5.1584e-03, -2.0483e-02,  1.3048e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.5022e-03,  8.7445e-03,  7.9114e-03],\n",
      "          [-9.9297e-03, -8.4494e-03, -1.7620e-02],\n",
      "          [-1.9428e-02,  6.5810e-03,  6.8578e-03]],\n",
      "\n",
      "         [[ 1.4193e-02,  3.1256e-03,  1.6877e-02],\n",
      "          [ 3.1659e-03,  7.1360e-03,  1.4621e-02],\n",
      "          [ 1.8788e-02, -2.0329e-02, -1.7915e-02]],\n",
      "\n",
      "         [[-1.0881e-03,  1.3052e-02,  2.0625e-02],\n",
      "          [ 6.9178e-03, -1.6658e-02,  1.1627e-03],\n",
      "          [ 1.7113e-02,  1.8834e-02, -3.6534e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.7283e-03, -1.0280e-02,  7.4429e-03],\n",
      "          [-1.7796e-02, -4.3992e-03, -1.4567e-02],\n",
      "          [ 6.4898e-03,  1.6158e-02,  2.0682e-02]],\n",
      "\n",
      "         [[-1.7444e-02, -1.9250e-02, -1.3022e-03],\n",
      "          [-3.7047e-03, -9.7780e-03, -6.2967e-05],\n",
      "          [ 2.0030e-02, -5.9744e-03, -1.5462e-03]],\n",
      "\n",
      "         [[ 1.3880e-02, -2.0324e-02,  1.0669e-02],\n",
      "          [-6.8615e-03,  1.9626e-02, -1.1633e-04],\n",
      "          [-1.6569e-02, -5.0854e-03, -1.3614e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.5354e-02, -2.6027e-03,  3.6378e-03],\n",
      "          [ 1.4322e-02,  7.6588e-03,  6.0129e-03],\n",
      "          [ 1.6367e-02,  1.1578e-02, -2.2056e-03]],\n",
      "\n",
      "         [[ 1.6155e-02, -1.0727e-02,  2.0436e-02],\n",
      "          [ 1.2851e-02, -2.0082e-02,  1.9218e-02],\n",
      "          [-1.7213e-02, -1.9995e-03,  1.1336e-02]],\n",
      "\n",
      "         [[-1.6966e-02,  5.0312e-03,  2.9409e-04],\n",
      "          [ 2.6359e-03, -1.9430e-02, -1.8664e-02],\n",
      "          [ 1.7882e-02,  6.3549e-03, -1.2090e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.8377e-02, -1.8655e-02, -9.8412e-03],\n",
      "          [-2.8566e-03,  1.6136e-02,  1.3110e-02],\n",
      "          [ 1.5144e-02,  1.8842e-02,  6.5930e-03]],\n",
      "\n",
      "         [[ 4.4473e-03, -1.2937e-02, -1.3436e-02],\n",
      "          [ 1.1650e-03, -9.3232e-03,  1.1494e-02],\n",
      "          [ 2.0149e-02, -7.8344e-03,  5.2701e-03]],\n",
      "\n",
      "         [[ 1.7479e-02, -1.1057e-02,  1.9614e-02],\n",
      "          [-1.5421e-02,  3.5838e-03, -1.5816e-02],\n",
      "          [-4.0442e-03, -1.6972e-02,  1.3346e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-8.4825e-03,  9.7136e-03, -5.2332e-03, -2.2090e-03, -1.4693e-02,\n",
      "         2.9274e-03,  1.8969e-02, -9.6750e-03,  6.4698e-03, -1.7657e-02,\n",
      "        -1.4536e-02,  8.4010e-03, -2.1428e-03, -1.6934e-02, -1.2004e-02,\n",
      "        -1.3595e-02, -1.3172e-04,  1.8180e-02, -1.4559e-02,  3.0094e-03,\n",
      "         1.2002e-02, -3.9630e-03, -1.3764e-02,  1.9973e-02, -2.0719e-02,\n",
      "         3.8807e-03, -4.3978e-03,  3.1322e-03,  7.5746e-03, -1.4363e-02,\n",
      "         2.6592e-03,  1.0314e-02,  7.0873e-03, -1.1079e-02, -3.5426e-04,\n",
      "         1.5346e-02,  1.5927e-02, -3.8506e-03, -8.2370e-03, -6.6773e-03,\n",
      "         8.3770e-03, -1.4499e-02,  1.1728e-02,  1.0143e-02,  1.0711e-02,\n",
      "         1.0923e-03, -8.5854e-03, -2.7658e-03,  1.3631e-02, -5.7565e-03,\n",
      "        -1.8712e-02, -3.8193e-03, -3.7327e-03,  1.8885e-02,  4.8232e-03,\n",
      "         1.4038e-02,  4.3815e-03,  1.5540e-02, -8.2102e-03, -6.3818e-03,\n",
      "         2.7796e-03,  7.9966e-03,  1.8556e-02, -5.3445e-03, -3.8660e-03,\n",
      "         2.2180e-03, -1.3294e-02,  9.2467e-03,  1.7001e-02, -4.1994e-03,\n",
      "         1.0641e-02, -1.6150e-02, -1.4985e-02,  1.3252e-02,  4.3479e-03,\n",
      "         6.4389e-03, -7.7594e-03, -2.7822e-03,  8.1036e-04,  1.6500e-02,\n",
      "         4.5926e-03, -4.3835e-03,  1.2603e-02,  3.5959e-03, -1.1539e-02,\n",
      "        -3.9916e-03, -4.4167e-03, -1.2310e-02,  1.6444e-02,  5.7605e-03,\n",
      "        -1.0197e-02, -7.9055e-03,  1.8429e-03,  4.0091e-03, -7.5483e-04,\n",
      "         7.2866e-03, -1.6544e-02,  9.7369e-03,  5.5544e-03, -1.6365e-02,\n",
      "        -7.7466e-03,  9.4806e-03, -1.9945e-02, -4.4472e-03,  4.0318e-03,\n",
      "         1.1044e-02, -5.2787e-03, -2.8194e-03,  1.3695e-03,  8.0928e-03,\n",
      "        -1.1565e-02,  1.0663e-02,  1.5489e-02, -2.0862e-05, -1.1951e-02,\n",
      "        -1.5929e-02,  8.5043e-03, -4.7046e-03,  6.9249e-03,  1.5204e-02,\n",
      "        -6.0585e-03,  4.1196e-03,  1.7872e-02, -1.9129e-02, -1.3707e-02,\n",
      "        -1.2845e-02,  7.2281e-03,  1.4030e-03,  2.0045e-02, -1.5212e-02,\n",
      "        -1.6579e-02, -4.4241e-03, -1.7991e-02,  1.3017e-03,  1.4211e-02,\n",
      "        -1.0615e-02,  5.6052e-03, -1.6083e-02,  1.7465e-02, -1.1119e-02,\n",
      "         1.6325e-02,  1.0530e-02, -8.0305e-03, -1.4558e-02, -2.5252e-03,\n",
      "        -4.3558e-03,  6.1222e-03,  1.4354e-02,  1.9979e-03, -7.0564e-03,\n",
      "         2.0442e-02,  1.2796e-02, -1.8741e-03,  1.2011e-02, -1.9917e-02,\n",
      "        -2.3164e-03,  1.3344e-02, -7.9676e-03, -7.7980e-03,  9.5319e-03,\n",
      "         4.0420e-03, -7.8393e-03,  3.9319e-03, -1.8321e-02, -4.4389e-03,\n",
      "         1.3332e-02,  1.6787e-02,  8.4737e-03,  1.9666e-02,  1.2644e-03,\n",
      "         1.8737e-02,  2.8300e-03, -1.9338e-02, -5.5550e-03, -1.8848e-02,\n",
      "         5.1079e-03,  7.2556e-03, -3.9015e-03,  1.5866e-02,  1.0493e-02,\n",
      "        -1.4683e-03,  7.0421e-03,  7.3008e-03, -1.6156e-03, -6.7623e-03,\n",
      "         1.9702e-02,  1.4888e-02, -1.9165e-02, -7.9489e-03,  2.2053e-03,\n",
      "         9.7207e-03,  1.0802e-02, -6.0854e-03,  1.5810e-02, -4.9246e-03,\n",
      "        -1.4803e-02, -5.0743e-03,  4.5411e-03,  1.5387e-02, -5.4540e-04,\n",
      "        -8.9830e-03,  1.9503e-02,  1.4772e-02, -1.4625e-02, -2.0621e-03,\n",
      "        -1.1207e-02, -1.7493e-02, -1.4794e-03, -1.2681e-03, -1.6260e-02,\n",
      "         8.2192e-03, -7.8827e-06,  7.0392e-03,  1.7423e-02,  4.5384e-03,\n",
      "         1.5117e-02, -6.8837e-03, -1.0606e-02,  1.4674e-02, -6.3892e-03,\n",
      "         5.7441e-03,  2.0781e-02, -2.0605e-02, -2.0715e-02,  2.2116e-03,\n",
      "        -6.3317e-03, -2.2558e-03, -3.3221e-03, -3.0692e-03,  5.4664e-03,\n",
      "         1.1965e-02,  8.8172e-05,  1.2980e-02, -1.4333e-02,  1.3145e-02,\n",
      "        -6.1235e-04,  1.8913e-02, -1.7428e-02, -2.1110e-03, -1.7877e-02,\n",
      "        -2.7684e-03, -1.4650e-02,  2.0964e-03,  1.0707e-02,  9.1730e-03,\n",
      "         1.3359e-02, -3.9257e-03,  1.3939e-02,  5.5505e-03, -2.0390e-02,\n",
      "         9.3056e-03, -9.4629e-03, -5.7551e-03, -1.8462e-02,  1.1277e-02,\n",
      "         4.4564e-03], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-7.9098e-03,  1.0504e-02,  2.0138e-02],\n",
      "          [-1.4784e-02,  1.4708e-02, -9.2089e-03],\n",
      "          [-9.0848e-03, -1.4655e-02,  9.1067e-03]],\n",
      "\n",
      "         [[ 2.0047e-02, -1.1213e-02,  1.5345e-02],\n",
      "          [ 1.8231e-02,  7.5398e-03,  1.1232e-02],\n",
      "          [-2.3668e-03, -6.0285e-03, -2.1529e-03]],\n",
      "\n",
      "         [[ 8.1250e-03,  2.3640e-03,  4.3510e-03],\n",
      "          [ 6.6912e-03, -2.0339e-02,  1.7457e-02],\n",
      "          [-6.5361e-03,  8.7339e-03,  4.3447e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0382e-02,  9.0397e-03, -7.7254e-03],\n",
      "          [-8.8099e-03,  1.1874e-02,  1.1347e-02],\n",
      "          [-9.8015e-03, -1.5497e-02,  2.0363e-02]],\n",
      "\n",
      "         [[ 1.0082e-02,  1.4855e-03, -5.9827e-03],\n",
      "          [-4.3654e-03, -2.5014e-03, -4.9775e-03],\n",
      "          [-1.5404e-02, -1.2669e-04, -1.2273e-02]],\n",
      "\n",
      "         [[-1.1970e-02, -1.7399e-02,  3.9410e-03],\n",
      "          [-1.7484e-02, -4.3696e-03,  1.9700e-02],\n",
      "          [-1.4108e-02, -1.2141e-02,  1.5564e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 8.4508e-03,  5.6184e-03, -1.2784e-02],\n",
      "          [-2.8802e-03,  1.7594e-02,  1.1097e-02],\n",
      "          [ 1.7667e-02,  1.1838e-02,  1.5940e-02]],\n",
      "\n",
      "         [[ 1.6927e-02,  1.6719e-02, -1.4326e-03],\n",
      "          [-1.5060e-03,  3.0562e-03, -1.3833e-02],\n",
      "          [-2.1926e-03, -2.6335e-03, -9.9672e-03]],\n",
      "\n",
      "         [[ 4.6120e-03, -1.0659e-02,  1.1731e-02],\n",
      "          [ 8.9076e-04,  1.8605e-02, -8.2062e-03],\n",
      "          [ 1.7846e-02, -1.9490e-02,  7.6002e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0074e-02, -1.3948e-02,  2.0125e-02],\n",
      "          [-1.3971e-02,  4.1461e-03, -9.8450e-03],\n",
      "          [-4.6660e-03, -8.0412e-04,  2.0086e-02]],\n",
      "\n",
      "         [[-3.6223e-04,  7.5170e-03,  1.1430e-02],\n",
      "          [-1.3864e-02, -1.0470e-05, -3.9491e-03],\n",
      "          [ 2.6702e-03, -1.2409e-02,  4.5714e-03]],\n",
      "\n",
      "         [[ 1.3561e-02,  1.8213e-02, -1.8024e-02],\n",
      "          [-1.9793e-02,  9.5390e-03, -1.1037e-02],\n",
      "          [-1.0108e-02, -3.4976e-03, -1.7524e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.2408e-02,  1.6034e-03, -1.0352e-02],\n",
      "          [ 5.0448e-03, -1.6095e-02, -1.2759e-02],\n",
      "          [ 1.9739e-02,  2.1676e-03, -2.8887e-03]],\n",
      "\n",
      "         [[-1.8363e-02, -1.3057e-02, -1.0263e-02],\n",
      "          [ 2.0170e-02,  1.1389e-02, -1.6918e-02],\n",
      "          [-1.6934e-02, -8.7837e-03,  6.0273e-03]],\n",
      "\n",
      "         [[-1.3300e-02, -7.2037e-03, -1.3571e-02],\n",
      "          [-1.1768e-02, -1.7608e-02,  1.7715e-02],\n",
      "          [ 1.5080e-02, -1.9369e-02, -1.9369e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.4708e-02,  1.8875e-02, -6.6429e-03],\n",
      "          [-2.9902e-03,  1.0008e-02,  3.0841e-03],\n",
      "          [ 1.8056e-02,  1.6672e-02, -5.1860e-03]],\n",
      "\n",
      "         [[-8.8954e-03, -1.6194e-02,  1.2532e-02],\n",
      "          [-7.5214e-03, -5.6094e-03,  1.2873e-02],\n",
      "          [-1.9249e-02,  1.2355e-02, -1.2895e-02]],\n",
      "\n",
      "         [[ 2.1866e-03, -1.6159e-02,  5.4372e-03],\n",
      "          [ 1.0774e-02, -4.0232e-03, -6.5620e-03],\n",
      "          [ 3.3837e-04,  1.6547e-02,  1.5480e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 6.0428e-04, -2.7312e-04,  1.9953e-02],\n",
      "          [ 3.3886e-03,  1.8678e-02,  2.0470e-02],\n",
      "          [ 1.6676e-02,  1.7910e-02,  1.2608e-02]],\n",
      "\n",
      "         [[ 3.9444e-03,  1.6553e-02,  7.0343e-03],\n",
      "          [ 9.9583e-03,  1.9921e-02, -8.1702e-03],\n",
      "          [-1.9241e-02,  1.1382e-03,  2.1026e-04]],\n",
      "\n",
      "         [[ 2.0694e-02, -1.2658e-02,  4.2998e-03],\n",
      "          [-1.2859e-02, -1.2108e-02,  1.3903e-02],\n",
      "          [-7.2062e-03, -2.0101e-02, -1.0460e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.0717e-02, -2.0184e-02,  8.9845e-03],\n",
      "          [ 1.1347e-02,  3.3883e-03,  5.8975e-03],\n",
      "          [ 9.6030e-03,  7.0213e-03,  4.4438e-03]],\n",
      "\n",
      "         [[ 7.2999e-05, -2.0455e-02, -2.0740e-02],\n",
      "          [-1.2281e-03, -1.4071e-02, -5.9984e-04],\n",
      "          [-2.3502e-03, -6.7018e-03, -1.4646e-02]],\n",
      "\n",
      "         [[-1.9064e-02, -3.5586e-03, -1.1590e-02],\n",
      "          [ 5.3916e-03, -7.0671e-03,  6.6094e-03],\n",
      "          [-2.0563e-02,  1.4527e-02, -1.0023e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.1355e-02,  1.7776e-02, -1.6724e-02],\n",
      "          [-6.1259e-03, -2.0517e-04,  8.2397e-03],\n",
      "          [-7.7873e-03,  8.7670e-03, -1.0078e-02]],\n",
      "\n",
      "         [[-8.2186e-03, -6.2138e-03,  5.6306e-03],\n",
      "          [-4.3342e-03,  1.8592e-02,  1.3087e-02],\n",
      "          [ 1.4160e-02, -1.0126e-02,  9.1163e-03]],\n",
      "\n",
      "         [[-1.2450e-02,  1.4665e-02, -1.9842e-03],\n",
      "          [ 2.0591e-02,  1.2689e-02,  9.0304e-03],\n",
      "          [-1.0506e-02,  1.4327e-02, -1.3548e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 7.7067e-03,  8.5755e-03,  1.9701e-02],\n",
      "          [-1.9375e-02,  5.9705e-03, -1.9869e-02],\n",
      "          [ 1.3341e-02, -4.8686e-03, -4.1781e-03]],\n",
      "\n",
      "         [[-1.4704e-02,  3.2074e-03,  1.1795e-02],\n",
      "          [ 6.7812e-03,  1.8587e-02, -1.8074e-02],\n",
      "          [-1.8395e-02, -1.0093e-03, -1.1058e-02]],\n",
      "\n",
      "         [[-1.0325e-03, -2.0701e-03,  1.2631e-02],\n",
      "          [ 3.6787e-03,  1.5883e-02, -8.8037e-03],\n",
      "          [-3.9984e-03,  1.3678e-02, -1.5204e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 4.0874e-03,  1.5266e-02,  3.1733e-03],\n",
      "          [ 7.9259e-04, -4.9992e-03,  8.5789e-03],\n",
      "          [-1.8861e-02, -1.0370e-02, -1.0609e-02]],\n",
      "\n",
      "         [[ 8.7249e-03,  1.1753e-02,  1.1528e-03],\n",
      "          [ 5.7125e-03, -1.1145e-02, -3.8437e-03],\n",
      "          [ 1.1890e-02, -4.7299e-03,  1.8542e-02]],\n",
      "\n",
      "         [[ 1.2349e-02,  7.3227e-03,  1.8570e-03],\n",
      "          [-1.9976e-02, -1.6571e-02,  1.7530e-02],\n",
      "          [-1.9681e-02, -1.6128e-03,  7.5269e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.5612e-03,  7.3424e-03,  5.5906e-03],\n",
      "          [ 2.0573e-02,  5.9808e-03, -1.4310e-03],\n",
      "          [-1.0643e-02,  1.1438e-02, -2.0809e-03]],\n",
      "\n",
      "         [[-2.0704e-02, -1.4381e-02, -3.6272e-03],\n",
      "          [-1.6754e-02, -1.9981e-02, -1.1275e-02],\n",
      "          [-5.3260e-04,  1.5290e-02, -1.0736e-02]],\n",
      "\n",
      "         [[ 1.0868e-02, -1.2990e-02, -7.7348e-03],\n",
      "          [ 1.1575e-02, -1.3346e-02,  1.9833e-02],\n",
      "          [-1.7001e-02, -8.5808e-05,  8.5761e-03]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-2.0583e-02, -4.2252e-03, -1.6884e-02,  9.7504e-03,  1.8948e-02,\n",
      "        -2.0018e-02, -2.0298e-02,  1.3834e-02, -2.0241e-02, -1.2749e-02,\n",
      "        -1.0721e-02,  1.2506e-02,  8.0034e-03,  1.3301e-02,  1.5170e-02,\n",
      "        -1.7926e-02, -7.6032e-03, -3.6216e-04, -1.5412e-02,  6.1385e-03,\n",
      "        -1.7448e-02, -1.7033e-02, -1.3905e-02, -1.6402e-02,  1.1834e-02,\n",
      "         9.2566e-03,  1.0641e-02,  1.5494e-02,  1.9421e-02, -9.5949e-03,\n",
      "        -8.5986e-03, -1.2500e-02, -1.7837e-04,  6.8965e-03, -1.4241e-02,\n",
      "         1.0119e-02, -8.3551e-04,  1.0488e-02, -8.2472e-03, -1.8772e-02,\n",
      "         1.2823e-02,  2.4772e-03, -8.5719e-03, -5.1374e-03, -1.2110e-02,\n",
      "        -7.7791e-03,  1.6801e-02, -1.5804e-02,  9.6431e-03, -4.6471e-03,\n",
      "         4.4067e-03, -1.1378e-03, -1.9032e-02,  8.2356e-03,  1.3244e-02,\n",
      "         1.5676e-02,  4.9801e-03, -1.9765e-02, -5.8593e-03,  1.6729e-02,\n",
      "        -5.1890e-03, -8.9927e-03,  1.3514e-02,  9.5436e-03, -1.5330e-02,\n",
      "        -1.3942e-02, -2.0583e-02, -2.0166e-02, -1.3101e-02,  1.1907e-03,\n",
      "         1.9011e-02,  1.7511e-02, -1.9076e-02, -9.9408e-03, -2.8913e-04,\n",
      "         1.0351e-02,  9.9149e-03, -1.1222e-02,  1.7007e-02,  7.9081e-03,\n",
      "         9.8530e-03,  1.0710e-02, -1.9874e-02, -9.4982e-03, -1.6155e-02,\n",
      "        -1.1328e-02, -1.8114e-02, -3.1204e-03, -1.3840e-02, -1.5588e-03,\n",
      "         1.0017e-04,  1.2940e-02,  1.7371e-02,  3.4414e-03, -1.4117e-02,\n",
      "         1.4495e-02,  1.9409e-02, -1.9647e-02,  1.7237e-02, -1.5274e-02,\n",
      "        -4.1262e-03,  1.9557e-02, -5.7789e-03,  1.6556e-02, -1.7934e-02,\n",
      "         5.8158e-03,  9.7110e-03,  4.8829e-03, -8.0222e-04, -7.2344e-03,\n",
      "        -8.6814e-03, -5.6241e-03, -1.7343e-02,  1.3268e-02, -1.7281e-02,\n",
      "        -9.1403e-03,  1.0343e-02, -4.0140e-03, -1.4816e-02,  1.6770e-02,\n",
      "         5.6359e-03,  4.3794e-03,  5.4680e-03, -1.9481e-02,  1.8112e-02,\n",
      "         1.7024e-02,  4.1588e-03, -2.0771e-02, -1.9506e-02,  6.3966e-03,\n",
      "         1.1597e-02,  7.6346e-03, -8.9626e-03, -9.9438e-03,  1.7643e-02,\n",
      "        -1.5988e-02, -4.5237e-03, -5.7159e-03, -1.9412e-03,  5.2025e-03,\n",
      "        -1.3826e-02, -1.1224e-02, -1.1826e-02,  1.1191e-02, -1.9909e-02,\n",
      "         1.6815e-02,  1.5806e-02,  8.8073e-03, -1.4421e-02,  2.7495e-03,\n",
      "        -1.0639e-02, -3.5994e-03,  4.7696e-03, -8.4421e-03, -1.4465e-02,\n",
      "         2.6005e-03, -7.8085e-03, -2.6974e-04, -1.0181e-02, -9.2184e-04,\n",
      "        -1.5747e-02,  6.4100e-03, -3.2350e-03, -7.2754e-03, -1.0659e-03,\n",
      "        -1.2829e-02,  1.3860e-02,  1.8913e-02, -3.9078e-03, -6.2022e-03,\n",
      "        -3.2938e-03, -2.0219e-02,  1.5701e-02,  2.2895e-03, -1.8657e-02,\n",
      "        -6.2483e-03,  2.7694e-03, -3.2748e-03,  1.0955e-02,  1.6703e-02,\n",
      "        -1.2855e-02,  9.9089e-03, -1.2504e-02, -1.5801e-02, -3.7374e-03,\n",
      "         1.5259e-02,  1.9201e-02, -1.8332e-02, -7.2013e-03, -1.7323e-02,\n",
      "        -6.5796e-03, -1.5652e-02, -1.5679e-02, -3.9194e-03,  1.3158e-02,\n",
      "         7.8673e-03, -1.3880e-03,  5.1886e-05, -1.6389e-02,  1.5142e-02,\n",
      "         5.9904e-03,  1.7007e-02,  9.0064e-03,  6.0471e-03, -5.5232e-03,\n",
      "         8.1624e-03, -3.7208e-03,  8.3144e-03, -1.4461e-02,  6.3956e-03,\n",
      "         1.0919e-02,  5.9469e-03, -1.9256e-02, -1.5359e-02, -7.0293e-03,\n",
      "        -1.3644e-02, -8.3522e-03,  1.4189e-02, -1.0256e-02, -1.9099e-03,\n",
      "        -1.7754e-02, -1.8726e-02, -1.7064e-02, -1.6662e-02,  9.2334e-03,\n",
      "         3.5189e-03, -1.3704e-02,  1.9937e-02, -5.1781e-03,  9.2657e-03,\n",
      "         1.2078e-02, -7.5825e-03, -1.6143e-02, -1.8289e-02, -2.0134e-02,\n",
      "        -1.6074e-03, -1.1549e-02,  7.1002e-04, -4.3855e-03, -1.2258e-02,\n",
      "        -1.6445e-02, -2.0563e-02, -7.9162e-03, -2.0192e-02,  1.0911e-02,\n",
      "         1.7917e-02,  7.0989e-03,  1.4932e-02,  7.5393e-03,  1.3122e-02,\n",
      "        -1.7723e-02,  1.9457e-02,  7.8359e-04,  1.0569e-02,  2.0465e-02,\n",
      "         7.8002e-03, -1.6190e-02, -1.8886e-02,  1.3453e-02, -1.5925e-02,\n",
      "         2.0181e-02,  1.2217e-03, -6.4891e-03,  4.4328e-03, -7.6784e-04,\n",
      "        -1.7400e-03,  1.5244e-02,  8.8066e-03,  7.0681e-03,  1.6836e-02,\n",
      "        -2.0694e-02, -2.9710e-03, -1.9152e-02,  1.9406e-02,  1.5617e-02,\n",
      "         5.3531e-03, -1.0823e-02, -3.7306e-03, -1.2916e-02,  8.6169e-03,\n",
      "         5.3814e-03,  1.4241e-02,  1.8659e-02,  1.8778e-02, -1.4539e-02,\n",
      "         4.9196e-03, -5.1723e-03, -1.4675e-02, -7.7479e-03,  1.4787e-02,\n",
      "        -1.3811e-02, -3.6707e-03, -1.0450e-03, -8.9738e-04, -4.1956e-03,\n",
      "        -1.0783e-02, -1.3217e-02,  8.4020e-03, -3.6154e-04,  1.4358e-02,\n",
      "         6.3640e-04,  5.3780e-03,  1.5784e-02,  1.5025e-02,  4.3656e-03,\n",
      "        -2.0411e-02, -1.1734e-02,  5.7747e-03, -8.1375e-03,  1.1012e-03,\n",
      "         2.3521e-03, -7.2561e-03, -1.9133e-02, -6.5069e-04, -1.5254e-02,\n",
      "         1.3310e-02,  1.0767e-02, -1.2110e-02, -1.8458e-03, -1.4187e-02,\n",
      "         6.5991e-03,  1.3027e-02,  3.7810e-03, -1.7688e-02, -5.7900e-03,\n",
      "         1.1665e-02, -5.1849e-04, -4.4579e-03,  9.8338e-03,  1.5648e-02,\n",
      "        -9.0339e-03,  1.6132e-02, -1.3867e-02,  1.4494e-02, -7.6508e-03,\n",
      "        -9.1922e-04,  1.5052e-03,  5.5470e-03,  1.4465e-02, -1.4561e-02,\n",
      "        -1.8905e-03,  1.3518e-02, -1.8580e-02,  1.9701e-02,  1.0161e-02,\n",
      "        -7.8260e-03,  1.2300e-02, -1.9037e-02,  1.3573e-02, -1.4781e-02,\n",
      "        -1.9473e-02,  9.1564e-03, -4.9807e-03, -1.2119e-02,  1.4297e-02,\n",
      "         1.0541e-02,  3.7620e-03,  1.7949e-02,  1.2201e-02, -5.3379e-03,\n",
      "         1.8976e-02,  1.7626e-02,  1.6616e-02,  1.3940e-02,  1.3187e-02,\n",
      "        -1.0191e-02,  1.4283e-02,  1.5790e-02,  2.0139e-02,  3.8877e-03,\n",
      "         4.5589e-03,  1.8716e-02,  1.5424e-02,  9.4023e-03, -3.5557e-03,\n",
      "         4.6680e-03,  1.1976e-03, -1.6793e-02, -4.2298e-03, -4.0182e-04,\n",
      "        -2.0788e-02,  1.3020e-02,  2.7729e-03, -1.0911e-02, -3.0708e-03,\n",
      "        -2.7116e-04,  1.4371e-02,  1.1366e-02, -1.6408e-02, -4.7354e-03,\n",
      "         3.0013e-03,  1.9701e-02,  1.6079e-02,  2.5276e-03, -1.7478e-02,\n",
      "        -1.4536e-02, -4.4742e-03,  1.5143e-02,  1.6081e-02,  6.7555e-03,\n",
      "         1.1031e-02,  6.3396e-03, -1.9223e-02,  8.7757e-03,  2.0492e-02,\n",
      "        -6.9521e-04,  2.4087e-03, -5.2751e-03, -1.2870e-02, -8.2484e-03,\n",
      "        -5.9363e-03, -7.6779e-03,  7.3380e-03,  2.7596e-04, -2.0755e-02,\n",
      "        -3.0549e-03,  6.7619e-03,  1.1275e-02,  5.5326e-03,  7.4161e-03,\n",
      "         1.8642e-02, -1.0899e-02, -1.3432e-02, -1.6963e-02,  2.6931e-03,\n",
      "         7.2378e-04,  1.9269e-02,  7.4746e-03,  1.0934e-02,  6.7871e-04,\n",
      "         5.6060e-03, -3.7884e-03, -2.0000e-03,  6.8938e-03,  2.8959e-03,\n",
      "         4.6041e-03,  1.8507e-02,  1.6218e-02,  1.0259e-02, -1.7048e-02,\n",
      "         5.0321e-03, -1.9542e-02, -1.7822e-02, -7.3532e-03,  7.4976e-03,\n",
      "        -1.8156e-02, -3.6552e-03, -3.3504e-03,  1.3362e-02,  6.3762e-03,\n",
      "         3.4008e-03, -4.8891e-03,  1.4459e-02,  7.7824e-03, -1.5859e-02,\n",
      "         2.5689e-03,  1.6465e-02,  2.0162e-02,  1.5542e-02,  8.5270e-03,\n",
      "         1.8103e-02,  8.2506e-03,  2.5357e-03,  1.8355e-02, -1.6068e-02,\n",
      "         1.4571e-02,  7.5891e-03, -1.5030e-02,  2.7469e-03, -1.6405e-02,\n",
      "         2.0706e-02,  1.3588e-03, -1.8528e-02, -7.1323e-04, -3.1832e-03,\n",
      "        -8.2730e-03, -4.0141e-03, -4.3670e-03, -1.2358e-03,  1.9630e-02,\n",
      "         2.0606e-02,  9.0061e-03, -1.5560e-02, -1.8727e-02,  1.7760e-02,\n",
      "        -7.4228e-03, -1.9994e-02, -7.1720e-03, -1.4026e-02,  8.1205e-03,\n",
      "         5.0448e-03,  1.5267e-02, -1.3965e-02, -9.5662e-03, -7.2004e-03,\n",
      "        -2.0641e-02,  5.3348e-03,  9.9186e-03, -1.3269e-02,  1.7726e-03,\n",
      "        -1.9364e-02, -5.2555e-03,  4.7071e-03,  1.1481e-02,  3.6646e-03,\n",
      "        -1.5325e-02,  5.8980e-03, -1.9464e-02, -1.5191e-02, -2.0037e-02,\n",
      "        -1.7905e-02,  1.0900e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 8.3633e-03,  2.9124e-03, -1.3786e-02],\n",
      "          [ 8.4905e-04, -1.3973e-02,  3.8646e-03],\n",
      "          [-5.2798e-03, -9.8307e-03,  1.0118e-03]],\n",
      "\n",
      "         [[-5.5969e-03, -2.9190e-03, -4.2553e-03],\n",
      "          [ 6.8823e-03,  2.1764e-03,  3.1877e-03],\n",
      "          [ 1.3473e-02, -1.3321e-02,  8.2482e-03]],\n",
      "\n",
      "         [[-1.0256e-02, -8.9094e-03,  4.8265e-04],\n",
      "          [ 1.4037e-02,  7.8358e-03, -1.3463e-02],\n",
      "          [-1.4058e-02, -8.0468e-04, -4.9098e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-7.5778e-03, -3.6040e-03, -4.2403e-04],\n",
      "          [-6.8615e-03, -1.2130e-02, -5.1583e-03],\n",
      "          [ 2.0504e-04,  2.2115e-04,  1.4416e-02]],\n",
      "\n",
      "         [[-1.0738e-02, -8.4582e-03,  6.0745e-03],\n",
      "          [ 7.3929e-03, -1.5885e-03,  3.3483e-03],\n",
      "          [ 3.2684e-03, -3.4119e-03, -1.3526e-02]],\n",
      "\n",
      "         [[ 5.6229e-03, -2.2869e-03, -3.8766e-03],\n",
      "          [ 5.7870e-05,  5.4131e-03, -1.2084e-02],\n",
      "          [-1.2045e-02,  9.2479e-04,  1.8348e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.4140e-03, -8.5041e-03,  9.9169e-03],\n",
      "          [-1.0020e-02,  4.8032e-03, -7.6257e-03],\n",
      "          [ 5.8453e-03, -1.3535e-02, -3.6453e-03]],\n",
      "\n",
      "         [[-2.7028e-03,  8.7687e-05, -8.6171e-03],\n",
      "          [ 5.8902e-03,  5.9740e-03,  1.3159e-02],\n",
      "          [ 1.2942e-02,  1.7347e-03, -4.9159e-03]],\n",
      "\n",
      "         [[ 1.0913e-02,  8.7584e-03,  1.3348e-02],\n",
      "          [ 1.0814e-02, -7.7972e-03, -1.4524e-02],\n",
      "          [ 9.7344e-03, -9.5732e-03, -1.2301e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1629e-02, -1.7544e-03,  7.4951e-03],\n",
      "          [-5.5526e-03,  1.4977e-03, -1.4131e-02],\n",
      "          [-1.2621e-02, -6.7659e-03, -5.7058e-03]],\n",
      "\n",
      "         [[ 4.9975e-03, -4.1039e-03, -3.8183e-03],\n",
      "          [-3.5455e-03, -1.1450e-02,  4.6321e-03],\n",
      "          [-1.1622e-02, -1.3129e-03,  3.7445e-03]],\n",
      "\n",
      "         [[-1.4458e-02,  8.8592e-03,  9.9960e-03],\n",
      "          [-2.9680e-04,  1.0192e-02,  1.8902e-03],\n",
      "          [ 6.0899e-03, -1.1223e-02,  1.0399e-02]]],\n",
      "\n",
      "\n",
      "        [[[-8.8635e-03, -6.8100e-03, -1.0287e-02],\n",
      "          [-3.2096e-03, -1.1408e-02,  5.2799e-03],\n",
      "          [ 1.3406e-02,  1.4665e-02,  3.9300e-05]],\n",
      "\n",
      "         [[-5.7187e-03, -5.5052e-03,  1.3576e-02],\n",
      "          [-1.1427e-02,  2.9996e-04, -1.3520e-02],\n",
      "          [ 1.3532e-02,  6.6112e-03,  1.7595e-03]],\n",
      "\n",
      "         [[ 4.4790e-03, -3.5134e-03, -1.3146e-02],\n",
      "          [-1.3727e-02,  1.1130e-02,  9.0710e-03],\n",
      "          [ 1.4630e-02,  2.9221e-03, -6.3232e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0874e-03,  8.1007e-03, -8.1551e-03],\n",
      "          [ 1.1833e-02,  1.2396e-02,  4.8608e-03],\n",
      "          [ 7.7132e-03, -9.4909e-03, -9.0825e-03]],\n",
      "\n",
      "         [[ 6.3507e-03,  8.5333e-03,  6.9236e-03],\n",
      "          [ 1.4265e-02,  1.0831e-02,  1.4664e-02],\n",
      "          [ 5.7084e-03, -5.2417e-03, -1.1576e-02]],\n",
      "\n",
      "         [[-9.8018e-03,  9.5282e-03, -3.9784e-03],\n",
      "          [-1.2856e-02,  9.5375e-03, -8.6331e-03],\n",
      "          [-1.1427e-02, -1.3500e-02, -1.1122e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 6.7844e-03,  4.6888e-03, -9.7081e-03],\n",
      "          [-1.3413e-02,  4.3589e-03, -1.1528e-02],\n",
      "          [ 1.4071e-02,  1.2519e-02, -4.4055e-03]],\n",
      "\n",
      "         [[-5.2444e-03, -1.9838e-03, -7.2421e-03],\n",
      "          [-9.8841e-03, -1.3102e-02, -6.8274e-03],\n",
      "          [ 4.0144e-03,  3.5823e-03,  8.1065e-03]],\n",
      "\n",
      "         [[ 1.4374e-02,  1.5031e-03,  8.0612e-03],\n",
      "          [-2.6378e-03, -1.1679e-02,  1.2325e-02],\n",
      "          [ 9.5673e-03,  1.0348e-02, -1.1203e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.8670e-03, -1.2239e-02,  2.6989e-03],\n",
      "          [-1.1533e-03,  6.5745e-03,  8.6564e-03],\n",
      "          [ 2.8672e-03,  8.4088e-03,  1.1797e-02]],\n",
      "\n",
      "         [[ 9.3624e-04,  8.6828e-03,  8.5234e-03],\n",
      "          [-6.6328e-03, -1.3985e-02,  1.0931e-02],\n",
      "          [ 1.7533e-03, -7.8359e-03,  1.3362e-03]],\n",
      "\n",
      "         [[-3.5002e-03,  1.3838e-02,  4.2147e-03],\n",
      "          [ 1.0007e-02,  3.7607e-03,  7.5460e-03],\n",
      "          [-1.0275e-02, -2.5157e-03,  7.1915e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.1589e-02, -1.1949e-02, -9.0591e-03],\n",
      "          [-1.4538e-03, -6.6200e-03, -7.3519e-03],\n",
      "          [-8.8496e-03, -5.3373e-03,  4.6105e-03]],\n",
      "\n",
      "         [[-8.2348e-03, -2.7607e-03,  8.5153e-03],\n",
      "          [-9.2356e-03, -1.2587e-02, -4.5747e-03],\n",
      "          [ 1.3276e-02, -4.8302e-03, -1.1059e-02]],\n",
      "\n",
      "         [[-5.9486e-03,  1.2848e-02,  3.7005e-03],\n",
      "          [-1.4724e-02,  9.6128e-03, -2.9034e-03],\n",
      "          [ 6.5684e-03,  9.1621e-03,  8.2669e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.8118e-04,  2.2219e-04,  1.0667e-02],\n",
      "          [ 1.4175e-02,  1.1439e-02, -3.3342e-03],\n",
      "          [ 1.4223e-02, -3.5265e-03,  9.4661e-03]],\n",
      "\n",
      "         [[ 4.9610e-03, -5.1107e-03, -3.7490e-03],\n",
      "          [ 2.2235e-03,  7.9432e-03, -6.8036e-03],\n",
      "          [-5.6432e-03,  2.7496e-03,  1.0241e-02]],\n",
      "\n",
      "         [[-1.4846e-03,  1.3845e-02, -1.2538e-02],\n",
      "          [ 1.4528e-02,  5.6678e-03, -7.4672e-03],\n",
      "          [ 7.5282e-03, -4.4869e-03, -6.1233e-03]]],\n",
      "\n",
      "\n",
      "        [[[-3.8496e-04, -8.9080e-03,  1.3526e-02],\n",
      "          [-9.3513e-03, -5.8616e-04,  1.2121e-02],\n",
      "          [-1.0711e-02, -1.0393e-02, -6.3508e-03]],\n",
      "\n",
      "         [[ 1.1579e-02,  1.0543e-02, -1.1646e-02],\n",
      "          [ 7.7982e-03, -9.1391e-03,  5.6376e-03],\n",
      "          [-7.2695e-03,  2.8528e-03, -9.9556e-03]],\n",
      "\n",
      "         [[-1.1075e-02,  1.3377e-02, -8.9412e-03],\n",
      "          [-1.1795e-02, -1.2833e-02,  8.3654e-03],\n",
      "          [ 1.1843e-02,  6.5803e-03,  8.4626e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.2746e-02, -1.3737e-02,  1.0018e-02],\n",
      "          [ 1.3520e-03, -1.4482e-02,  1.1885e-02],\n",
      "          [-3.6971e-03, -3.1358e-03, -4.1705e-03]],\n",
      "\n",
      "         [[ 1.1485e-02, -1.0961e-02,  6.6671e-03],\n",
      "          [-4.7016e-03,  1.1796e-02, -1.7376e-03],\n",
      "          [-9.0778e-03,  2.1434e-03,  9.2364e-03]],\n",
      "\n",
      "         [[-6.7333e-03,  6.2317e-03,  4.1965e-03],\n",
      "          [-3.4113e-03,  1.0316e-02,  2.8420e-03],\n",
      "          [-9.2882e-04, -6.0208e-03,  3.4004e-03]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-4.8812e-03, -5.3924e-03, -8.5870e-03,  3.8675e-03,  3.6199e-03,\n",
      "         1.3375e-02, -2.6077e-03, -1.2093e-02, -8.0556e-03, -1.5818e-03,\n",
      "         9.5174e-03, -8.8866e-03, -1.2120e-02,  1.2966e-02, -4.6697e-03,\n",
      "        -1.0525e-02, -6.1396e-03, -1.4334e-02,  4.4463e-03,  4.3473e-03,\n",
      "        -7.3116e-03,  8.3138e-03,  9.5277e-03, -2.2267e-03, -2.6857e-04,\n",
      "        -4.4579e-03,  3.4789e-03, -1.1394e-02, -6.2536e-03, -1.1080e-02,\n",
      "         4.0983e-03, -1.7159e-04, -1.3597e-02, -3.7715e-05,  3.9811e-03,\n",
      "        -1.0760e-02, -1.2854e-02,  1.1974e-02, -1.0934e-02, -7.7853e-03,\n",
      "         8.0785e-03,  9.4464e-03,  1.3473e-02, -4.2620e-03,  7.6672e-03,\n",
      "        -1.0299e-02,  3.3556e-03,  2.7428e-04,  8.4183e-03,  5.5217e-03,\n",
      "         3.3030e-03,  8.4350e-03,  4.2856e-04, -7.5847e-06,  4.9404e-03,\n",
      "        -1.0702e-02,  9.9083e-03, -4.0314e-03, -3.7236e-03,  9.3689e-03,\n",
      "         8.9379e-03, -5.4177e-03,  2.6782e-03,  7.5038e-03, -1.3520e-03,\n",
      "         3.4191e-03,  2.2517e-03, -7.3617e-03, -1.4816e-03,  5.2234e-03,\n",
      "        -7.0184e-03,  1.3690e-02,  1.3329e-02, -1.5888e-03,  1.3227e-02,\n",
      "         7.0945e-03, -5.1749e-03,  2.3811e-03, -1.3061e-02, -9.7017e-04,\n",
      "         7.3004e-03,  9.0171e-03,  6.6107e-03,  7.5743e-03, -1.0836e-02,\n",
      "         1.1273e-02,  4.2325e-03, -2.3274e-03, -6.5511e-03, -1.3441e-02,\n",
      "         1.3602e-02, -2.5152e-03,  2.0090e-03,  1.2727e-02,  3.0522e-03,\n",
      "        -8.3985e-03,  1.3227e-02, -1.2040e-02,  1.4061e-02,  1.1193e-02,\n",
      "        -1.1321e-02,  3.7077e-04, -5.9056e-03,  1.3237e-02,  1.4115e-02,\n",
      "         7.5655e-03,  1.2543e-02, -8.1894e-03,  2.7930e-03, -6.9856e-03,\n",
      "         5.5717e-03, -1.2191e-02,  1.1570e-03,  7.0919e-03, -8.8052e-03,\n",
      "        -1.2076e-02,  1.1522e-02, -9.9579e-03, -9.4031e-03, -1.0110e-03,\n",
      "        -4.6580e-03, -1.2765e-02, -9.1154e-03, -1.0897e-02,  3.4681e-03,\n",
      "         3.7372e-03,  8.5934e-03, -4.6056e-03,  1.1886e-02, -4.7883e-03,\n",
      "         8.6849e-03, -7.4249e-03, -2.1206e-03, -7.2073e-03, -6.8031e-03,\n",
      "        -8.0581e-03,  2.6675e-04,  8.5740e-03,  4.7082e-03,  1.3518e-02,\n",
      "         1.2049e-02,  6.0542e-03,  6.6111e-03,  1.0015e-02, -7.0027e-03,\n",
      "         1.1502e-02, -4.4740e-03, -6.5260e-03, -1.0325e-02, -1.4678e-02,\n",
      "         7.0868e-03, -8.1062e-03, -8.1753e-03,  2.9869e-03, -1.3796e-02,\n",
      "        -3.6282e-03, -4.6676e-03,  5.0186e-03,  2.6262e-03,  2.6979e-03,\n",
      "         9.0693e-03, -9.5328e-03,  1.1890e-03, -4.2170e-03, -2.5038e-03,\n",
      "         1.3603e-02, -3.2973e-03,  3.6548e-03,  1.0125e-02,  5.4268e-03,\n",
      "         5.1810e-03,  1.1921e-02, -1.3436e-02,  1.0517e-02,  1.5733e-03,\n",
      "        -1.1372e-02,  1.9573e-03,  5.6245e-03, -4.6116e-03, -6.2869e-03,\n",
      "         2.8942e-03,  1.6748e-03, -1.3136e-02,  1.0110e-02,  1.2737e-02,\n",
      "         7.1249e-03,  1.2193e-02, -9.3280e-03, -3.1594e-03,  2.1496e-03,\n",
      "         9.3739e-03, -5.8558e-03, -1.0173e-02, -1.4205e-02, -8.9456e-03,\n",
      "         2.1412e-03, -5.8541e-03, -8.9414e-03, -9.7542e-03,  1.2171e-02,\n",
      "        -1.0193e-02,  7.1154e-03,  1.4175e-02, -8.8189e-03, -1.2541e-03,\n",
      "        -1.4142e-02,  1.1920e-02, -6.6571e-03, -3.1561e-04, -4.8330e-03,\n",
      "        -6.0313e-03, -6.7613e-03, -6.2335e-03,  7.8389e-04,  2.1078e-04,\n",
      "         7.4964e-03, -1.2882e-02, -1.1770e-02, -2.9321e-03,  6.8448e-03,\n",
      "         9.4631e-03, -7.4622e-03,  1.2046e-02, -1.1032e-02,  1.4496e-02,\n",
      "        -4.2651e-03,  4.2923e-03,  1.1509e-02, -7.1369e-03, -8.7763e-03,\n",
      "        -9.9876e-04, -1.9029e-03,  3.5100e-03,  1.2468e-02,  1.0192e-02,\n",
      "         6.2083e-03, -6.9052e-03,  1.7780e-03,  1.3466e-02,  1.0562e-04,\n",
      "        -1.5772e-03,  3.9261e-04,  7.9227e-03,  2.0740e-03, -2.5947e-03,\n",
      "        -1.1440e-02, -4.9954e-03, -5.4192e-03, -4.3039e-03, -1.0480e-02,\n",
      "        -9.0501e-03, -1.1908e-02, -3.0834e-03, -3.0603e-03, -1.3130e-02,\n",
      "        -6.6960e-03,  9.2333e-03, -7.0496e-03, -8.3129e-03, -3.5295e-03,\n",
      "        -2.2984e-03, -2.6355e-03, -8.3702e-03,  5.8724e-03,  1.3869e-02,\n",
      "         1.0540e-02, -1.3887e-02, -4.8757e-04, -3.9890e-03,  3.6867e-03,\n",
      "        -1.3748e-02,  8.6816e-03, -6.8108e-03, -7.7519e-03,  2.4918e-03,\n",
      "         7.5650e-03,  6.1104e-03,  2.5665e-03,  1.3002e-02, -7.1650e-03,\n",
      "        -2.0950e-03,  6.4865e-03,  3.4867e-03,  5.2489e-03,  4.6841e-03,\n",
      "        -1.9244e-03,  1.0416e-02, -9.5933e-03, -2.4611e-03, -1.7342e-03,\n",
      "         1.1254e-02,  2.5556e-03, -1.8920e-03, -2.4683e-03,  4.9229e-03,\n",
      "         8.4922e-03,  1.3174e-03,  1.4645e-02, -2.2736e-03, -6.1176e-03,\n",
      "         6.0829e-03, -7.8812e-03, -5.7323e-03, -7.1787e-03, -7.2707e-03,\n",
      "        -3.6457e-04,  2.0693e-03,  9.3981e-03, -6.7972e-03,  2.8695e-03,\n",
      "        -9.2063e-03, -1.6633e-03, -6.4004e-03,  2.3044e-03, -6.5699e-04,\n",
      "        -3.1200e-03,  2.4244e-03,  3.7948e-04, -7.2858e-03, -5.3887e-04,\n",
      "         9.2218e-03,  4.0268e-03,  1.1092e-02, -1.2967e-03, -3.7386e-03,\n",
      "         1.0224e-02,  1.3379e-02,  1.4073e-02,  3.5431e-03, -6.3891e-03,\n",
      "        -1.7743e-03, -6.1638e-03,  1.1749e-02,  5.4645e-03, -7.8420e-03,\n",
      "         5.6521e-04, -2.7176e-03,  1.2551e-02,  8.3672e-04,  8.5703e-03,\n",
      "         8.2398e-03,  2.2595e-03, -3.1878e-03,  1.3891e-02,  2.1444e-04,\n",
      "        -1.2340e-02, -1.4033e-02, -7.8875e-04, -4.1429e-03,  1.2040e-02,\n",
      "         5.6579e-03,  1.2755e-02, -1.5819e-03, -1.0963e-02, -1.3847e-02,\n",
      "         1.2927e-02,  1.1676e-02,  5.1815e-03,  1.2284e-02,  7.2141e-04,\n",
      "         5.7845e-03, -4.1911e-04,  1.3870e-02,  2.3344e-03,  1.5919e-03,\n",
      "         1.0204e-02, -7.8585e-03, -7.7625e-03, -1.1033e-02,  1.2549e-02,\n",
      "        -6.5162e-03, -1.7121e-03,  9.2104e-03,  1.5078e-03,  1.7707e-03,\n",
      "        -4.8461e-03, -5.7444e-03,  3.2781e-03, -3.7737e-03,  1.2240e-02,\n",
      "        -8.5870e-04, -8.9274e-03, -1.2887e-02,  4.3160e-03,  1.3296e-02,\n",
      "        -4.3377e-03, -9.0777e-03, -1.2358e-02,  7.7277e-04, -9.1382e-04,\n",
      "        -8.5201e-03, -1.1741e-02, -3.1462e-03, -6.1053e-03,  1.0058e-02,\n",
      "        -1.0108e-02, -9.6100e-03,  4.7078e-03,  5.6447e-03, -1.0176e-02,\n",
      "        -3.4072e-03, -2.2006e-03, -7.5891e-03,  6.2281e-03, -1.1709e-03,\n",
      "         1.3857e-02, -9.2705e-03,  3.6783e-03,  1.3526e-02, -1.5938e-03,\n",
      "         5.3934e-03,  8.5099e-03, -8.9657e-03, -1.2420e-02,  9.8179e-04,\n",
      "        -1.3674e-02,  3.2047e-04, -7.4045e-03,  1.2892e-02,  1.0447e-02,\n",
      "         1.0880e-02, -1.2409e-02, -7.0990e-03,  1.4380e-02, -8.5167e-03,\n",
      "        -4.9934e-03, -5.7445e-03,  7.2368e-03, -5.2375e-03, -1.3878e-02,\n",
      "         1.3050e-02, -1.1474e-02, -7.0709e-03,  7.0579e-03,  1.0919e-02,\n",
      "        -1.3633e-02,  1.4556e-02, -1.3805e-03, -9.8989e-03, -9.6832e-03,\n",
      "         6.2037e-04, -3.2636e-03, -3.2343e-03, -1.1266e-02, -2.4897e-03,\n",
      "        -3.3440e-05, -6.5569e-03, -3.5799e-03,  1.2729e-03,  8.1310e-03,\n",
      "        -4.9263e-03,  8.9862e-03, -5.0236e-03, -9.0870e-03,  1.0699e-02,\n",
      "        -8.1584e-03, -6.2055e-03,  1.8757e-03, -7.5619e-03,  4.4317e-03,\n",
      "         6.4997e-03, -1.3971e-02,  3.5282e-03,  1.1222e-02, -1.2930e-02,\n",
      "        -9.9403e-03,  1.1046e-03,  4.3131e-03, -8.8216e-03, -7.6454e-03,\n",
      "        -1.4414e-02,  1.1641e-02,  6.0345e-03, -9.0380e-04,  1.2799e-02,\n",
      "         8.0626e-03, -1.2766e-02,  1.3695e-02,  7.7112e-03,  1.4640e-02,\n",
      "         9.8645e-04, -4.6653e-03, -1.1873e-02,  3.3493e-03,  6.5098e-03,\n",
      "        -5.7807e-03,  1.1341e-02, -9.7110e-03,  8.6549e-03,  2.9354e-04,\n",
      "         4.8389e-03,  7.9605e-03, -4.9091e-03, -6.1259e-03, -1.3305e-02,\n",
      "        -4.4387e-03,  5.1433e-03,  1.1536e-02, -2.3307e-03,  3.7255e-03,\n",
      "        -2.7206e-03,  5.0288e-04, -5.4931e-03,  1.0607e-02,  6.0968e-03,\n",
      "         8.4068e-03,  1.2295e-02,  8.1434e-03,  9.2676e-03,  8.7374e-03,\n",
      "         1.3177e-02, -3.8714e-03], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.0045,  0.0099,  0.0124],\n",
      "          [-0.0087, -0.0015,  0.0032],\n",
      "          [ 0.0015, -0.0022, -0.0078]],\n",
      "\n",
      "         [[ 0.0045,  0.0088,  0.0060],\n",
      "          [-0.0105, -0.0089,  0.0092],\n",
      "          [-0.0025,  0.0081,  0.0065]],\n",
      "\n",
      "         [[-0.0031, -0.0138, -0.0037],\n",
      "          [-0.0016,  0.0005,  0.0114],\n",
      "          [-0.0059,  0.0098,  0.0011]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0054,  0.0096,  0.0102],\n",
      "          [ 0.0107, -0.0137, -0.0086],\n",
      "          [-0.0145, -0.0118, -0.0115]],\n",
      "\n",
      "         [[ 0.0041,  0.0002,  0.0042],\n",
      "          [-0.0091,  0.0046, -0.0134],\n",
      "          [ 0.0060,  0.0097, -0.0046]],\n",
      "\n",
      "         [[ 0.0060,  0.0055, -0.0123],\n",
      "          [ 0.0063, -0.0068, -0.0025],\n",
      "          [-0.0038, -0.0110, -0.0145]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0129,  0.0114,  0.0100],\n",
      "          [-0.0025,  0.0109, -0.0126],\n",
      "          [ 0.0120, -0.0104,  0.0020]],\n",
      "\n",
      "         [[ 0.0091, -0.0076,  0.0082],\n",
      "          [-0.0106,  0.0146,  0.0034],\n",
      "          [ 0.0060,  0.0119, -0.0120]],\n",
      "\n",
      "         [[-0.0019,  0.0040,  0.0143],\n",
      "          [-0.0009, -0.0004, -0.0045],\n",
      "          [-0.0049, -0.0010,  0.0085]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0070, -0.0092, -0.0103],\n",
      "          [-0.0138,  0.0045,  0.0013],\n",
      "          [ 0.0037, -0.0062, -0.0084]],\n",
      "\n",
      "         [[ 0.0079,  0.0098,  0.0132],\n",
      "          [-0.0095,  0.0112, -0.0078],\n",
      "          [ 0.0095,  0.0095, -0.0070]],\n",
      "\n",
      "         [[ 0.0078,  0.0035, -0.0008],\n",
      "          [ 0.0088,  0.0064,  0.0093],\n",
      "          [-0.0124, -0.0050, -0.0132]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0087,  0.0007,  0.0049],\n",
      "          [ 0.0050,  0.0091,  0.0138],\n",
      "          [-0.0104, -0.0097,  0.0036]],\n",
      "\n",
      "         [[ 0.0062, -0.0124,  0.0072],\n",
      "          [ 0.0107,  0.0065, -0.0111],\n",
      "          [-0.0024,  0.0061, -0.0118]],\n",
      "\n",
      "         [[-0.0142, -0.0138,  0.0053],\n",
      "          [-0.0113, -0.0011, -0.0114],\n",
      "          [ 0.0085, -0.0130,  0.0017]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0091,  0.0118, -0.0030],\n",
      "          [ 0.0005, -0.0014,  0.0113],\n",
      "          [ 0.0137, -0.0107, -0.0138]],\n",
      "\n",
      "         [[ 0.0134, -0.0146,  0.0086],\n",
      "          [-0.0088, -0.0101, -0.0020],\n",
      "          [ 0.0083,  0.0115, -0.0012]],\n",
      "\n",
      "         [[-0.0024, -0.0020, -0.0084],\n",
      "          [-0.0082, -0.0039,  0.0112],\n",
      "          [ 0.0134, -0.0014, -0.0061]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.0079,  0.0024, -0.0070],\n",
      "          [ 0.0038, -0.0095, -0.0093],\n",
      "          [-0.0138,  0.0119,  0.0048]],\n",
      "\n",
      "         [[ 0.0046, -0.0079, -0.0069],\n",
      "          [ 0.0019,  0.0054,  0.0140],\n",
      "          [ 0.0078, -0.0022,  0.0097]],\n",
      "\n",
      "         [[-0.0082, -0.0122, -0.0093],\n",
      "          [-0.0090, -0.0044,  0.0109],\n",
      "          [-0.0139,  0.0081, -0.0056]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0095,  0.0075,  0.0035],\n",
      "          [ 0.0059,  0.0008, -0.0010],\n",
      "          [ 0.0004,  0.0142,  0.0032]],\n",
      "\n",
      "         [[ 0.0094, -0.0129,  0.0070],\n",
      "          [ 0.0100,  0.0069, -0.0063],\n",
      "          [ 0.0049,  0.0037,  0.0006]],\n",
      "\n",
      "         [[-0.0111,  0.0132,  0.0110],\n",
      "          [-0.0131, -0.0084, -0.0125],\n",
      "          [ 0.0138, -0.0009, -0.0031]]],\n",
      "\n",
      "\n",
      "        [[[-0.0138,  0.0127,  0.0060],\n",
      "          [ 0.0101,  0.0104, -0.0006],\n",
      "          [ 0.0081, -0.0047, -0.0125]],\n",
      "\n",
      "         [[ 0.0063,  0.0034, -0.0040],\n",
      "          [ 0.0053,  0.0131,  0.0137],\n",
      "          [ 0.0142,  0.0117, -0.0131]],\n",
      "\n",
      "         [[-0.0129,  0.0136,  0.0123],\n",
      "          [ 0.0135,  0.0056,  0.0088],\n",
      "          [-0.0041, -0.0104,  0.0138]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0074,  0.0057,  0.0088],\n",
      "          [-0.0120,  0.0138,  0.0059],\n",
      "          [-0.0008, -0.0105, -0.0016]],\n",
      "\n",
      "         [[-0.0014, -0.0104, -0.0088],\n",
      "          [ 0.0017,  0.0107,  0.0074],\n",
      "          [ 0.0135, -0.0066,  0.0106]],\n",
      "\n",
      "         [[-0.0047, -0.0010,  0.0050],\n",
      "          [ 0.0102,  0.0029,  0.0048],\n",
      "          [-0.0067, -0.0063,  0.0034]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0129,  0.0075,  0.0134],\n",
      "          [ 0.0121, -0.0072,  0.0062],\n",
      "          [ 0.0081,  0.0116,  0.0127]],\n",
      "\n",
      "         [[-0.0071,  0.0146,  0.0022],\n",
      "          [-0.0109,  0.0061,  0.0010],\n",
      "          [ 0.0117, -0.0012, -0.0043]],\n",
      "\n",
      "         [[ 0.0145, -0.0034,  0.0082],\n",
      "          [ 0.0079,  0.0019, -0.0134],\n",
      "          [-0.0009, -0.0142,  0.0079]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0062, -0.0125, -0.0047],\n",
      "          [-0.0121, -0.0143, -0.0015],\n",
      "          [-0.0118,  0.0038,  0.0065]],\n",
      "\n",
      "         [[-0.0046,  0.0115,  0.0074],\n",
      "          [ 0.0137,  0.0033, -0.0078],\n",
      "          [ 0.0035, -0.0052, -0.0145]],\n",
      "\n",
      "         [[-0.0111,  0.0013,  0.0008],\n",
      "          [-0.0010, -0.0129, -0.0030],\n",
      "          [ 0.0129,  0.0080,  0.0128]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 9.5836e-03,  1.3696e-02,  1.2627e-02, -1.0791e-02, -9.7324e-03,\n",
      "        -1.4704e-02,  7.1973e-03,  4.9904e-03,  1.3333e-02,  4.4363e-03,\n",
      "        -9.8496e-03,  1.0820e-02,  1.2000e-03, -5.8963e-03,  1.0703e-04,\n",
      "        -8.7936e-03,  2.3789e-03, -1.3383e-02, -2.8114e-03, -3.9651e-03,\n",
      "         1.4315e-02,  2.1992e-03,  9.5351e-03,  1.4542e-02, -1.3873e-02,\n",
      "        -1.3495e-02,  4.7875e-04,  1.6812e-03,  3.6482e-03, -1.1157e-03,\n",
      "        -1.3366e-02,  6.0570e-03, -4.4641e-03,  4.8046e-03, -5.8244e-03,\n",
      "        -1.2075e-02, -1.2748e-03, -9.7191e-03,  8.0297e-03,  9.2592e-03,\n",
      "        -2.9917e-03,  1.3531e-02, -5.4764e-03, -1.4546e-02, -3.8162e-03,\n",
      "        -1.1953e-02,  5.4700e-03, -1.2318e-02, -1.1904e-02, -6.6842e-03,\n",
      "        -1.2053e-02,  1.3680e-02,  2.6155e-04,  8.8050e-03,  1.1078e-02,\n",
      "         3.1943e-03, -6.2015e-03, -8.0140e-03,  8.3365e-04, -5.1471e-03,\n",
      "         4.1921e-03,  7.1876e-03,  1.1412e-03, -5.6598e-03, -7.1735e-03,\n",
      "        -1.1952e-02, -7.3809e-03, -4.8759e-03, -9.7436e-03,  1.4072e-03,\n",
      "         7.5388e-03, -5.1284e-03,  6.9071e-03, -1.4593e-02, -6.2353e-03,\n",
      "         8.4577e-03, -3.9982e-03,  4.9995e-05,  6.5784e-03,  1.2076e-02,\n",
      "        -1.6340e-03,  8.7484e-03, -3.2531e-03,  8.4801e-03,  9.2444e-03,\n",
      "         8.7304e-03, -7.5928e-03,  1.4592e-02, -1.2123e-02, -4.3137e-03,\n",
      "        -2.4330e-03,  7.4479e-04, -6.5654e-03,  1.1718e-02,  1.0488e-02,\n",
      "         1.1630e-02,  4.0733e-04, -3.2439e-03,  6.2750e-03,  7.8144e-03,\n",
      "        -3.9198e-03, -3.1598e-04, -1.2329e-02,  1.0564e-02, -5.2092e-03,\n",
      "        -5.2516e-03, -5.2804e-03,  1.1734e-02,  1.2862e-02, -7.5211e-03,\n",
      "         3.7458e-03,  1.1014e-02,  9.4046e-03,  6.2437e-03, -9.5040e-03,\n",
      "        -1.0744e-02, -1.3208e-02,  3.0912e-04,  2.7495e-03,  1.0771e-02,\n",
      "         1.3710e-02,  9.7630e-03,  1.3189e-02, -1.3167e-03, -1.3381e-02,\n",
      "         9.7033e-03, -1.2251e-02,  7.9385e-03,  2.7104e-03,  3.6945e-03,\n",
      "        -1.3069e-02, -8.4026e-03, -1.1110e-02, -1.2885e-02, -9.8864e-03,\n",
      "        -2.1673e-03, -3.1729e-03, -1.1664e-02, -6.2129e-03,  8.4032e-03,\n",
      "         1.4259e-02, -7.1162e-03,  1.6978e-03, -2.4983e-04, -5.1376e-03,\n",
      "        -6.3901e-03, -1.3816e-02,  1.1976e-02,  1.0223e-02, -1.2209e-02,\n",
      "        -5.9133e-03, -1.1947e-02, -1.1044e-02,  5.9872e-03, -1.7265e-05,\n",
      "         3.8842e-03,  6.3141e-03,  4.1240e-03, -3.0858e-03,  1.1606e-02,\n",
      "         1.9874e-03,  9.1423e-04,  2.7728e-03, -1.0078e-02, -1.5382e-04,\n",
      "        -1.3789e-02, -7.2230e-03,  7.4983e-03,  5.2745e-03,  4.8645e-03,\n",
      "         4.0425e-03, -9.1346e-03, -7.4657e-03,  6.0872e-03, -9.9576e-03,\n",
      "        -8.2836e-03, -7.6810e-03,  4.1610e-03,  1.1694e-02,  6.0912e-03,\n",
      "        -1.3534e-02,  3.9127e-05,  7.3683e-03,  1.3185e-02, -1.0673e-02,\n",
      "        -5.5891e-03,  7.5519e-03,  2.2092e-03, -1.1638e-02, -6.8446e-03,\n",
      "        -1.4404e-02, -6.1203e-03,  2.8699e-03,  9.9086e-03, -1.3749e-02,\n",
      "         5.1881e-03,  1.0639e-02,  2.2704e-03,  1.4413e-02, -6.2290e-03,\n",
      "        -7.0076e-03,  1.0030e-02, -1.0356e-02,  1.1165e-02,  1.2626e-02,\n",
      "         2.9304e-03,  6.3474e-03,  1.3003e-02,  1.2029e-02,  6.3458e-03,\n",
      "         9.3774e-03,  1.3807e-02,  7.6438e-04, -6.7285e-03, -9.3914e-03,\n",
      "         1.3915e-02, -2.4137e-03, -9.0003e-03,  7.4001e-03,  9.9745e-03,\n",
      "        -1.4420e-02, -7.0758e-03,  9.0280e-03,  1.4190e-02,  1.3658e-02,\n",
      "        -1.7437e-03,  3.1287e-03, -7.0809e-03, -2.1005e-04, -9.2599e-04,\n",
      "         1.3416e-02,  1.1336e-02, -1.9076e-03, -7.0164e-03, -6.3952e-03,\n",
      "         4.2758e-03, -5.0547e-03, -1.1005e-02, -5.1201e-03, -2.6974e-03,\n",
      "        -1.2821e-03, -3.0139e-03, -8.1507e-03,  3.8343e-03, -1.4632e-02,\n",
      "         1.3144e-02, -7.0701e-03, -6.8238e-03, -2.2240e-03,  9.6180e-03,\n",
      "         9.1382e-03, -4.5896e-03, -5.5655e-03,  1.0125e-02, -1.0640e-02,\n",
      "         6.5202e-03,  1.0770e-02,  1.1775e-02, -4.8080e-04,  1.0650e-02,\n",
      "        -3.7875e-04,  7.3828e-03,  1.1389e-02,  6.9320e-03,  3.1566e-04,\n",
      "         1.1433e-02, -6.1572e-03,  7.4263e-03, -1.3901e-02,  8.7587e-04,\n",
      "        -1.1210e-02,  1.2081e-02,  5.3897e-03,  8.1049e-04, -1.0639e-02,\n",
      "         7.8330e-04, -6.3496e-03, -5.1648e-03, -1.1216e-02,  6.0390e-03,\n",
      "        -1.4308e-02,  1.5706e-03, -1.0516e-02,  1.5554e-03, -4.9286e-04,\n",
      "        -3.0279e-03,  4.1859e-03,  6.2001e-03,  1.2596e-02, -2.4407e-03,\n",
      "         9.9400e-03, -1.1375e-02, -8.6558e-03,  1.2378e-02,  7.3098e-03,\n",
      "        -2.8171e-03,  2.6494e-03, -1.0598e-02, -6.7666e-03, -3.3956e-03,\n",
      "        -1.4408e-02,  3.0672e-03, -9.4685e-03,  1.3072e-02, -8.2205e-03,\n",
      "        -9.8765e-03,  1.3193e-03,  1.0739e-02,  2.8065e-03,  6.8114e-03,\n",
      "         5.1937e-03,  8.1392e-03,  5.6567e-03, -9.3587e-03,  5.7364e-03,\n",
      "         1.1399e-02, -9.9793e-03,  4.2910e-03, -9.3218e-03, -1.3843e-02,\n",
      "        -1.0491e-02,  4.7972e-03, -3.6276e-03,  5.3240e-03,  5.2384e-03,\n",
      "        -2.0086e-03,  8.4105e-03, -9.1276e-03,  1.3384e-02,  7.2365e-03,\n",
      "        -1.0698e-02, -1.0720e-02, -6.9869e-03, -5.9837e-03,  8.9533e-03,\n",
      "        -1.8761e-03, -1.2767e-02, -3.2285e-03, -3.8323e-03,  2.9719e-03,\n",
      "        -9.1615e-03,  5.1640e-03,  1.1843e-02,  1.3148e-02, -3.7623e-03,\n",
      "         2.6603e-03,  1.3720e-02,  4.2752e-04,  7.6745e-04, -4.3552e-03,\n",
      "         4.6936e-03,  1.0542e-02,  1.3976e-02,  1.1699e-02, -6.8144e-03,\n",
      "         1.0825e-02,  1.2938e-02,  1.3811e-02, -1.4682e-02, -1.2409e-02,\n",
      "         9.7231e-03,  3.9736e-03, -1.1297e-02, -1.0770e-02,  1.4657e-02,\n",
      "        -3.6503e-03, -1.5077e-03, -1.8853e-03, -3.9962e-03,  6.2804e-03,\n",
      "        -1.6765e-03,  7.4387e-03, -8.9850e-03, -8.6766e-03,  7.9364e-04,\n",
      "         7.2417e-03,  5.7541e-03, -9.6585e-03, -4.6916e-03,  2.5384e-03,\n",
      "         2.0598e-03,  4.4755e-03, -2.8326e-04,  6.0860e-03,  2.6351e-03,\n",
      "        -3.0273e-03, -1.3862e-02,  8.4847e-03, -1.5443e-03, -4.9534e-03,\n",
      "         2.4556e-03,  9.8860e-03,  2.4195e-03, -3.0721e-03,  1.4706e-02,\n",
      "        -1.3827e-02,  4.2721e-03,  8.7096e-03,  5.6960e-03,  4.4568e-03,\n",
      "         7.1561e-04, -6.4640e-04, -9.7758e-04,  3.6132e-03, -1.0684e-02,\n",
      "        -1.2934e-02, -3.8981e-03, -6.4884e-03,  1.0107e-02,  5.6154e-03,\n",
      "         3.0053e-03, -1.2364e-02, -5.1726e-03, -1.6048e-03, -2.7236e-03,\n",
      "         4.9032e-04, -1.3163e-02, -2.9466e-05,  9.1417e-03,  1.1577e-02,\n",
      "         9.3793e-03,  1.3712e-02, -1.1652e-02,  1.0203e-02, -1.0017e-02,\n",
      "        -2.5909e-03,  1.0569e-02, -3.1381e-03, -1.1123e-02, -1.0049e-02,\n",
      "         7.7598e-03, -1.3190e-02,  1.0556e-02, -9.5456e-03,  1.0906e-02,\n",
      "         1.2046e-02, -2.2316e-03, -1.0826e-02,  1.2802e-02,  4.7573e-03,\n",
      "        -4.0588e-03, -1.4549e-02,  3.5995e-03,  1.1629e-02,  1.1188e-03,\n",
      "        -2.6730e-03,  8.8022e-03, -1.0922e-02,  5.5236e-03,  4.6638e-03,\n",
      "        -2.6212e-03,  9.6495e-04,  1.0063e-02,  1.7282e-03,  9.1268e-03,\n",
      "         8.2986e-03,  9.7129e-03,  9.2650e-03,  1.0113e-02,  5.9039e-03,\n",
      "        -1.5958e-03, -8.3358e-03, -1.2014e-03, -6.8970e-03,  1.5235e-03,\n",
      "         1.4196e-02,  1.2281e-02, -1.0758e-02, -1.0884e-02,  9.9982e-03,\n",
      "        -1.4217e-02,  2.4783e-03, -4.0751e-03, -1.1721e-02, -1.4415e-02,\n",
      "         5.5524e-04,  8.8185e-03, -2.1399e-03,  5.1860e-03,  9.7642e-03,\n",
      "        -9.8228e-03,  1.4004e-02, -9.6264e-03, -4.4672e-04,  4.2963e-03,\n",
      "        -3.7851e-03, -1.4457e-02, -1.3691e-02, -9.1072e-03, -5.9904e-03,\n",
      "        -1.4713e-02,  7.9769e-03, -2.1482e-03, -8.5332e-03,  1.2272e-02,\n",
      "        -2.2082e-04, -2.3846e-03,  1.3881e-02,  2.6476e-03,  3.6372e-03,\n",
      "        -1.2424e-02, -1.3298e-02,  1.2135e-02,  1.1783e-02,  1.4186e-03,\n",
      "         3.4852e-03,  1.2111e-02, -9.2401e-03,  4.8622e-03, -1.1828e-02,\n",
      "         1.2812e-02,  5.1746e-04], device='cuda:0', requires_grad=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.0123,  0.0002, -0.0128],\n",
      "          [ 0.0055, -0.0054,  0.0046],\n",
      "          [-0.0143, -0.0134, -0.0104]],\n",
      "\n",
      "         [[-0.0021,  0.0070,  0.0045],\n",
      "          [ 0.0119,  0.0019,  0.0050],\n",
      "          [-0.0112,  0.0122,  0.0131]],\n",
      "\n",
      "         [[ 0.0116,  0.0080, -0.0022],\n",
      "          [-0.0033,  0.0040,  0.0052],\n",
      "          [ 0.0003, -0.0132,  0.0145]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0041,  0.0011, -0.0112],\n",
      "          [ 0.0006, -0.0069, -0.0127],\n",
      "          [-0.0136,  0.0091, -0.0042]],\n",
      "\n",
      "         [[-0.0029,  0.0065,  0.0090],\n",
      "          [ 0.0062, -0.0073,  0.0139],\n",
      "          [ 0.0076,  0.0116, -0.0129]],\n",
      "\n",
      "         [[-0.0029,  0.0042,  0.0033],\n",
      "          [ 0.0090, -0.0079,  0.0071],\n",
      "          [-0.0113, -0.0136, -0.0082]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0016,  0.0059, -0.0134],\n",
      "          [-0.0006, -0.0136, -0.0125],\n",
      "          [-0.0009, -0.0031, -0.0015]],\n",
      "\n",
      "         [[ 0.0125,  0.0122, -0.0099],\n",
      "          [-0.0046,  0.0115,  0.0004],\n",
      "          [-0.0092, -0.0097, -0.0145]],\n",
      "\n",
      "         [[-0.0020, -0.0074, -0.0077],\n",
      "          [-0.0013, -0.0136, -0.0122],\n",
      "          [ 0.0141, -0.0040, -0.0004]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0111,  0.0109, -0.0050],\n",
      "          [-0.0116,  0.0009,  0.0041],\n",
      "          [-0.0002,  0.0139,  0.0045]],\n",
      "\n",
      "         [[ 0.0122, -0.0006,  0.0049],\n",
      "          [-0.0060, -0.0088,  0.0076],\n",
      "          [ 0.0107, -0.0117,  0.0100]],\n",
      "\n",
      "         [[ 0.0016,  0.0004,  0.0112],\n",
      "          [ 0.0110,  0.0084,  0.0042],\n",
      "          [ 0.0092, -0.0076, -0.0109]]],\n",
      "\n",
      "\n",
      "        [[[-0.0044, -0.0005,  0.0036],\n",
      "          [ 0.0130,  0.0037,  0.0141],\n",
      "          [-0.0129, -0.0033, -0.0015]],\n",
      "\n",
      "         [[-0.0141,  0.0074,  0.0126],\n",
      "          [-0.0077,  0.0058, -0.0134],\n",
      "          [-0.0098, -0.0014,  0.0023]],\n",
      "\n",
      "         [[ 0.0082,  0.0088, -0.0029],\n",
      "          [-0.0080,  0.0064,  0.0047],\n",
      "          [-0.0021, -0.0033, -0.0027]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0087, -0.0045, -0.0133],\n",
      "          [-0.0119, -0.0038,  0.0031],\n",
      "          [ 0.0016, -0.0047, -0.0136]],\n",
      "\n",
      "         [[-0.0114, -0.0092, -0.0135],\n",
      "          [-0.0028,  0.0068, -0.0103],\n",
      "          [-0.0145,  0.0055, -0.0126]],\n",
      "\n",
      "         [[-0.0071, -0.0037, -0.0046],\n",
      "          [ 0.0031,  0.0012,  0.0045],\n",
      "          [ 0.0102, -0.0131, -0.0112]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0136,  0.0142, -0.0067],\n",
      "          [-0.0090,  0.0050, -0.0085],\n",
      "          [ 0.0103,  0.0021, -0.0108]],\n",
      "\n",
      "         [[-0.0091,  0.0052, -0.0100],\n",
      "          [-0.0086, -0.0100, -0.0101],\n",
      "          [-0.0029, -0.0070, -0.0141]],\n",
      "\n",
      "         [[ 0.0116, -0.0136, -0.0041],\n",
      "          [ 0.0087, -0.0147, -0.0012],\n",
      "          [-0.0090,  0.0016, -0.0120]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0136,  0.0105,  0.0053],\n",
      "          [-0.0055, -0.0121, -0.0032],\n",
      "          [-0.0083, -0.0103, -0.0100]],\n",
      "\n",
      "         [[ 0.0038,  0.0098,  0.0068],\n",
      "          [ 0.0036, -0.0145,  0.0090],\n",
      "          [ 0.0091,  0.0029, -0.0040]],\n",
      "\n",
      "         [[-0.0010, -0.0002, -0.0038],\n",
      "          [-0.0044, -0.0115, -0.0100],\n",
      "          [ 0.0021, -0.0016, -0.0121]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0040, -0.0027,  0.0094],\n",
      "          [ 0.0106, -0.0075,  0.0067],\n",
      "          [ 0.0076, -0.0138, -0.0144]],\n",
      "\n",
      "         [[ 0.0112, -0.0083, -0.0146],\n",
      "          [-0.0122,  0.0033, -0.0127],\n",
      "          [-0.0096, -0.0027,  0.0019]],\n",
      "\n",
      "         [[-0.0133, -0.0064,  0.0033],\n",
      "          [ 0.0125,  0.0036,  0.0133],\n",
      "          [ 0.0036, -0.0145,  0.0075]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0142, -0.0060, -0.0137],\n",
      "          [ 0.0091, -0.0018, -0.0147],\n",
      "          [-0.0077,  0.0136, -0.0011]],\n",
      "\n",
      "         [[-0.0007,  0.0147,  0.0034],\n",
      "          [ 0.0097, -0.0108, -0.0084],\n",
      "          [ 0.0128, -0.0097, -0.0087]],\n",
      "\n",
      "         [[ 0.0054, -0.0029, -0.0080],\n",
      "          [-0.0061, -0.0075, -0.0143],\n",
      "          [-0.0046,  0.0040, -0.0054]]],\n",
      "\n",
      "\n",
      "        [[[-0.0087,  0.0121, -0.0037],\n",
      "          [ 0.0068, -0.0033,  0.0106],\n",
      "          [ 0.0140, -0.0075,  0.0141]],\n",
      "\n",
      "         [[-0.0073,  0.0100,  0.0010],\n",
      "          [-0.0115,  0.0020,  0.0031],\n",
      "          [ 0.0042,  0.0130, -0.0075]],\n",
      "\n",
      "         [[-0.0082, -0.0072,  0.0087],\n",
      "          [ 0.0140, -0.0077,  0.0092],\n",
      "          [ 0.0070,  0.0008, -0.0114]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0040,  0.0050, -0.0052],\n",
      "          [-0.0015, -0.0031, -0.0128],\n",
      "          [ 0.0097, -0.0003,  0.0061]],\n",
      "\n",
      "         [[ 0.0036, -0.0090,  0.0030],\n",
      "          [-0.0055, -0.0026, -0.0045],\n",
      "          [ 0.0118,  0.0036,  0.0074]],\n",
      "\n",
      "         [[ 0.0091, -0.0070, -0.0032],\n",
      "          [-0.0059,  0.0039, -0.0082],\n",
      "          [ 0.0052, -0.0029,  0.0029]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0110,  0.0071,  0.0024,  ..., -0.0034,  0.0088, -0.0077],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0.,  ..., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-4.3592e-03,  2.7075e-03, -2.2903e-03],\n",
      "          [-4.2293e-03, -9.0989e-03, -6.1194e-03],\n",
      "          [ 1.2077e-03, -1.9295e-03,  8.8774e-03]],\n",
      "\n",
      "         [[ 4.8344e-03, -5.9857e-03, -5.8790e-03],\n",
      "          [-1.6118e-03, -5.6573e-03,  7.5251e-03],\n",
      "          [-2.3987e-03,  6.8166e-03, -3.6589e-03]],\n",
      "\n",
      "         [[-1.8967e-03,  1.2221e-03,  9.4619e-03],\n",
      "          [-6.0764e-03, -8.7386e-03,  4.0013e-04],\n",
      "          [-7.6003e-03,  9.4855e-03,  2.0410e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.1528e-03,  7.2737e-03,  3.0471e-03],\n",
      "          [-1.6884e-03,  8.9483e-03, -1.4320e-05],\n",
      "          [-3.5473e-03,  9.4911e-03,  6.3602e-03]],\n",
      "\n",
      "         [[ 1.2217e-03,  6.1186e-03,  9.6071e-03],\n",
      "          [-6.3768e-03, -1.0085e-02, -9.6460e-03],\n",
      "          [ 3.2697e-03, -9.4617e-03, -1.6822e-03]],\n",
      "\n",
      "         [[-3.0361e-03, -5.8975e-03,  1.7220e-03],\n",
      "          [-7.0226e-03,  9.1728e-04, -1.8162e-03],\n",
      "          [ 5.3102e-03, -8.6806e-03,  3.9520e-03]]],\n",
      "\n",
      "\n",
      "        [[[-6.9380e-04, -7.8192e-03,  1.0022e-03],\n",
      "          [ 5.5720e-03, -3.3825e-03,  9.6330e-03],\n",
      "          [-1.0017e-02,  9.2292e-03,  5.6648e-03]],\n",
      "\n",
      "         [[ 3.7426e-03,  8.2842e-03,  1.5863e-03],\n",
      "          [ 5.9746e-03,  2.9846e-03,  6.4624e-03],\n",
      "          [-2.8256e-03, -6.8692e-03,  3.5789e-03]],\n",
      "\n",
      "         [[ 6.7057e-03, -9.8656e-03, -8.8839e-03],\n",
      "          [-2.9674e-03,  5.8980e-03,  8.2380e-04],\n",
      "          [ 1.0188e-02, -4.6127e-03, -3.2660e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.8592e-04,  8.8614e-03, -7.7327e-03],\n",
      "          [ 3.2933e-03,  9.0001e-03, -3.4345e-03],\n",
      "          [-5.6027e-03,  5.6357e-03,  2.4808e-05]],\n",
      "\n",
      "         [[ 4.4719e-04,  2.3686e-03, -7.0048e-03],\n",
      "          [ 4.3839e-03,  8.8459e-03, -7.1492e-03],\n",
      "          [ 7.6050e-03, -9.8222e-03,  9.9279e-03]],\n",
      "\n",
      "         [[ 7.0736e-03, -8.8710e-03,  9.1186e-04],\n",
      "          [-6.2378e-03, -7.4702e-03, -9.8567e-03],\n",
      "          [-9.3639e-03, -1.8714e-03, -9.9262e-03]]],\n",
      "\n",
      "\n",
      "        [[[-7.4153e-05,  9.5277e-03,  7.4551e-03],\n",
      "          [-1.0285e-02, -1.6647e-03,  7.2726e-04],\n",
      "          [ 1.0148e-02,  6.5126e-03, -7.5726e-03]],\n",
      "\n",
      "         [[ 3.8111e-03,  1.0073e-02, -2.3833e-03],\n",
      "          [ 3.4412e-03,  9.0534e-03,  9.7148e-03],\n",
      "          [-1.9039e-03,  2.5158e-04, -4.8610e-03]],\n",
      "\n",
      "         [[ 5.3258e-03,  6.9100e-03,  9.5326e-03],\n",
      "          [ 6.4607e-03,  1.8568e-04,  5.2604e-05],\n",
      "          [-8.1118e-03,  4.7093e-03, -1.1117e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.0032e-02,  5.3336e-03, -1.7373e-03],\n",
      "          [-1.0570e-03,  7.3176e-04,  2.6074e-03],\n",
      "          [ 1.1598e-03, -1.4070e-03, -4.4554e-04]],\n",
      "\n",
      "         [[ 8.9144e-03,  6.4537e-03,  2.8339e-03],\n",
      "          [-8.0892e-03,  4.6987e-03, -1.0395e-03],\n",
      "          [ 4.7580e-03,  5.9905e-03,  7.7739e-03]],\n",
      "\n",
      "         [[-2.0448e-03,  1.0176e-02, -5.7116e-03],\n",
      "          [-4.7483e-03,  2.2952e-03,  1.4775e-03],\n",
      "          [ 5.4457e-04,  3.8058e-03,  5.1995e-03]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 9.9819e-03,  1.0210e-02, -7.1061e-04],\n",
      "          [-9.9655e-03,  6.7273e-03, -2.6410e-03],\n",
      "          [ 5.5943e-03,  9.9760e-03, -1.0710e-03]],\n",
      "\n",
      "         [[-4.7252e-03,  5.3809e-03, -6.5831e-03],\n",
      "          [ 5.5851e-03,  4.7529e-03, -2.4990e-03],\n",
      "          [ 9.3101e-03,  6.9410e-03, -8.3277e-03]],\n",
      "\n",
      "         [[-5.2924e-04, -3.3083e-03,  1.4767e-03],\n",
      "          [ 7.2697e-03, -8.4227e-03, -5.4881e-03],\n",
      "          [ 9.2122e-03, -2.6277e-03, -2.9053e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.9793e-03, -2.1615e-03, -3.6639e-03],\n",
      "          [-1.5089e-03,  9.3487e-04,  1.0130e-02],\n",
      "          [ 4.0047e-03,  5.5661e-04,  7.0619e-03]],\n",
      "\n",
      "         [[ 7.2182e-03,  2.6542e-03, -2.7387e-03],\n",
      "          [-3.0222e-03,  5.2675e-03, -9.3719e-03],\n",
      "          [ 9.5101e-03, -8.3934e-03, -4.3018e-03]],\n",
      "\n",
      "         [[-3.3202e-03, -5.8384e-03, -4.2083e-03],\n",
      "          [-3.7878e-03, -2.1950e-03, -8.1205e-03],\n",
      "          [-7.0518e-03, -1.1293e-03,  6.9285e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 2.1809e-03, -4.4239e-03,  5.4630e-03],\n",
      "          [ 5.0529e-03, -4.6154e-03,  8.7049e-03],\n",
      "          [ 2.5181e-04,  5.1787e-03,  3.9679e-03]],\n",
      "\n",
      "         [[ 1.1553e-03,  7.1198e-03,  5.7729e-03],\n",
      "          [ 7.0710e-03,  8.5496e-03,  9.8580e-03],\n",
      "          [ 2.0426e-03, -2.6115e-03, -1.7274e-03]],\n",
      "\n",
      "         [[-9.9047e-03, -8.0248e-03, -1.4065e-03],\n",
      "          [ 3.5025e-03, -2.6893e-04, -1.6671e-04],\n",
      "          [ 8.1191e-03,  8.5530e-03, -4.2628e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.2377e-03, -1.5300e-03,  6.8978e-03],\n",
      "          [-2.8868e-03,  9.4814e-03, -8.9654e-03],\n",
      "          [-1.5166e-03,  5.1892e-03, -5.7185e-03]],\n",
      "\n",
      "         [[-2.2742e-03,  5.8777e-03, -6.9589e-03],\n",
      "          [ 8.2515e-03,  6.4360e-03,  1.6784e-03],\n",
      "          [ 7.8756e-03, -1.3228e-03, -1.0101e-02]],\n",
      "\n",
      "         [[-4.8157e-03,  7.2121e-03, -7.0372e-03],\n",
      "          [ 8.5338e-03, -3.3068e-03,  4.2073e-03],\n",
      "          [ 8.3663e-03, -2.4889e-03,  6.3696e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 6.6124e-03,  4.1316e-03, -4.2341e-03],\n",
      "          [ 8.0440e-03, -8.2146e-03, -9.6051e-03],\n",
      "          [ 9.0763e-04,  3.8921e-03, -7.3509e-03]],\n",
      "\n",
      "         [[ 9.7229e-03, -5.7075e-03, -9.1124e-03],\n",
      "          [ 6.6514e-03, -6.8979e-03, -1.0187e-02],\n",
      "          [-1.2846e-03, -8.3202e-03, -4.0361e-03]],\n",
      "\n",
      "         [[-9.7190e-03, -8.5411e-03, -9.6299e-03],\n",
      "          [ 5.9255e-03, -1.3866e-03,  8.1357e-03],\n",
      "          [-6.9882e-03, -4.2373e-03, -5.4310e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-7.6923e-03, -5.8764e-03, -3.4593e-03],\n",
      "          [ 4.0440e-03,  1.0252e-02,  1.0859e-03],\n",
      "          [-3.6808e-03, -1.2853e-03, -4.7897e-03]],\n",
      "\n",
      "         [[-7.1562e-03,  7.4243e-03,  7.5615e-03],\n",
      "          [-6.7441e-04,  2.6624e-03, -1.4154e-03],\n",
      "          [ 5.7757e-03, -8.2589e-03,  2.9385e-03]],\n",
      "\n",
      "         [[ 7.1067e-05, -5.3118e-03,  7.5857e-03],\n",
      "          [ 3.0017e-03,  1.5371e-05,  9.2151e-03],\n",
      "          [-6.4004e-03, -2.2022e-03, -8.8191e-03]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0033, -0.0033, -0.0103,  ...,  0.0037, -0.0083,  0.0077],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0.,  ..., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-2.9352e-03,  6.0353e-03,  8.5108e-03],\n",
      "          [-4.5310e-03, -3.5268e-03, -1.3603e-03],\n",
      "          [-3.2374e-03,  4.3429e-04, -9.8691e-03]],\n",
      "\n",
      "         [[-9.6469e-03, -8.8617e-03, -2.8656e-03],\n",
      "          [-6.0012e-03, -3.2825e-04, -3.7527e-03],\n",
      "          [-4.9516e-03,  7.5071e-03, -5.3931e-03]],\n",
      "\n",
      "         [[-6.1462e-03,  9.7391e-03,  3.3291e-03],\n",
      "          [-9.1576e-03, -3.6225e-03,  3.7993e-04],\n",
      "          [ 9.8338e-03,  9.2972e-03,  8.1328e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3545e-03,  8.2720e-03, -7.9574e-03],\n",
      "          [ 5.6843e-03,  7.2450e-03,  2.4274e-03],\n",
      "          [-2.8116e-03,  8.2360e-03, -1.3283e-03]],\n",
      "\n",
      "         [[ 8.3017e-03,  5.3870e-03,  6.1988e-03],\n",
      "          [-7.2270e-03, -8.5658e-03, -9.9126e-03],\n",
      "          [-6.4993e-03,  6.5682e-03, -6.5354e-03]],\n",
      "\n",
      "         [[ 6.6680e-03, -6.5388e-03, -9.3850e-03],\n",
      "          [-4.1209e-03,  4.2894e-03,  2.9612e-03],\n",
      "          [ 8.2084e-03, -8.6624e-03,  2.3410e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 5.8316e-03,  9.6647e-03,  7.0323e-03],\n",
      "          [-6.5207e-03, -3.8734e-03, -6.4211e-03],\n",
      "          [-4.6781e-03,  5.0993e-03,  1.0017e-02]],\n",
      "\n",
      "         [[-2.1239e-03,  7.7862e-03, -6.4050e-03],\n",
      "          [-5.4149e-03,  5.9906e-03, -2.3565e-03],\n",
      "          [ 1.5194e-03,  2.7270e-03,  9.9638e-03]],\n",
      "\n",
      "         [[-1.0817e-04,  2.6148e-03,  4.3920e-03],\n",
      "          [ 2.5334e-03,  2.9647e-03,  1.9872e-03],\n",
      "          [ 8.3095e-03, -8.1029e-03, -4.6307e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.9922e-03,  6.7939e-03, -9.7706e-03],\n",
      "          [-5.7393e-03, -9.3005e-03,  4.8734e-03],\n",
      "          [ 2.9684e-03,  2.8109e-03,  8.8073e-03]],\n",
      "\n",
      "         [[ 9.4347e-03,  3.5079e-03, -5.3883e-03],\n",
      "          [ 7.3900e-03, -2.7468e-03, -7.2159e-03],\n",
      "          [-9.2448e-03, -1.8961e-03, -7.6104e-03]],\n",
      "\n",
      "         [[-6.4474e-03,  4.7933e-03,  6.2370e-03],\n",
      "          [ 3.1962e-03,  1.1968e-03, -4.1582e-03],\n",
      "          [-8.2650e-04, -2.2193e-03,  5.8788e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 9.3117e-03,  6.7825e-03,  3.7852e-03],\n",
      "          [-8.5991e-03, -3.8487e-04, -1.0194e-02],\n",
      "          [-8.2616e-03, -9.9338e-03, -5.0060e-03]],\n",
      "\n",
      "         [[-5.6494e-03,  6.4105e-03,  1.6456e-03],\n",
      "          [-9.3833e-03,  3.7800e-03,  8.7369e-03],\n",
      "          [ 7.7238e-03,  9.9699e-03,  6.6448e-03]],\n",
      "\n",
      "         [[-7.5736e-03,  3.0804e-03, -7.6697e-03],\n",
      "          [ 2.4770e-03, -7.6084e-03,  5.0392e-03],\n",
      "          [ 3.5992e-03, -1.1999e-04, -7.6421e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.4546e-03, -6.8194e-03, -3.0933e-03],\n",
      "          [-5.2159e-04, -1.8319e-03,  5.4238e-04],\n",
      "          [-4.6887e-03, -9.4924e-03, -8.9211e-03]],\n",
      "\n",
      "         [[ 6.6975e-03,  1.2528e-03,  4.3381e-04],\n",
      "          [ 7.0063e-03,  1.0018e-02, -7.6484e-03],\n",
      "          [ 9.4842e-03,  6.6574e-03, -4.1682e-03]],\n",
      "\n",
      "         [[-5.3547e-03,  8.4689e-03, -2.2630e-03],\n",
      "          [ 9.1063e-04,  7.5377e-03, -2.3963e-03],\n",
      "          [-4.8585e-03,  6.7637e-03, -2.5476e-03]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 2.9508e-03,  9.2887e-03, -4.9783e-03],\n",
      "          [ 9.6121e-03,  9.6353e-03,  1.7382e-05],\n",
      "          [-1.0118e-02,  1.1878e-04, -1.0255e-02]],\n",
      "\n",
      "         [[-1.0092e-02,  2.9636e-03, -9.1196e-03],\n",
      "          [ 1.2304e-03, -4.3872e-03,  4.4187e-03],\n",
      "          [ 1.4718e-03, -8.9741e-03,  9.2158e-03]],\n",
      "\n",
      "         [[-5.0942e-03, -5.4302e-03, -2.3737e-03],\n",
      "          [ 8.1723e-03,  5.1921e-03, -4.6527e-03],\n",
      "          [ 1.0311e-02, -9.9761e-03, -4.3839e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.7773e-03, -7.6362e-03,  2.7898e-03],\n",
      "          [-3.5376e-03, -3.8437e-03,  4.7373e-03],\n",
      "          [ 5.6641e-03,  9.4677e-03, -4.8886e-03]],\n",
      "\n",
      "         [[ 7.3402e-04, -1.0334e-02,  3.5858e-03],\n",
      "          [ 7.2639e-03, -9.5534e-03, -3.2797e-03],\n",
      "          [-1.8411e-05, -8.9114e-03, -8.9096e-03]],\n",
      "\n",
      "         [[-2.7956e-03,  9.8327e-03, -8.8176e-03],\n",
      "          [ 7.5267e-03,  3.8736e-03,  2.9891e-03],\n",
      "          [ 5.6831e-03,  9.5357e-03, -3.7925e-03]]],\n",
      "\n",
      "\n",
      "        [[[-8.8705e-03,  4.7302e-03,  3.1374e-03],\n",
      "          [-2.3076e-03, -2.9435e-03,  4.1304e-04],\n",
      "          [ 1.9626e-03,  9.7651e-04, -8.0059e-03]],\n",
      "\n",
      "         [[-3.8675e-03, -3.3445e-03,  7.6299e-03],\n",
      "          [-8.6934e-03,  4.1848e-03,  5.9846e-03],\n",
      "          [-3.7056e-03, -1.5481e-03,  6.8172e-03]],\n",
      "\n",
      "         [[-7.3823e-03, -1.6604e-03, -1.2909e-03],\n",
      "          [-2.4131e-03,  1.0409e-02,  9.2704e-03],\n",
      "          [ 3.7373e-03,  4.8423e-03,  7.0669e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.9718e-03, -6.9315e-03,  7.6657e-03],\n",
      "          [ 3.4102e-03, -1.9938e-03, -2.5669e-03],\n",
      "          [ 1.0404e-02,  7.4083e-03,  5.0215e-04]],\n",
      "\n",
      "         [[ 5.3122e-04,  4.9028e-03,  2.2169e-05],\n",
      "          [ 7.7092e-04,  5.5585e-03,  7.1615e-03],\n",
      "          [ 1.6266e-03, -6.5301e-03,  4.2624e-03]],\n",
      "\n",
      "         [[ 5.1967e-03, -3.8280e-03,  9.8797e-03],\n",
      "          [-1.0127e-02, -9.6872e-03, -6.0601e-03],\n",
      "          [-9.3454e-03, -9.7763e-04,  1.0288e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 6.3999e-03,  5.7513e-03,  3.9475e-03],\n",
      "          [-9.2290e-03, -2.1987e-03, -3.8973e-04],\n",
      "          [-1.0074e-02,  1.6461e-03, -5.1682e-03]],\n",
      "\n",
      "         [[ 6.1135e-03,  4.9452e-03, -6.5165e-03],\n",
      "          [-8.2373e-03,  9.6482e-03, -9.9164e-03],\n",
      "          [ 9.1063e-03,  5.7086e-03,  7.3231e-03]],\n",
      "\n",
      "         [[ 6.0857e-03,  2.6615e-03, -6.8263e-03],\n",
      "          [ 1.0202e-02, -6.4778e-03, -3.8017e-03],\n",
      "          [ 1.8269e-03, -9.9976e-03,  5.1301e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.3018e-03, -1.7006e-03, -1.3449e-03],\n",
      "          [ 2.4638e-03,  5.5663e-03, -4.5068e-03],\n",
      "          [ 6.3427e-03, -2.5581e-03, -8.1335e-03]],\n",
      "\n",
      "         [[-8.4382e-03, -4.2515e-03, -2.4886e-03],\n",
      "          [-9.4547e-03,  8.0794e-03, -9.1103e-03],\n",
      "          [ 8.5997e-04,  5.1501e-03, -1.6724e-03]],\n",
      "\n",
      "         [[-8.3245e-03,  8.7106e-03, -2.3955e-04],\n",
      "          [ 5.5073e-03,  9.7658e-04, -6.5349e-03],\n",
      "          [ 5.6167e-03,  8.2320e-03, -7.3676e-03]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0014, -0.0056,  0.0085,  ..., -0.0073, -0.0078, -0.0054],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0.,  ..., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 9.5664e-03,  7.5893e-03],\n",
      "          [ 1.7071e-02, -1.9255e-02]],\n",
      "\n",
      "         [[ 1.9736e-02,  2.0406e-02],\n",
      "          [ 1.3862e-02, -1.9063e-02]],\n",
      "\n",
      "         [[ 1.3643e-02,  4.5431e-03],\n",
      "          [-1.9822e-02, -7.8883e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.0324e-02, -1.7089e-02],\n",
      "          [ 8.7977e-03,  1.6984e-03]],\n",
      "\n",
      "         [[ 2.3918e-03,  3.7625e-03],\n",
      "          [-1.9525e-02, -1.4967e-02]],\n",
      "\n",
      "         [[ 1.9570e-02, -1.5020e-02],\n",
      "          [-1.1432e-02, -2.1251e-02]]],\n",
      "\n",
      "\n",
      "        [[[-6.4739e-03,  5.0038e-03],\n",
      "          [-4.4914e-03,  1.9992e-02]],\n",
      "\n",
      "         [[ 1.9881e-02,  3.6793e-03],\n",
      "          [-1.2591e-02,  5.6542e-03]],\n",
      "\n",
      "         [[-4.2261e-03,  2.0390e-02],\n",
      "          [ 2.1456e-02,  1.8128e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.3306e-02,  1.6775e-02],\n",
      "          [ 1.6097e-02,  5.2636e-03]],\n",
      "\n",
      "         [[ 1.9831e-03,  2.1246e-02],\n",
      "          [ 2.1713e-02, -2.0030e-02]],\n",
      "\n",
      "         [[-2.2080e-02, -9.3666e-03],\n",
      "          [ 8.3845e-03,  1.9086e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.6557e-02,  1.3255e-02],\n",
      "          [-8.2509e-03, -1.9147e-02]],\n",
      "\n",
      "         [[ 7.9552e-03,  6.2519e-03],\n",
      "          [-1.5200e-02,  1.5372e-02]],\n",
      "\n",
      "         [[-1.0652e-02, -4.8034e-03],\n",
      "          [ 3.7304e-03,  7.3500e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 9.4782e-03, -1.7815e-03],\n",
      "          [ 1.1146e-02,  1.4591e-02]],\n",
      "\n",
      "         [[-2.1110e-02, -1.3577e-02],\n",
      "          [-1.9594e-02,  1.7007e-02]],\n",
      "\n",
      "         [[-1.1018e-02,  3.1615e-05],\n",
      "          [-1.4820e-02, -1.9240e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-1.3969e-02,  2.2019e-02],\n",
      "          [-2.1099e-04,  9.1079e-03]],\n",
      "\n",
      "         [[ 5.8371e-03,  2.4965e-03],\n",
      "          [ 1.2442e-02, -1.8834e-02]],\n",
      "\n",
      "         [[ 1.7910e-02,  7.8900e-03],\n",
      "          [-1.1275e-02,  2.0590e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.2039e-02,  1.6868e-02],\n",
      "          [-8.3776e-03,  8.7734e-03]],\n",
      "\n",
      "         [[ 1.1530e-02,  1.1752e-02],\n",
      "          [-3.2647e-03,  2.6934e-04]],\n",
      "\n",
      "         [[ 9.1535e-03,  1.5579e-02],\n",
      "          [ 8.4173e-03,  1.9080e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.0150e-02, -1.2327e-02],\n",
      "          [-1.4551e-02,  1.8234e-02]],\n",
      "\n",
      "         [[-1.6490e-02, -1.7033e-03],\n",
      "          [ 4.0778e-03,  2.1622e-02]],\n",
      "\n",
      "         [[-9.3709e-03, -1.1723e-03],\n",
      "          [ 9.1570e-03,  1.7517e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.3727e-03, -1.9122e-02],\n",
      "          [ 1.2090e-02,  2.7655e-03]],\n",
      "\n",
      "         [[-1.6649e-03,  1.1584e-02],\n",
      "          [ 1.7265e-02, -1.5063e-02]],\n",
      "\n",
      "         [[ 2.1831e-02, -1.2341e-02],\n",
      "          [-3.9893e-03, -5.4734e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 3.5612e-03, -2.3835e-03],\n",
      "          [ 1.5762e-02, -1.9574e-03]],\n",
      "\n",
      "         [[-1.0870e-02, -1.3546e-02],\n",
      "          [ 1.8657e-02, -1.0151e-02]],\n",
      "\n",
      "         [[-1.4202e-02, -1.4635e-02],\n",
      "          [ 9.8293e-03,  1.5487e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.2491e-02,  9.1421e-03],\n",
      "          [-2.3540e-03,  1.7092e-02]],\n",
      "\n",
      "         [[-1.3471e-02,  1.5319e-02],\n",
      "          [-1.3620e-02, -6.2839e-03]],\n",
      "\n",
      "         [[-6.5043e-03,  1.4976e-02],\n",
      "          [ 5.0748e-03,  1.9121e-02]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 2.7681e-03, -9.3685e-03, -1.0158e-02,  7.1007e-03, -9.0551e-03,\n",
      "         2.1730e-02, -2.1734e-03, -1.7758e-02,  1.8044e-02,  9.3176e-03,\n",
      "         9.7382e-03, -4.0542e-03, -1.1360e-02, -4.4780e-03,  2.4812e-03,\n",
      "         7.8428e-03,  1.2002e-03,  1.6932e-02, -1.0249e-02, -1.1857e-02,\n",
      "        -3.1483e-03, -7.5226e-03, -1.4581e-02,  1.7988e-02, -1.2772e-02,\n",
      "         1.7716e-02,  1.2682e-02, -8.8963e-03, -2.0277e-02, -1.5282e-02,\n",
      "        -7.3065e-03,  1.7775e-02,  3.3633e-03,  2.9193e-03, -1.6085e-02,\n",
      "         4.3711e-03, -2.4373e-03,  1.4612e-02,  1.9060e-02,  1.6647e-02,\n",
      "         2.1662e-02, -3.8262e-04, -1.1922e-02, -1.8336e-02, -1.3892e-02,\n",
      "        -1.6861e-02, -8.5792e-03, -1.2968e-02,  1.6339e-02,  1.8986e-02,\n",
      "         6.0395e-03,  3.8639e-03, -1.4440e-02, -7.8417e-03, -1.3844e-02,\n",
      "        -1.8447e-02,  7.4566e-03, -1.8512e-02,  1.7837e-03, -1.2702e-02,\n",
      "         1.6112e-02,  1.9670e-02,  1.8153e-02, -2.0282e-02,  1.4495e-03,\n",
      "         2.4017e-03,  1.5324e-03,  2.2156e-04,  1.3798e-02,  9.7385e-03,\n",
      "         1.1020e-02, -8.2907e-03,  1.2574e-02,  1.7869e-02,  1.2955e-02,\n",
      "         1.7884e-02,  8.3526e-03, -1.3975e-03,  1.7821e-02,  2.0135e-02,\n",
      "        -1.5092e-02,  7.8982e-03, -1.5363e-03, -2.4902e-04,  1.0742e-02,\n",
      "         1.5998e-02,  1.3836e-02,  5.0505e-03,  2.1456e-02, -2.3246e-03,\n",
      "        -2.3663e-03, -9.1337e-03,  9.0243e-03,  1.2494e-02,  2.8003e-03,\n",
      "        -7.3623e-03, -7.1982e-03,  1.0178e-02,  6.4079e-03, -7.5548e-03,\n",
      "        -1.7818e-04,  3.4393e-03,  1.8784e-03, -9.9780e-03, -1.4053e-02,\n",
      "         1.2179e-02,  1.0631e-02, -1.0236e-02,  5.9135e-03, -9.6195e-04,\n",
      "         8.0156e-03, -7.9309e-03, -5.4742e-03, -1.4933e-02, -1.6364e-02,\n",
      "        -1.3119e-02,  1.5456e-02,  7.8909e-04,  8.6623e-03,  1.7834e-02,\n",
      "         3.9100e-03,  6.6804e-03, -3.0236e-03, -6.4982e-03, -1.6969e-02,\n",
      "        -1.9932e-03,  1.2279e-02,  3.3890e-04,  1.3528e-02,  1.7946e-02,\n",
      "        -1.0295e-02,  1.8941e-02,  1.9448e-03, -1.4384e-02,  1.9195e-02,\n",
      "        -2.1177e-04, -2.0530e-02,  6.2237e-03,  1.8245e-02,  1.0719e-02,\n",
      "         1.5935e-02, -5.5883e-03, -5.4819e-03, -9.6550e-03, -2.2435e-03,\n",
      "         1.4411e-02, -2.0854e-02, -6.0105e-03, -2.1714e-02, -9.5679e-03,\n",
      "         1.4133e-02, -2.9007e-03,  8.0801e-03, -1.9986e-02,  1.2304e-02,\n",
      "         1.6049e-02,  1.8724e-02, -2.0075e-02, -6.9564e-03,  1.3064e-03,\n",
      "        -2.0153e-02,  8.3698e-03,  1.4124e-02, -1.1194e-02,  9.4289e-03,\n",
      "        -1.8610e-02, -2.1040e-02, -1.5048e-03, -5.0999e-03, -6.9816e-03,\n",
      "         1.3497e-02, -6.2121e-03, -6.3863e-03,  7.5770e-03,  9.1600e-03,\n",
      "         5.4284e-03,  1.1888e-02,  1.3457e-02,  1.8851e-03,  1.2546e-02,\n",
      "        -1.4993e-02,  1.1509e-03,  1.1703e-02,  4.6361e-03,  5.3532e-06,\n",
      "         1.3034e-02,  2.3310e-03, -5.3639e-03,  5.9857e-03, -2.3957e-03,\n",
      "         9.6864e-04,  1.7116e-02, -2.1327e-03,  1.3885e-02,  1.1549e-02,\n",
      "         8.1931e-03,  1.6241e-02, -1.5106e-02, -9.7660e-03, -7.6590e-03,\n",
      "        -1.0131e-02, -1.3572e-02, -4.9915e-05,  1.5597e-02, -4.3101e-04,\n",
      "         7.4236e-03,  3.8569e-03, -1.1790e-02,  1.1659e-02, -8.7676e-03,\n",
      "         2.0188e-02, -1.4512e-03, -1.8866e-02,  4.8293e-03,  1.6727e-02,\n",
      "        -9.4140e-03,  1.5304e-03, -1.4300e-02, -3.2207e-03,  2.7982e-03,\n",
      "         1.5681e-02, -7.7956e-03,  6.4996e-03,  2.2043e-02,  1.8934e-02,\n",
      "        -8.5598e-03, -1.7280e-02,  1.7574e-03,  7.6400e-04,  1.8005e-02,\n",
      "        -1.7846e-02, -6.2338e-03, -2.1550e-02,  9.3898e-05,  1.6194e-02,\n",
      "         5.1218e-03, -1.2207e-02, -1.7898e-02,  1.9692e-02,  2.2072e-02,\n",
      "        -5.6758e-03, -2.7091e-03,  1.3256e-03, -1.1113e-02,  7.4321e-03,\n",
      "        -7.9125e-03, -2.8308e-03,  1.5706e-02,  1.3419e-02,  8.9972e-03,\n",
      "         1.3461e-02, -1.9243e-03, -5.2393e-03, -1.9406e-02, -1.1645e-02,\n",
      "        -8.2157e-03, -6.5057e-03, -1.7026e-05,  1.7790e-02, -1.9074e-03,\n",
      "         1.7157e-02,  1.0116e-02,  8.8243e-04, -8.3384e-03, -6.0020e-03,\n",
      "         1.9547e-02,  1.9076e-02,  1.6324e-02, -1.3788e-02,  1.7816e-02,\n",
      "        -1.8827e-02, -1.9584e-02,  9.2544e-03, -2.4896e-03,  1.7219e-02,\n",
      "         9.9621e-03, -1.7051e-02, -4.1564e-03, -1.8553e-02, -1.5313e-02,\n",
      "         2.1033e-02, -5.6485e-03, -1.2292e-03, -5.3945e-04,  1.2282e-03,\n",
      "        -6.5892e-04,  2.8602e-03,  1.5859e-02, -2.8264e-03, -1.2703e-02,\n",
      "        -1.6623e-02, -1.1925e-02, -1.7342e-02, -1.7517e-02, -2.1055e-02,\n",
      "         4.8490e-04, -2.1762e-02,  1.9311e-02, -2.2079e-02,  5.3758e-03,\n",
      "         1.4267e-02,  5.1655e-03,  9.9380e-03, -1.1585e-02,  5.1956e-03,\n",
      "        -1.5547e-02,  1.7609e-02, -2.3120e-03, -1.2160e-02, -1.1044e-02,\n",
      "         1.7584e-02, -3.9436e-03,  2.1883e-02, -1.5441e-02,  1.4178e-02,\n",
      "        -7.2976e-03, -5.6192e-04, -1.2025e-02,  2.0653e-03,  1.4350e-02,\n",
      "         1.5073e-02, -1.1106e-02,  8.0782e-03,  3.6068e-03, -2.2655e-03,\n",
      "         2.0822e-02, -1.7785e-02,  1.5181e-03, -1.2021e-02,  3.1684e-06,\n",
      "         9.7268e-03, -1.0886e-02, -2.3814e-04, -7.6382e-03,  8.8425e-03,\n",
      "         8.6900e-03,  1.8643e-02,  1.8274e-02,  1.5204e-03,  3.3754e-03,\n",
      "         2.9773e-03, -1.7899e-02, -2.1664e-02, -8.1307e-03, -1.0054e-02,\n",
      "        -1.4159e-02,  7.2826e-03,  1.0656e-02,  3.2112e-03,  3.9433e-03,\n",
      "        -4.6729e-03, -1.8797e-02,  4.5049e-03,  1.5642e-02, -2.3423e-05,\n",
      "        -1.7474e-02, -1.6963e-02, -4.7562e-03,  1.1058e-02,  1.3675e-02,\n",
      "        -1.6149e-03, -1.5522e-02, -7.2775e-03,  4.0642e-03,  9.2383e-03,\n",
      "        -1.2669e-02, -5.8230e-03, -1.7528e-02, -8.0715e-03, -1.5833e-02,\n",
      "         1.9024e-02,  1.0780e-02, -1.3458e-02,  7.0632e-03, -2.1962e-03,\n",
      "         1.8526e-02, -1.4172e-03, -5.8767e-03,  1.6943e-02,  1.2715e-02,\n",
      "        -1.4130e-02,  3.8211e-03,  1.6421e-02,  4.4202e-03,  2.1735e-03,\n",
      "         2.4870e-03, -6.2172e-03,  1.6089e-02, -1.9229e-02, -1.9674e-02,\n",
      "        -1.3162e-03,  1.6434e-02, -1.6829e-02, -1.5730e-02, -9.6131e-03,\n",
      "         2.1723e-02,  2.0242e-02,  4.8194e-05,  1.9460e-02, -1.3014e-02,\n",
      "         7.3105e-03,  4.9576e-03,  1.2506e-02,  6.5609e-03, -7.5363e-03,\n",
      "        -4.2430e-03,  3.6601e-03,  6.0890e-03,  1.6366e-03,  1.2535e-02,\n",
      "        -1.5160e-02,  9.4459e-03,  2.0325e-02, -9.0208e-03, -6.3103e-03,\n",
      "        -3.6540e-04, -1.1601e-02,  3.9739e-03,  7.8365e-03,  8.4354e-03,\n",
      "        -2.3916e-03,  4.0709e-03,  1.4271e-03, -2.1857e-02, -1.9592e-02,\n",
      "        -1.1015e-02,  4.5440e-03,  1.4974e-03,  5.1054e-03,  9.1797e-03,\n",
      "        -1.0183e-02,  5.5107e-03, -1.9107e-02,  5.3812e-03, -9.5754e-03,\n",
      "        -2.1128e-02, -1.7460e-02, -1.1436e-02,  1.5713e-02,  9.3333e-03,\n",
      "         6.8921e-03,  1.5282e-02, -1.9146e-02,  1.9688e-02,  3.9015e-03,\n",
      "         3.4652e-03,  1.0721e-03,  1.8334e-02, -1.6522e-02,  5.6916e-03,\n",
      "        -1.9111e-02, -1.0686e-02, -1.3980e-02,  3.5860e-04, -1.9987e-02,\n",
      "         1.2635e-02, -1.2009e-02,  2.1436e-02, -6.8358e-04,  6.6355e-03,\n",
      "         5.2112e-04, -9.4222e-04, -2.0977e-02, -7.7133e-03, -7.8988e-03,\n",
      "         2.1264e-03, -7.7290e-03,  3.4357e-03,  7.7788e-03,  7.4077e-03,\n",
      "         8.7287e-03, -1.3177e-02, -9.4431e-03, -7.7785e-03,  1.4564e-02,\n",
      "         1.3586e-02,  4.6605e-03,  4.6396e-03,  1.5325e-02,  1.0533e-02,\n",
      "         1.8722e-02, -9.9871e-03,  6.7390e-03,  8.0814e-03,  2.3864e-03,\n",
      "         1.4700e-03, -1.8166e-02, -9.3890e-03,  1.6501e-02, -8.9043e-03,\n",
      "        -1.9177e-02,  1.9937e-02, -7.4385e-03,  1.8165e-03,  8.3987e-03,\n",
      "         2.1165e-02,  1.2015e-02, -7.4377e-03, -2.0054e-02,  5.3991e-03,\n",
      "         1.7139e-02, -1.3952e-04,  5.1759e-05,  1.4550e-02, -6.1585e-03,\n",
      "         1.8430e-02, -1.6232e-02,  1.7143e-02,  1.4471e-02, -1.1594e-02,\n",
      "         1.8761e-02, -5.5190e-03], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-8.8813e-03,  9.6267e-03,  6.6312e-04],\n",
      "          [-3.3337e-03, -6.2105e-03, -8.7120e-03],\n",
      "          [-5.7244e-03,  8.2815e-03, -3.4482e-03]],\n",
      "\n",
      "         [[-1.3314e-03, -5.0136e-03,  4.9029e-03],\n",
      "          [ 4.5111e-03, -5.9536e-04, -1.8495e-03],\n",
      "          [-1.9171e-03, -7.3017e-03, -1.8613e-03]],\n",
      "\n",
      "         [[-9.4861e-03, -6.9411e-03, -5.8071e-03],\n",
      "          [-7.3628e-03,  2.8649e-03, -4.5560e-03],\n",
      "          [ 5.0390e-03, -5.8280e-03, -7.9828e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 7.6537e-03,  3.9939e-03,  1.7683e-03],\n",
      "          [ 7.8511e-03,  6.8137e-03, -1.0387e-02],\n",
      "          [-4.3232e-03, -6.2872e-03,  4.0777e-04]],\n",
      "\n",
      "         [[-1.1612e-03, -6.2551e-03, -9.8673e-03],\n",
      "          [-9.9507e-04,  3.6528e-03, -8.3138e-03],\n",
      "          [ 1.7112e-03,  7.4238e-03,  9.3585e-03]],\n",
      "\n",
      "         [[-8.0895e-03,  8.2476e-03, -5.1040e-03],\n",
      "          [-7.4246e-03,  1.6122e-03,  1.0148e-02],\n",
      "          [-6.2384e-03, -5.3157e-03, -9.8650e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.9984e-03,  9.7496e-03,  8.0958e-03],\n",
      "          [-1.0352e-02, -5.8017e-04, -6.3462e-03],\n",
      "          [-8.0698e-04, -8.4220e-03,  5.3220e-03]],\n",
      "\n",
      "         [[-4.6428e-03, -6.6267e-03,  6.5795e-03],\n",
      "          [ 5.4212e-03,  4.7761e-03,  7.9457e-03],\n",
      "          [ 3.8970e-03,  3.1703e-03, -5.4064e-03]],\n",
      "\n",
      "         [[-1.8292e-03, -2.7600e-03,  6.6835e-03],\n",
      "          [-3.7835e-03,  3.6653e-03,  6.2235e-03],\n",
      "          [-4.9457e-03, -1.5245e-05, -5.1694e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.4165e-03,  1.4791e-03, -6.2850e-03],\n",
      "          [ 9.0408e-03, -7.0982e-03,  7.5308e-03],\n",
      "          [-4.9611e-03,  9.6421e-03,  6.0070e-03]],\n",
      "\n",
      "         [[-7.1359e-03,  9.6366e-03,  8.4367e-03],\n",
      "          [-9.7778e-03,  1.0290e-02, -1.0534e-03],\n",
      "          [-6.3896e-03,  9.3722e-03,  9.6768e-03]],\n",
      "\n",
      "         [[-8.6272e-03, -8.7910e-03,  1.7366e-03],\n",
      "          [ 3.5387e-03, -3.4286e-03,  1.9049e-03],\n",
      "          [-8.8745e-03,  9.1779e-03, -3.4991e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.8568e-03,  2.3635e-04, -1.8950e-03],\n",
      "          [-7.8444e-03, -2.7121e-03, -3.5651e-03],\n",
      "          [-1.0029e-02,  9.4523e-03,  2.4237e-03]],\n",
      "\n",
      "         [[ 4.3121e-03, -8.9242e-03,  1.8092e-03],\n",
      "          [ 5.0184e-03, -3.1485e-03, -6.8060e-03],\n",
      "          [-5.7690e-03,  9.6010e-03, -8.6058e-03]],\n",
      "\n",
      "         [[ 5.4569e-03, -4.4377e-04,  4.5828e-04],\n",
      "          [-6.7594e-03,  7.8614e-03,  5.9613e-03],\n",
      "          [-5.3556e-03,  7.2369e-03, -1.0208e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.5946e-04,  3.4068e-03, -2.9817e-03],\n",
      "          [ 2.4646e-03, -6.2646e-03,  1.0245e-02],\n",
      "          [-4.1289e-03, -8.0759e-03, -1.9084e-03]],\n",
      "\n",
      "         [[-4.2920e-03, -1.2067e-03, -1.0074e-02],\n",
      "          [-1.2209e-03, -2.8495e-03, -4.4067e-03],\n",
      "          [-3.2764e-03,  2.5929e-03,  8.1687e-03]],\n",
      "\n",
      "         [[ 7.1927e-03, -3.8172e-03, -3.5341e-03],\n",
      "          [-1.1817e-03, -3.6669e-03, -7.2916e-03],\n",
      "          [-1.2510e-03,  5.4027e-04,  1.0617e-03]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-1.3080e-03, -7.8371e-03,  9.6960e-04],\n",
      "          [ 1.3443e-03,  5.8556e-03, -9.9882e-03],\n",
      "          [ 8.4402e-03, -1.0211e-02,  9.6577e-03]],\n",
      "\n",
      "         [[-1.0548e-03, -1.0850e-04,  8.9837e-03],\n",
      "          [-7.6564e-06,  2.8893e-03,  6.8307e-03],\n",
      "          [-6.4331e-03,  6.4644e-03, -1.0296e-02]],\n",
      "\n",
      "         [[-5.1247e-03,  2.1331e-03,  9.9036e-03],\n",
      "          [-2.7207e-03,  7.3093e-03, -1.0126e-02],\n",
      "          [-9.9459e-03, -1.9805e-03, -8.9886e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.3523e-03, -9.3592e-03, -5.9466e-03],\n",
      "          [ 8.0459e-03, -6.2509e-03, -8.2816e-03],\n",
      "          [ 6.4492e-03,  1.0401e-02,  3.6069e-03]],\n",
      "\n",
      "         [[-4.7290e-03, -5.2280e-03,  5.2324e-03],\n",
      "          [-3.1243e-03,  3.7277e-03,  4.4896e-03],\n",
      "          [ 6.9995e-03, -7.7688e-03, -9.7789e-03]],\n",
      "\n",
      "         [[-9.5860e-04,  7.0539e-03, -5.8042e-03],\n",
      "          [ 4.4752e-03, -9.6181e-03, -9.8374e-03],\n",
      "          [ 5.7690e-03,  6.3794e-03, -8.4886e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 3.6131e-03,  9.6825e-03,  8.6874e-03],\n",
      "          [ 2.7204e-04, -1.4988e-03,  5.4821e-03],\n",
      "          [-7.5293e-03,  6.5311e-03,  3.3712e-04]],\n",
      "\n",
      "         [[ 6.3959e-03,  5.9732e-03,  9.4765e-05],\n",
      "          [-2.0714e-03, -1.8413e-03, -4.7908e-03],\n",
      "          [-9.9316e-03,  9.3083e-03,  4.5100e-03]],\n",
      "\n",
      "         [[ 6.7540e-03,  1.7476e-04, -2.8264e-03],\n",
      "          [-8.8976e-03,  7.3247e-03, -1.1375e-03],\n",
      "          [-7.7335e-03, -9.2548e-03, -2.9141e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.0309e-03, -2.0962e-03, -9.9669e-03],\n",
      "          [-8.8386e-03,  1.6931e-03,  2.4938e-03],\n",
      "          [ 6.4227e-03,  2.4698e-03, -4.4242e-03]],\n",
      "\n",
      "         [[-5.3185e-04,  5.4333e-03,  7.0343e-03],\n",
      "          [-9.7523e-04, -6.6033e-03,  1.1842e-03],\n",
      "          [-3.6459e-04, -3.0637e-03,  7.1110e-03]],\n",
      "\n",
      "         [[-9.8933e-03, -9.5600e-03, -9.0070e-03],\n",
      "          [-4.8688e-03,  4.1990e-03,  2.8031e-03],\n",
      "          [ 7.4968e-03, -5.1857e-03,  3.3287e-03]]],\n",
      "\n",
      "\n",
      "        [[[-9.5591e-03,  2.8436e-03, -2.0043e-03],\n",
      "          [ 9.4574e-04,  2.0628e-03,  9.0762e-03],\n",
      "          [-7.7350e-03, -3.1738e-03,  9.6595e-03]],\n",
      "\n",
      "         [[ 9.9995e-03,  5.7982e-03, -1.7063e-03],\n",
      "          [ 8.6266e-03,  2.4478e-03,  4.1503e-03],\n",
      "          [-6.4436e-03,  9.2029e-03,  9.4229e-03]],\n",
      "\n",
      "         [[ 5.6981e-03, -1.2476e-03, -9.9811e-03],\n",
      "          [ 5.1071e-03,  9.0254e-03,  3.8259e-03],\n",
      "          [ 5.5795e-03,  2.7790e-04, -1.0009e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.9896e-03,  9.3424e-03,  4.8299e-03],\n",
      "          [-8.8279e-03, -9.0770e-03,  2.4181e-03],\n",
      "          [ 2.1186e-03,  3.0548e-03,  8.4157e-03]],\n",
      "\n",
      "         [[ 9.2632e-03,  4.3698e-03,  9.3043e-03],\n",
      "          [-1.1023e-03,  8.4674e-03, -1.7407e-03],\n",
      "          [-1.5571e-03, -7.3387e-03, -6.3987e-03]],\n",
      "\n",
      "         [[-6.3435e-03,  3.5038e-03, -7.4796e-03],\n",
      "          [ 4.2291e-03, -2.2275e-03, -6.1694e-03],\n",
      "          [ 5.6271e-04,  1.0142e-02, -1.0248e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-9.8240e-03, -6.2426e-04,  3.0396e-03, -3.1415e-03,  1.0169e-02,\n",
      "         4.2383e-03,  2.5707e-04, -3.8440e-03,  4.4121e-03, -3.6400e-03,\n",
      "         4.8094e-03, -9.5343e-03,  4.6313e-03, -7.1166e-03, -4.1881e-03,\n",
      "         8.2705e-04, -3.7543e-03,  4.6787e-03,  5.5298e-03,  2.3812e-03,\n",
      "         5.8366e-03,  6.1342e-03,  1.8153e-03,  5.9530e-03,  7.1379e-03,\n",
      "        -5.2312e-03, -6.8165e-03,  9.9457e-04,  4.7683e-03,  3.8371e-03,\n",
      "        -1.6852e-03,  1.8629e-03, -1.5242e-03, -1.0286e-02,  7.7941e-03,\n",
      "        -9.3144e-03, -2.1774e-03,  7.7279e-03, -3.6507e-03, -1.0023e-02,\n",
      "         2.5567e-03,  7.1613e-03,  9.4498e-03,  4.9392e-03,  7.5498e-03,\n",
      "         9.0475e-03,  8.1406e-03, -8.3824e-03,  9.9073e-03,  4.2961e-03,\n",
      "        -1.8890e-03, -6.7590e-04, -7.2479e-04,  8.8893e-03,  8.6498e-04,\n",
      "        -1.9151e-03, -1.9691e-03,  8.8739e-03,  1.0105e-02, -2.5569e-03,\n",
      "        -6.8820e-03, -6.2617e-03,  6.2693e-03,  7.3191e-03,  1.8095e-03,\n",
      "        -9.4813e-03, -3.8993e-03, -9.7046e-03, -6.9259e-03, -5.3525e-03,\n",
      "         4.0064e-04,  7.2272e-03,  1.4346e-03,  7.1195e-03, -4.5932e-03,\n",
      "        -5.3043e-03, -9.5302e-06,  1.0187e-02,  1.9421e-03, -1.4248e-03,\n",
      "        -9.5320e-03,  1.1524e-04, -6.1323e-03, -8.2082e-03,  6.2396e-03,\n",
      "         1.3778e-03, -1.3021e-03, -6.3022e-03,  3.8039e-03,  6.5014e-04,\n",
      "        -7.3719e-03,  9.6529e-04,  8.8813e-03, -5.4861e-04, -3.0081e-03,\n",
      "         4.0789e-03,  6.2572e-03,  9.2952e-03,  5.8188e-03, -5.0300e-03,\n",
      "        -6.0127e-03, -3.1822e-03,  6.8076e-03, -8.2294e-03,  1.3870e-03,\n",
      "         7.2869e-03,  7.3628e-04, -8.0565e-03,  9.3943e-03,  6.6140e-03,\n",
      "         5.5788e-03,  9.0180e-03,  2.2476e-03, -1.0950e-03,  4.2939e-03,\n",
      "         8.9131e-03, -9.4953e-03, -1.2762e-03,  1.9939e-03, -6.8282e-03,\n",
      "         2.9461e-03, -1.2878e-03,  3.6047e-03,  1.3727e-03,  7.6091e-03,\n",
      "         1.5638e-03,  8.2171e-03,  5.4671e-03,  4.7028e-03,  2.5177e-03,\n",
      "         3.1380e-04,  5.1905e-03,  9.0878e-05,  4.4356e-03, -2.1939e-04,\n",
      "        -3.3231e-03, -1.1561e-05, -2.7422e-03, -4.2785e-03,  3.1067e-03,\n",
      "         7.6173e-03, -2.0635e-03,  5.8299e-03,  2.2856e-03, -3.7451e-03,\n",
      "         7.1053e-03,  6.6676e-03,  8.4484e-03, -4.6779e-04, -8.9117e-03,\n",
      "        -4.4271e-03, -7.2113e-03, -9.3520e-03, -4.1679e-03, -1.7459e-03,\n",
      "         8.7431e-03, -3.9714e-03, -6.3234e-03, -4.6908e-03,  4.1481e-03,\n",
      "        -1.0162e-02,  4.5657e-03,  9.6055e-04,  7.4552e-03,  2.4870e-03,\n",
      "        -7.5787e-03, -9.9417e-03,  1.6749e-03, -1.0316e-02,  3.6539e-03,\n",
      "        -3.6160e-03, -7.5888e-03,  6.9311e-03,  5.7777e-03,  6.3312e-03,\n",
      "        -8.2543e-03,  4.1645e-03, -4.9277e-03, -9.5658e-04, -1.1226e-03,\n",
      "         1.0289e-02,  3.3625e-03,  5.7117e-03, -6.7651e-04,  3.0787e-03,\n",
      "        -7.2455e-04,  9.0459e-03, -5.5211e-03,  3.0019e-03,  6.4277e-03,\n",
      "         7.3886e-03, -7.8478e-03, -9.1003e-03, -2.0322e-03, -1.9740e-03,\n",
      "        -8.6954e-03, -4.7473e-03,  9.4808e-03, -9.6161e-03, -1.0183e-03,\n",
      "        -7.6520e-03, -9.8370e-03,  6.0677e-03,  8.3764e-03, -2.9735e-03,\n",
      "        -2.7164e-03, -7.5558e-04,  1.6865e-03, -5.3821e-03,  8.2803e-03,\n",
      "        -1.8761e-03,  8.8359e-03,  7.2540e-03,  1.1061e-03, -2.5755e-03,\n",
      "        -2.8032e-03, -4.5532e-04,  8.1624e-03,  9.6388e-03,  4.5589e-03,\n",
      "         6.2917e-03, -3.3104e-03, -5.5272e-03,  3.5952e-03,  6.4602e-03,\n",
      "        -5.6616e-03, -2.6278e-03, -2.2375e-03,  3.7311e-03, -9.9636e-03,\n",
      "        -4.4784e-04,  3.8325e-03, -6.4910e-03, -8.8236e-03,  3.0450e-03,\n",
      "        -9.1721e-03, -8.6223e-03,  1.4529e-03,  8.6710e-03,  3.6710e-03,\n",
      "        -1.0177e-02, -6.9250e-03, -6.0778e-03,  1.0203e-02,  9.0419e-03,\n",
      "        -3.7364e-03,  5.4185e-03, -7.0384e-03,  5.3258e-03,  9.8966e-04,\n",
      "        -7.8500e-03,  5.2685e-03, -7.7860e-03,  5.0706e-03, -9.6545e-04,\n",
      "        -2.0310e-03, -5.2540e-03,  5.0092e-03,  7.2046e-03,  7.0768e-03,\n",
      "         6.0118e-03,  4.4379e-03, -1.8092e-04,  9.3967e-03, -4.0579e-03,\n",
      "         9.2597e-03, -9.9966e-03, -5.3011e-03, -6.8034e-03,  1.0339e-02,\n",
      "         4.4801e-05, -8.8351e-03, -1.4471e-03,  4.5933e-03, -8.1816e-03,\n",
      "        -2.5721e-04, -7.7031e-03,  3.2223e-03, -3.9184e-03, -7.4192e-03,\n",
      "         2.6948e-03,  5.3834e-03,  1.9441e-03, -2.7653e-03,  4.2591e-03,\n",
      "         3.0992e-03, -3.1854e-03, -7.4915e-03,  7.8709e-03,  8.4256e-03,\n",
      "         7.6019e-03, -7.3892e-03, -7.2393e-03,  5.8477e-03, -2.6253e-03,\n",
      "        -8.0610e-03,  3.7638e-03,  7.3111e-04, -6.3779e-03,  8.8900e-03,\n",
      "         4.6682e-03, -8.1041e-03, -2.3259e-03, -5.3791e-03, -7.9181e-03,\n",
      "        -5.8731e-03,  5.3465e-03, -9.2778e-03,  4.5533e-04, -3.0919e-03,\n",
      "        -5.6787e-03, -1.9150e-03,  3.3786e-03, -5.7980e-03,  1.4283e-03,\n",
      "         8.0017e-03, -3.5692e-03, -6.2492e-03,  8.8936e-03, -9.7529e-03,\n",
      "        -9.9867e-03,  7.2569e-03,  5.0823e-03, -6.1701e-03,  3.3415e-03,\n",
      "         3.4416e-03,  9.4314e-03, -1.0108e-03, -5.0073e-04,  6.6942e-03,\n",
      "         6.4671e-03,  5.5152e-03,  6.4158e-03,  2.2682e-03,  1.0189e-02,\n",
      "         8.1909e-03,  1.4737e-03,  2.5727e-03,  4.7249e-03,  5.7207e-03,\n",
      "        -9.4632e-03, -5.1014e-03, -7.9604e-03, -4.0635e-03, -6.8550e-03,\n",
      "         7.7063e-03,  2.1357e-03,  3.1725e-03, -1.3980e-03, -6.0787e-03,\n",
      "         5.0775e-04, -5.5815e-03,  6.1551e-03, -7.8929e-03, -6.4740e-03,\n",
      "         4.3403e-03,  4.9884e-03,  2.5091e-03, -7.4540e-03, -2.9832e-03,\n",
      "        -1.6876e-03, -1.5442e-03, -7.3944e-03, -5.0263e-03,  2.8374e-03,\n",
      "         8.6636e-03,  8.8600e-03, -9.9620e-03, -2.7761e-03, -7.9375e-03,\n",
      "         6.3799e-03,  7.5660e-03,  2.4430e-03,  8.6061e-03,  2.2253e-03,\n",
      "        -8.0100e-03,  9.3617e-03, -3.1159e-03,  3.3101e-03,  2.8273e-03,\n",
      "        -7.2101e-03, -7.3541e-03, -7.3779e-03, -3.5380e-04, -3.0197e-03,\n",
      "        -1.2008e-03, -7.5109e-03, -6.6397e-03, -6.4551e-03,  7.5811e-03,\n",
      "        -8.0564e-03, -7.6830e-03,  7.9039e-03, -4.8149e-03,  1.2017e-03,\n",
      "         4.8279e-03,  3.4543e-03,  5.5619e-03,  7.2657e-03,  7.0963e-03,\n",
      "         1.5702e-03, -3.6064e-03, -7.6161e-03, -8.2227e-03,  3.2139e-03,\n",
      "         3.4872e-03,  6.1737e-03, -4.3564e-05,  6.6369e-03,  5.1566e-03,\n",
      "         2.7103e-03, -3.5774e-03,  3.3206e-03, -9.1123e-03, -4.4775e-03,\n",
      "        -7.7633e-03,  1.9959e-03, -3.5529e-03, -8.3226e-03, -9.5267e-03,\n",
      "         9.8816e-03,  1.6421e-04,  8.4537e-03, -9.7049e-03, -4.7729e-03,\n",
      "        -4.1194e-03,  3.2926e-03, -5.9367e-03,  3.9961e-03, -9.3932e-03,\n",
      "        -3.1870e-03, -4.6587e-03, -5.1246e-03, -3.4805e-03, -2.9673e-03,\n",
      "         1.0105e-02, -7.2749e-03, -5.2597e-03, -6.9948e-03, -3.4047e-03,\n",
      "         8.0144e-03,  5.0391e-03, -7.5535e-03,  7.1884e-03, -7.9946e-03,\n",
      "         7.6387e-03, -3.0145e-03,  4.6460e-03,  9.2350e-03, -8.0651e-03,\n",
      "        -4.5154e-03,  5.0527e-04,  5.1992e-03, -1.8737e-03,  3.8626e-03,\n",
      "        -2.6207e-03,  4.2178e-03, -1.0240e-02, -3.7053e-04, -7.7549e-03,\n",
      "         3.9140e-03,  4.3976e-03, -4.6438e-03, -2.9391e-03,  4.1102e-03,\n",
      "        -5.0331e-03,  1.8381e-03, -1.0481e-03,  7.0021e-03, -4.5191e-03,\n",
      "        -8.4527e-03,  9.6266e-03,  5.2146e-03,  5.4383e-03,  7.5586e-03,\n",
      "        -4.5897e-03,  3.7537e-03,  2.4019e-03, -1.0032e-02, -3.1544e-03,\n",
      "        -2.5597e-03,  2.1336e-03, -4.9584e-03,  1.6322e-04, -3.9527e-03,\n",
      "         3.2219e-03,  5.5526e-04, -4.8465e-04, -9.7895e-03, -9.4740e-04,\n",
      "         6.5785e-03,  9.9710e-03,  3.9416e-03,  8.0176e-03, -7.7290e-03,\n",
      "        -6.0070e-03, -4.0826e-03, -9.9104e-03,  6.7548e-03, -4.6210e-03,\n",
      "         7.4718e-03, -6.4583e-03, -9.0984e-03, -7.6595e-03,  8.6765e-03,\n",
      "         5.7261e-03, -8.7059e-03,  8.3349e-04, -9.7492e-03,  7.3283e-03,\n",
      "        -8.8419e-03,  5.9426e-03], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-3.5536e-03, -6.1402e-03, -1.0475e-02],\n",
      "          [ 1.4694e-02,  1.3536e-02, -7.7532e-03],\n",
      "          [-1.0068e-03, -5.3825e-03,  8.0901e-03]],\n",
      "\n",
      "         [[ 3.4143e-03,  8.6273e-03,  6.1346e-03],\n",
      "          [ 1.2020e-02, -1.4455e-05, -1.0250e-02],\n",
      "          [ 8.8326e-03,  8.6894e-03,  6.2316e-03]],\n",
      "\n",
      "         [[ 8.8977e-03,  6.7046e-03,  1.1730e-02],\n",
      "          [ 1.1326e-03,  7.2840e-03,  1.3495e-02],\n",
      "          [-7.7953e-03,  6.6359e-03,  1.2277e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.2673e-03, -1.3133e-02,  1.1638e-02],\n",
      "          [ 8.5222e-03,  6.2010e-04,  3.3084e-03],\n",
      "          [ 8.9434e-03,  1.4469e-02,  6.3429e-03]],\n",
      "\n",
      "         [[ 3.4576e-03, -7.7352e-03, -1.3947e-02],\n",
      "          [-7.9602e-03, -1.1399e-02,  1.0164e-02],\n",
      "          [ 7.6475e-04, -7.7358e-03, -1.5251e-03]],\n",
      "\n",
      "         [[-1.0222e-02, -6.6411e-03, -4.5950e-03],\n",
      "          [-1.3888e-02,  6.6115e-03, -6.5989e-03],\n",
      "          [-4.4312e-03, -7.4174e-03,  1.6512e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 7.4160e-03, -1.2676e-02, -1.0556e-02],\n",
      "          [ 4.5046e-03,  4.4900e-03,  4.4072e-03],\n",
      "          [-1.1921e-02,  5.3510e-03, -7.5387e-03]],\n",
      "\n",
      "         [[ 4.5521e-03,  2.3916e-03,  1.4612e-02],\n",
      "          [ 1.0847e-02,  1.2168e-02,  1.3061e-02],\n",
      "          [-5.1531e-03, -1.1056e-02, -1.3269e-02]],\n",
      "\n",
      "         [[-5.7368e-03, -1.3704e-02,  1.3041e-02],\n",
      "          [-1.8465e-03,  2.0123e-03, -5.9918e-03],\n",
      "          [ 1.2310e-02, -8.8822e-03, -5.7615e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 6.1642e-03,  1.2615e-02,  7.9318e-03],\n",
      "          [ 7.0733e-03,  1.0816e-02, -5.6002e-03],\n",
      "          [-9.9506e-03, -7.1013e-03,  5.2238e-04]],\n",
      "\n",
      "         [[ 6.5785e-03,  8.8084e-03,  1.2381e-03],\n",
      "          [ 3.2185e-03, -1.3756e-02, -4.9890e-03],\n",
      "          [ 1.4413e-02,  6.5828e-03,  3.3727e-03]],\n",
      "\n",
      "         [[ 3.0388e-03,  1.4346e-02,  1.0458e-02],\n",
      "          [ 1.4156e-02,  7.1794e-03, -1.1661e-02],\n",
      "          [ 9.3023e-03,  8.9891e-03,  8.1514e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.2749e-03,  1.0735e-02,  5.9980e-03],\n",
      "          [-7.8414e-03,  8.2256e-03, -7.3748e-03],\n",
      "          [ 3.1190e-04, -1.0585e-03, -4.9844e-03]],\n",
      "\n",
      "         [[-9.8294e-03, -8.0628e-03, -2.8676e-03],\n",
      "          [ 2.4941e-03, -1.0428e-02,  1.3807e-02],\n",
      "          [-2.3282e-03, -4.8478e-03, -2.7204e-03]],\n",
      "\n",
      "         [[-1.3391e-02,  6.4067e-03,  6.2341e-03],\n",
      "          [ 1.0788e-02,  8.0614e-03,  4.9576e-03],\n",
      "          [ 1.3091e-02, -1.3870e-02,  1.0079e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.5747e-03,  1.1244e-03, -1.1155e-02],\n",
      "          [-7.0854e-03, -1.1609e-02, -3.8758e-03],\n",
      "          [ 1.4315e-02,  5.9962e-04,  8.0411e-03]],\n",
      "\n",
      "         [[-9.2644e-03,  2.6297e-03,  4.9621e-03],\n",
      "          [-3.7985e-03,  5.0967e-03, -4.8509e-03],\n",
      "          [ 6.3509e-03, -8.2113e-03,  8.6313e-03]],\n",
      "\n",
      "         [[-4.0783e-03,  6.9823e-03,  1.4689e-02],\n",
      "          [ 8.9465e-03,  1.2289e-02,  2.1638e-03],\n",
      "          [ 3.6536e-03,  6.5064e-03,  5.3121e-03]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-2.3212e-03,  3.0771e-03, -2.1532e-03],\n",
      "          [-1.2518e-04,  9.8510e-03, -1.2008e-02],\n",
      "          [-1.5197e-04,  6.5503e-03,  5.9459e-03]],\n",
      "\n",
      "         [[ 8.9491e-03,  5.8246e-03, -1.0987e-02],\n",
      "          [-7.3450e-03, -9.4877e-03,  1.4716e-02],\n",
      "          [ 6.7136e-03,  4.6574e-03,  1.1663e-02]],\n",
      "\n",
      "         [[ 7.8162e-03, -2.6940e-03,  5.6128e-03],\n",
      "          [ 9.7767e-03,  5.2509e-04,  1.1741e-02],\n",
      "          [-1.3954e-02,  8.4645e-04,  1.1573e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.6908e-03, -5.8608e-03,  1.5807e-03],\n",
      "          [-6.3090e-03,  8.7711e-03,  1.3826e-02],\n",
      "          [ 8.3998e-04, -2.2057e-03, -1.1038e-02]],\n",
      "\n",
      "         [[-1.3530e-02,  1.0782e-02, -6.2044e-03],\n",
      "          [-8.9953e-03,  8.0642e-03,  1.1324e-02],\n",
      "          [ 1.3354e-02,  1.1346e-02, -9.4065e-03]],\n",
      "\n",
      "         [[ 9.4837e-03,  9.5093e-03,  1.0771e-02],\n",
      "          [-5.1893e-03, -1.4140e-02, -8.5877e-03],\n",
      "          [ 5.5233e-03,  8.2591e-03, -1.0262e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.0003e-02, -4.1468e-03, -8.6091e-03],\n",
      "          [-9.8088e-03,  6.3738e-03,  4.2405e-03],\n",
      "          [-1.2338e-02,  1.1191e-02, -9.8197e-03]],\n",
      "\n",
      "         [[-9.1043e-03,  9.1346e-03, -1.2893e-02],\n",
      "          [-3.7498e-04, -4.7201e-03, -7.0984e-03],\n",
      "          [-5.7570e-03,  4.8014e-04,  1.9592e-03]],\n",
      "\n",
      "         [[-8.7996e-03, -9.8603e-03,  1.3883e-02],\n",
      "          [-1.0381e-02, -8.8528e-03, -4.3716e-03],\n",
      "          [-4.4402e-04,  7.7251e-03,  1.1144e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 9.7518e-03, -1.0119e-02, -7.5180e-03],\n",
      "          [ 1.1107e-02,  1.4660e-02,  4.1835e-03],\n",
      "          [-1.3743e-02,  1.1713e-02, -8.1876e-04]],\n",
      "\n",
      "         [[-1.0605e-02, -1.2627e-02,  1.4240e-02],\n",
      "          [ 1.1830e-02, -1.0658e-03, -4.1448e-03],\n",
      "          [-4.6501e-03,  1.1697e-02, -1.3567e-02]],\n",
      "\n",
      "         [[ 1.8224e-03, -8.7106e-04, -2.4190e-03],\n",
      "          [ 7.5917e-03, -1.2118e-02,  7.7833e-03],\n",
      "          [-2.3610e-03,  5.1927e-03, -8.9229e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.0734e-02,  8.7180e-03,  1.4435e-02],\n",
      "          [ 6.5552e-03,  8.4582e-03, -4.1491e-03],\n",
      "          [-1.4608e-02,  3.7272e-03,  9.6502e-03]],\n",
      "\n",
      "         [[ 9.6312e-03,  8.2335e-03,  1.1664e-02],\n",
      "          [ 1.1746e-04, -1.2524e-03, -8.3922e-03],\n",
      "          [ 2.2262e-03, -9.4526e-03,  7.0980e-03]],\n",
      "\n",
      "         [[-1.3847e-02,  3.3647e-03,  1.0603e-02],\n",
      "          [-4.5667e-03, -6.5186e-03, -2.2419e-03],\n",
      "          [ 4.2827e-04, -6.7325e-03, -8.4222e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3682e-02,  1.4066e-02, -3.6613e-03],\n",
      "          [ 4.4689e-03,  1.2814e-02, -8.6875e-03],\n",
      "          [-2.8418e-03, -1.1872e-02, -1.5337e-03]],\n",
      "\n",
      "         [[ 9.0939e-03, -1.0824e-02, -2.9658e-03],\n",
      "          [-2.4687e-05, -1.4663e-02, -1.1563e-02],\n",
      "          [-6.4999e-03,  8.7872e-03, -1.2289e-02]],\n",
      "\n",
      "         [[-1.4598e-02, -9.3641e-03,  1.1571e-02],\n",
      "          [ 9.6212e-03, -1.9132e-03,  1.5908e-03],\n",
      "          [ 1.3542e-03, -4.4011e-03, -1.2925e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-3.0001e-03, -6.7141e-03, -1.1027e-03, -1.2693e-03, -3.1782e-03,\n",
      "         6.4419e-03,  8.7288e-03,  4.2503e-03, -5.2581e-04, -1.2359e-03,\n",
      "        -8.2208e-04,  1.3594e-02,  1.0478e-02, -3.9299e-03,  3.3967e-03,\n",
      "         7.4398e-03, -2.7552e-03, -9.2886e-03,  7.3557e-03, -7.2550e-03,\n",
      "         8.4120e-03, -1.4119e-02,  1.3345e-02,  1.0486e-02, -1.4730e-02,\n",
      "         3.4124e-03,  1.3060e-02,  6.8989e-03, -1.1079e-03,  3.9590e-03,\n",
      "        -2.5111e-03, -9.3010e-03, -8.0784e-03,  1.0751e-03, -3.0824e-03,\n",
      "        -1.3122e-02,  1.2458e-02,  7.5946e-03,  3.6776e-03,  9.3469e-03,\n",
      "         4.6315e-03,  2.3219e-03,  9.6181e-03,  1.1050e-02,  8.6430e-03,\n",
      "        -6.4428e-03,  9.3853e-03, -1.2804e-02,  1.4227e-02,  7.6137e-03,\n",
      "        -1.2085e-02, -1.2837e-03,  1.4467e-02, -9.5177e-03,  6.8721e-03,\n",
      "         1.1097e-03, -1.2248e-03, -6.4672e-03, -1.2040e-02, -7.7634e-04,\n",
      "        -1.0868e-02,  1.3467e-02, -1.2330e-02,  8.7816e-03, -3.1190e-03,\n",
      "         7.5446e-03, -1.3236e-02, -1.8413e-03,  2.7362e-03,  4.9872e-03,\n",
      "         8.6590e-04,  1.2645e-02,  1.3159e-02,  2.8447e-03, -3.6069e-03,\n",
      "        -7.5789e-03,  8.6027e-03, -6.9191e-03,  8.7157e-03,  8.1761e-03,\n",
      "         1.3596e-02,  1.3238e-02, -1.0744e-02, -1.3472e-02, -8.0892e-03,\n",
      "        -1.1947e-02,  9.2127e-03, -8.3631e-03,  5.0510e-03, -7.8467e-03,\n",
      "         3.9123e-03, -1.4615e-02, -1.0433e-02, -1.0350e-03,  7.1322e-03,\n",
      "         1.4351e-02,  1.1413e-02, -1.1239e-02, -7.3648e-03, -1.0920e-02,\n",
      "         1.0422e-02,  1.2577e-02, -1.3890e-02,  4.6097e-03, -2.5996e-03,\n",
      "         3.7594e-03,  1.8499e-04,  3.0688e-03,  3.9391e-03, -9.7923e-03,\n",
      "        -7.3569e-03,  5.7754e-03,  9.4923e-03,  9.5082e-04,  2.1293e-04,\n",
      "        -1.3896e-02,  2.5820e-03,  8.4097e-03,  7.7858e-03,  1.3720e-02,\n",
      "        -2.1012e-03, -3.1266e-03,  8.5673e-03, -1.4356e-02,  3.4839e-03,\n",
      "        -1.8630e-03, -9.1545e-03,  1.1328e-02, -7.7562e-03,  1.2666e-02,\n",
      "        -7.2279e-03,  1.2731e-02, -6.0546e-03, -2.8810e-03, -1.4457e-02,\n",
      "        -9.1341e-03,  1.0348e-02, -4.0786e-04, -1.0571e-02, -2.9592e-03,\n",
      "         1.0840e-02,  8.2936e-03, -6.9124e-03, -2.5792e-03, -2.2189e-03,\n",
      "        -4.8820e-03,  2.4891e-03, -2.9223e-03, -3.2403e-03,  3.5497e-03,\n",
      "         5.8271e-03, -1.1370e-02, -1.4385e-02,  4.0460e-03, -3.0108e-03,\n",
      "        -2.5546e-03,  5.5044e-03,  9.9175e-03,  1.0256e-02, -1.1783e-02,\n",
      "         3.5000e-03, -1.2905e-02,  5.6827e-03,  4.8772e-03,  1.2358e-02,\n",
      "         1.1187e-02, -7.1786e-03, -8.1164e-03,  8.2568e-03,  3.4514e-03,\n",
      "         1.3771e-04,  1.2927e-02, -7.4720e-03,  1.3659e-02,  5.2944e-05,\n",
      "        -1.1459e-03,  1.8782e-03, -1.1554e-02,  5.7253e-03, -9.7456e-03,\n",
      "        -5.3054e-03,  2.4443e-03,  7.7055e-03,  6.5078e-03,  5.8343e-03,\n",
      "        -1.0500e-02,  6.5662e-03, -5.1843e-03, -1.0751e-02,  7.3587e-03,\n",
      "        -1.3104e-02,  7.1675e-03, -1.3093e-02, -6.6010e-03, -3.5795e-03,\n",
      "         3.0836e-03,  5.0696e-03, -1.4098e-02, -4.3769e-03, -1.1120e-02,\n",
      "         4.4224e-03, -5.9148e-03,  1.0139e-02,  4.9141e-03,  1.2977e-02,\n",
      "         1.4678e-02,  1.9413e-03,  1.0983e-02, -3.8775e-03, -1.0297e-02,\n",
      "         7.1089e-03,  1.3969e-02, -1.0564e-02,  7.0807e-03,  2.2536e-03,\n",
      "         1.3618e-03, -7.2041e-03, -1.7128e-03, -8.3496e-03,  8.0498e-03,\n",
      "        -9.7964e-03,  4.5464e-03, -8.7470e-03, -9.5499e-03, -8.0089e-03,\n",
      "         1.8260e-03, -1.1445e-02, -2.0788e-03,  6.8127e-03, -7.1123e-03,\n",
      "         1.3833e-03,  4.2490e-03,  9.5710e-03, -9.2446e-03,  1.5893e-03,\n",
      "        -1.4544e-02, -3.9307e-03,  3.2118e-03, -9.7183e-03,  1.7459e-03,\n",
      "         8.2861e-04,  9.4447e-03, -1.3785e-02, -6.7974e-03,  2.1769e-03,\n",
      "         1.2714e-02,  5.0581e-03, -1.1616e-03, -5.9387e-03,  1.3260e-02,\n",
      "        -4.0934e-03,  8.1263e-03,  1.2968e-02, -1.4287e-02, -1.0454e-02,\n",
      "        -1.3890e-02,  1.0341e-02,  1.5346e-03,  2.0065e-04, -9.0569e-03,\n",
      "         7.5158e-04, -4.0495e-03,  1.1359e-02, -5.9186e-03,  1.4083e-02,\n",
      "        -8.0944e-03,  8.0791e-03, -1.4112e-02, -1.0326e-02,  1.2877e-02,\n",
      "         5.5491e-03, -8.4193e-03, -1.3065e-02,  3.0069e-03, -1.1002e-04,\n",
      "        -1.4268e-02, -5.4074e-03,  6.1676e-03,  1.8407e-03, -9.5600e-03,\n",
      "        -7.2398e-03,  3.8303e-03,  6.1338e-03,  1.0718e-02, -3.4641e-03,\n",
      "         1.2811e-02, -1.0723e-02,  2.5744e-03,  1.0930e-02, -8.9974e-03,\n",
      "        -1.1560e-02, -1.2448e-02,  1.4526e-02,  3.6089e-03,  2.4481e-03,\n",
      "        -3.1972e-03,  6.9820e-03, -1.3545e-02,  5.7967e-03,  8.4319e-03,\n",
      "        -1.5575e-03, -8.8094e-03, -7.6737e-04, -1.1360e-02,  7.4093e-03,\n",
      "         2.6768e-03, -3.0840e-03, -7.2377e-03,  4.2618e-03,  2.8673e-03,\n",
      "         8.8798e-03, -3.4853e-03,  6.6207e-03, -3.6243e-03,  8.3884e-03,\n",
      "         1.0515e-02, -8.4915e-03,  7.3213e-03, -1.3644e-02, -1.0478e-02,\n",
      "         5.8491e-03,  2.7662e-04, -1.8017e-03, -1.3465e-02,  1.4264e-02,\n",
      "         2.9632e-03,  1.0436e-02, -1.3341e-03, -8.3182e-03, -1.7574e-03,\n",
      "        -9.7950e-03, -7.5327e-03,  1.4352e-02, -2.6886e-03, -3.6729e-03,\n",
      "         9.9389e-03, -3.1697e-03,  1.3465e-02, -7.6643e-04,  3.4197e-03,\n",
      "        -7.2130e-03, -1.1857e-02,  2.4764e-03, -6.7587e-03,  2.7494e-03,\n",
      "         3.9019e-03,  9.1340e-03, -9.9885e-03, -1.2265e-02,  2.9268e-03,\n",
      "         6.2920e-03,  7.5653e-03, -2.6390e-03,  9.4538e-03, -8.0897e-03,\n",
      "         3.0352e-03,  1.4241e-02,  1.3003e-02,  5.7995e-03, -1.3727e-02,\n",
      "         1.0634e-02,  4.9600e-03,  6.5238e-03,  1.4323e-02,  4.2923e-03,\n",
      "        -7.8965e-03,  5.5250e-03, -1.4713e-02, -3.5141e-03,  1.2404e-02,\n",
      "        -9.7888e-03,  1.0517e-03, -2.3601e-03, -3.7627e-03, -4.4406e-03,\n",
      "        -2.3547e-04,  6.0242e-03, -9.1170e-03,  3.5628e-03, -2.9020e-03,\n",
      "         3.0278e-03, -8.2874e-03,  3.9356e-03,  1.2963e-02,  1.1263e-02,\n",
      "         4.2637e-03, -8.0871e-03, -9.9744e-04,  1.0386e-02, -1.1519e-02,\n",
      "         1.5630e-03,  2.6378e-04, -5.6047e-03,  1.4202e-02,  1.1683e-02,\n",
      "        -1.0212e-02, -1.4426e-02,  1.6954e-03, -8.5947e-03, -1.2759e-02,\n",
      "         5.5618e-03, -1.4479e-02,  5.5961e-03,  1.0131e-02,  2.3534e-03,\n",
      "        -7.3260e-03,  7.5540e-04,  4.0304e-03,  3.8193e-03,  9.5771e-03,\n",
      "        -7.8804e-03, -3.7738e-03, -7.6994e-03, -1.2845e-02,  1.1428e-03,\n",
      "         1.2563e-02, -1.3883e-02,  5.2824e-03, -6.7700e-03, -3.1338e-03,\n",
      "        -8.0584e-03,  4.8450e-03, -9.1920e-03, -5.7191e-03,  1.3715e-02,\n",
      "         2.0827e-03,  8.3430e-03,  1.2116e-02,  1.1338e-02,  5.1422e-03,\n",
      "         5.9191e-03, -1.3912e-02, -9.1663e-03,  2.4027e-03,  9.5404e-03,\n",
      "        -1.3388e-02, -1.1078e-02,  1.4003e-02,  7.7484e-03,  4.0859e-03,\n",
      "         9.7357e-03, -8.0923e-03, -6.3828e-03, -1.5861e-03, -9.9738e-03,\n",
      "        -9.5737e-03,  1.1949e-03, -2.0348e-03, -8.9602e-03,  7.3427e-03,\n",
      "        -8.4526e-03,  1.2267e-02, -1.7981e-03, -1.4459e-02,  1.3120e-02,\n",
      "        -1.0005e-02, -4.5530e-03, -6.3183e-03, -9.6838e-04,  4.9708e-03,\n",
      "         6.0931e-03,  9.6121e-03,  1.6200e-03,  7.2501e-03, -1.3953e-02,\n",
      "        -5.6080e-03, -2.9055e-03,  7.9781e-03, -7.9854e-03,  2.2752e-03,\n",
      "        -1.9318e-03,  5.0510e-03, -4.8300e-03,  1.2793e-02, -1.4519e-02,\n",
      "        -9.0944e-03,  1.7239e-03,  4.0048e-03,  9.4081e-04, -3.7573e-03,\n",
      "         3.5308e-03,  3.4555e-03,  2.3585e-03, -7.2373e-03,  5.1152e-03,\n",
      "        -4.5325e-03, -9.7721e-03,  4.5260e-03, -1.1017e-03, -9.0480e-03,\n",
      "        -5.5280e-03, -1.1348e-02,  6.0466e-03, -8.7474e-03, -5.6022e-03,\n",
      "        -4.3563e-03,  1.0862e-02, -1.3925e-02, -4.2213e-03,  4.8641e-03,\n",
      "         1.3144e-02,  9.6437e-03, -6.4877e-03,  9.1987e-03,  1.2588e-02,\n",
      "         1.3564e-02,  6.4059e-03, -7.5098e-03,  8.7376e-04, -1.4120e-02,\n",
      "         4.6872e-03, -1.2019e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter containing:\n",
      "tensor([[[[ 4.3433e-03, -1.0548e-02, -9.0068e-03],\n",
      "          [-2.5686e-03,  7.4191e-03, -8.5415e-03],\n",
      "          [-4.2431e-03,  1.2183e-03, -1.3026e-02]],\n",
      "\n",
      "         [[-7.5953e-03, -1.1352e-02,  2.3922e-03],\n",
      "          [-3.2942e-03,  5.1987e-03, -4.9560e-03],\n",
      "          [-6.7479e-03, -1.4641e-03, -1.3607e-02]],\n",
      "\n",
      "         [[ 1.4303e-02,  3.4064e-03, -7.1797e-03],\n",
      "          [-9.6527e-03,  1.3844e-02, -3.0069e-03],\n",
      "          [ 1.4544e-02, -1.3980e-02, -4.1918e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.6439e-03,  1.4350e-02,  1.6900e-03],\n",
      "          [ 1.4008e-02,  4.2672e-03, -1.4578e-02],\n",
      "          [ 1.2852e-02, -1.3251e-02,  9.5766e-03]],\n",
      "\n",
      "         [[ 2.8612e-03, -5.3665e-03, -7.3327e-03],\n",
      "          [ 9.7143e-03,  6.5387e-03,  5.4220e-03],\n",
      "          [-1.4526e-02,  1.9989e-04, -3.4815e-03]],\n",
      "\n",
      "         [[-5.2245e-03,  2.8915e-03, -1.4489e-02],\n",
      "          [-1.3849e-02,  1.1059e-02, -1.3538e-02],\n",
      "          [-4.6011e-03, -8.9493e-03, -9.4185e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.1316e-02,  9.3157e-03,  6.1015e-03],\n",
      "          [ 2.8181e-03,  1.2311e-02, -1.3749e-02],\n",
      "          [-1.4666e-02, -5.9151e-03, -9.7652e-03]],\n",
      "\n",
      "         [[-1.3960e-02,  7.1203e-03, -6.0032e-03],\n",
      "          [ 1.4431e-02,  7.0443e-03,  4.6651e-03],\n",
      "          [-4.8241e-03,  9.2308e-03, -1.2067e-02]],\n",
      "\n",
      "         [[-8.4534e-03, -4.9949e-03,  4.3426e-03],\n",
      "          [-5.0050e-03, -1.2302e-03,  5.6246e-03],\n",
      "          [ 8.9105e-04, -1.8328e-03,  4.3289e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3006e-02,  8.9161e-03, -4.8573e-03],\n",
      "          [ 4.1672e-03, -8.1193e-03,  2.4613e-04],\n",
      "          [ 2.7801e-03,  8.7839e-03, -4.9181e-03]],\n",
      "\n",
      "         [[ 8.1653e-03,  1.1528e-02,  8.7888e-03],\n",
      "          [ 6.8595e-03, -1.0641e-02, -9.1303e-03],\n",
      "          [-1.2549e-02,  1.3448e-02,  6.0379e-03]],\n",
      "\n",
      "         [[-1.0518e-02,  7.7830e-03, -1.1090e-02],\n",
      "          [-1.1088e-02, -1.1680e-02,  6.0949e-03],\n",
      "          [ 9.9727e-03,  7.3499e-03,  6.1437e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.3250e-02, -5.8154e-03, -1.2431e-03],\n",
      "          [ 1.2494e-02,  6.8772e-03,  4.6370e-03],\n",
      "          [-1.4047e-02, -8.1998e-04,  6.6998e-03]],\n",
      "\n",
      "         [[ 2.7931e-03, -1.3392e-02, -9.8992e-03],\n",
      "          [ 1.4513e-02, -5.2368e-04,  7.5483e-03],\n",
      "          [-1.1062e-02,  9.2446e-03, -2.1417e-03]],\n",
      "\n",
      "         [[ 3.0274e-03, -5.3894e-03, -9.2072e-03],\n",
      "          [ 8.4992e-03,  8.3522e-03, -7.2984e-03],\n",
      "          [ 8.4367e-03, -1.0482e-02, -1.3604e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 9.0138e-03, -6.5965e-04,  4.9979e-03],\n",
      "          [-6.5588e-03,  9.3137e-03,  3.9849e-03],\n",
      "          [ 7.2321e-03,  1.2163e-02,  5.5347e-03]],\n",
      "\n",
      "         [[ 6.4240e-03, -5.4204e-03,  4.7216e-03],\n",
      "          [-5.1056e-03, -9.7650e-03, -1.1858e-02],\n",
      "          [-1.1371e-02, -1.2776e-02, -5.5451e-03]],\n",
      "\n",
      "         [[-8.4875e-04,  9.2060e-03,  1.3040e-02],\n",
      "          [ 2.3662e-03,  1.3591e-02, -9.3011e-04],\n",
      "          [-5.1476e-04,  3.7886e-03,  1.2866e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-8.4426e-03,  8.5921e-03,  9.9273e-03],\n",
      "          [-1.0174e-02, -2.8332e-03,  2.3303e-04],\n",
      "          [-4.9074e-03, -1.1233e-02, -1.2652e-02]],\n",
      "\n",
      "         [[-1.1263e-02, -1.1824e-02, -1.0619e-02],\n",
      "          [-5.6028e-03, -5.9056e-03, -1.3794e-02],\n",
      "          [ 8.0355e-03,  7.6590e-03, -9.1628e-03]],\n",
      "\n",
      "         [[-9.3736e-03,  1.1121e-02,  1.0321e-02],\n",
      "          [ 1.3811e-03, -1.3269e-02, -2.9410e-03],\n",
      "          [-5.4810e-03, -9.8370e-03,  7.1920e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.2029e-03, -1.2854e-02,  4.6476e-03],\n",
      "          [ 1.4060e-02,  1.4473e-02, -8.4196e-03],\n",
      "          [ 8.7036e-03, -6.6053e-03,  5.5333e-03]],\n",
      "\n",
      "         [[-4.2812e-03, -2.3579e-03,  1.2967e-02],\n",
      "          [ 1.0011e-02, -4.0537e-03, -1.1110e-02],\n",
      "          [ 1.7052e-03, -4.7728e-03, -5.7978e-03]],\n",
      "\n",
      "         [[-5.1941e-03,  1.0806e-02, -1.2004e-02],\n",
      "          [ 4.4923e-03, -3.6188e-03,  9.2457e-03],\n",
      "          [ 9.2522e-03,  5.6532e-03,  8.7513e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.4173e-02, -1.1449e-02, -1.6833e-03],\n",
      "          [-5.2764e-03,  1.0191e-02,  8.7609e-03],\n",
      "          [-1.2282e-02,  1.4292e-03, -5.5999e-03]],\n",
      "\n",
      "         [[-1.4906e-03,  6.8965e-03, -3.6029e-03],\n",
      "          [-6.7855e-03, -1.4381e-03,  3.7608e-03],\n",
      "          [ 1.1848e-02, -1.1342e-02, -1.3819e-02]],\n",
      "\n",
      "         [[-1.1857e-02, -1.2043e-02,  7.2126e-04],\n",
      "          [-2.4558e-03, -4.6002e-03, -1.6558e-03],\n",
      "          [ 9.8052e-03, -9.1633e-03, -1.6255e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-8.4140e-03,  1.1446e-02,  2.4085e-04],\n",
      "          [-3.9963e-03, -6.2721e-03, -1.6779e-03],\n",
      "          [ 1.2794e-02, -7.9487e-04, -1.1398e-02]],\n",
      "\n",
      "         [[ 5.3932e-03,  9.3622e-03,  3.5424e-03],\n",
      "          [ 8.9258e-03,  1.2114e-03, -3.0203e-03],\n",
      "          [-3.5636e-03, -2.4459e-03, -9.6572e-03]],\n",
      "\n",
      "         [[ 9.8857e-03, -1.3675e-03, -7.0914e-03],\n",
      "          [ 3.7800e-03,  1.0967e-02, -6.4405e-03],\n",
      "          [-7.5787e-03,  7.3602e-03,  4.0952e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 7.7385e-03, -8.2803e-03,  7.6672e-03],\n",
      "          [ 1.2718e-02,  1.1814e-02,  1.1828e-02],\n",
      "          [ 1.3255e-02, -1.0977e-02,  5.8777e-03]],\n",
      "\n",
      "         [[-1.4490e-02, -1.2007e-02,  1.5870e-03],\n",
      "          [ 1.2184e-02, -8.0066e-03, -1.4993e-03],\n",
      "          [-1.4566e-02, -5.4797e-03,  6.8882e-03]],\n",
      "\n",
      "         [[ 1.1162e-02, -1.0267e-02,  3.3526e-04],\n",
      "          [-1.3634e-02, -4.5333e-03,  1.9270e-03],\n",
      "          [ 5.5740e-04,  1.0768e-02,  2.9203e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.9359e-03, -1.1481e-02,  4.3100e-03],\n",
      "          [ 4.0335e-03,  2.0474e-03,  7.5077e-03],\n",
      "          [-1.3265e-02, -8.7528e-03,  1.3480e-02]],\n",
      "\n",
      "         [[ 6.6027e-03, -4.1414e-03, -6.1511e-03],\n",
      "          [ 8.0094e-03,  8.1919e-05, -6.6196e-03],\n",
      "          [-1.8158e-03,  1.0552e-02, -7.2528e-03]],\n",
      "\n",
      "         [[-1.6965e-03, -4.2345e-03,  5.1886e-03],\n",
      "          [ 6.5120e-04,  3.5337e-03,  1.1595e-02],\n",
      "          [ 1.2114e-03, -9.1323e-03, -1.0759e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-1.3401e-02,  1.4694e-02, -7.8552e-03, -1.3601e-02, -1.1474e-02,\n",
      "         1.2251e-02,  1.1938e-02, -2.9646e-03,  8.1775e-03, -7.3402e-03,\n",
      "        -1.4186e-03, -2.4361e-03,  1.0199e-02,  7.9075e-03,  4.8023e-03,\n",
      "         1.4555e-02,  4.7506e-03, -9.8605e-03, -7.7802e-03, -4.0661e-03,\n",
      "         1.2002e-02,  8.9317e-03, -5.2902e-03, -6.0215e-03,  7.1043e-03,\n",
      "         3.2672e-04,  5.5421e-04, -9.3596e-03, -1.4667e-02,  1.3843e-02,\n",
      "        -1.9746e-03,  7.9960e-03,  5.2825e-03, -1.0112e-02,  2.0060e-03,\n",
      "        -4.1852e-03, -3.6135e-03, -4.9944e-03,  9.1168e-03,  7.6163e-04,\n",
      "         8.3743e-03,  7.2178e-03, -1.1078e-02,  1.2634e-02,  1.4337e-02,\n",
      "        -1.9440e-03,  3.4520e-03, -9.2882e-04, -9.9250e-03, -2.0597e-03,\n",
      "         5.3567e-03, -1.1960e-02,  8.4864e-03, -6.8102e-03,  1.3334e-02,\n",
      "         1.1203e-02,  8.1990e-03,  2.0470e-03, -3.9714e-03,  7.2955e-03,\n",
      "        -3.4497e-03,  1.2292e-02, -1.4149e-02, -3.1481e-03, -1.0682e-03,\n",
      "        -1.1733e-02, -9.3809e-03, -6.3568e-03,  2.6642e-03,  1.3461e-02,\n",
      "         4.1091e-03,  4.1491e-04,  9.3129e-03,  3.8717e-03, -4.8260e-03,\n",
      "         7.5877e-04, -1.2631e-02, -3.7409e-03, -6.0749e-04, -1.3361e-02,\n",
      "        -8.4119e-03,  1.0835e-02,  6.4778e-04, -8.3749e-03, -3.2560e-03,\n",
      "        -5.9183e-03, -8.1377e-04,  4.5294e-03,  8.3308e-03,  7.9138e-03,\n",
      "         1.4185e-02, -4.3650e-03, -3.9320e-03, -8.0655e-03, -1.2196e-02,\n",
      "         1.3116e-02,  1.1569e-02, -9.2904e-03,  9.8668e-03,  1.0650e-02,\n",
      "        -9.3378e-03, -1.1611e-02,  2.1751e-03,  8.6159e-03, -7.5804e-03,\n",
      "         2.3710e-03,  5.7115e-03, -1.0887e-02, -6.8928e-03, -1.5838e-04,\n",
      "         7.3918e-03, -8.8607e-03,  1.4465e-02, -4.1380e-03,  3.6284e-03,\n",
      "        -9.1933e-03, -1.0139e-02,  9.7906e-04,  2.3681e-03,  6.3874e-03,\n",
      "         6.2010e-03,  8.4680e-03,  1.1892e-02, -3.0004e-03, -8.6827e-03,\n",
      "        -6.1540e-03,  7.8302e-03, -6.7463e-03,  1.3509e-02,  1.8835e-03,\n",
      "         4.9595e-03,  1.1569e-02,  2.6630e-03, -2.2181e-03,  2.9108e-03,\n",
      "        -9.8318e-04, -1.4618e-02,  5.7727e-03,  1.2222e-03,  1.2586e-03,\n",
      "         2.0060e-03, -1.6278e-03, -1.0635e-02,  8.5237e-03,  1.3839e-02,\n",
      "        -1.1091e-02,  1.0748e-02,  2.4859e-03, -7.4667e-03,  1.0290e-02,\n",
      "         1.5922e-03,  6.2129e-03, -5.2210e-03,  7.4634e-03,  3.1720e-03,\n",
      "         5.4843e-03, -6.8845e-03,  1.9229e-03, -1.3846e-02,  1.2766e-02,\n",
      "        -1.3439e-02,  8.1349e-03,  1.2607e-02, -3.8652e-03,  3.1137e-03,\n",
      "        -1.2001e-02, -1.9933e-03,  1.0235e-02,  9.1737e-04, -1.4116e-02,\n",
      "        -8.2591e-03,  1.2834e-02,  8.4714e-03,  1.1604e-02, -9.0349e-03,\n",
      "         1.3921e-02, -7.1323e-03,  1.2465e-02, -2.5240e-03,  7.9154e-03,\n",
      "         9.3498e-03,  7.4539e-03, -3.3204e-03,  1.7396e-03, -7.2756e-03,\n",
      "        -1.2212e-02,  1.2919e-02, -7.1874e-03, -4.7766e-04,  7.9713e-03,\n",
      "         1.0807e-02, -2.0022e-03, -2.4083e-03, -8.5333e-04, -6.4932e-03,\n",
      "        -8.8249e-03,  8.6824e-03,  1.3499e-02, -1.2472e-02,  6.2486e-03,\n",
      "         7.8290e-03, -3.4962e-03,  9.5919e-03, -9.8229e-03,  1.1457e-03,\n",
      "         1.4098e-02,  1.2301e-02,  7.0991e-03,  5.6765e-03,  6.0813e-03,\n",
      "         5.9844e-03, -5.6219e-03, -1.2289e-02, -9.0583e-03, -1.4232e-02,\n",
      "         6.3626e-03, -1.2485e-03,  2.1873e-03,  1.4409e-02,  7.4413e-03,\n",
      "         1.3829e-02,  1.2256e-03, -4.0041e-03, -1.3313e-02,  1.1691e-02,\n",
      "         9.4732e-03, -3.3626e-03, -5.1927e-03,  6.5667e-03,  1.1278e-02,\n",
      "        -1.1786e-02, -5.9020e-03,  7.3375e-03, -6.7127e-03,  6.6572e-03,\n",
      "        -3.7052e-03, -8.1803e-03, -1.0586e-03, -1.3488e-02, -1.4514e-02,\n",
      "         1.6319e-03, -1.3015e-02,  8.4440e-03,  1.1089e-02,  4.4034e-03,\n",
      "         2.9393e-03,  4.8306e-03,  1.2276e-02, -1.0448e-02,  7.3454e-03,\n",
      "         1.4255e-02, -1.2013e-02,  1.3390e-02, -1.2911e-02, -3.1330e-03,\n",
      "         9.4500e-03,  2.9412e-03, -1.7271e-03, -3.4279e-03, -1.3764e-02,\n",
      "         8.3854e-03,  3.6989e-03,  1.7574e-03, -1.0685e-02,  1.0858e-02,\n",
      "         5.9742e-03,  6.1751e-03, -1.3017e-02, -9.3095e-03,  3.8486e-03,\n",
      "        -2.8112e-03, -6.0187e-03, -2.2821e-03, -7.5797e-03, -8.6660e-03,\n",
      "        -1.4053e-02, -4.0987e-03, -3.5206e-03,  1.0758e-02, -7.2285e-03,\n",
      "         5.8841e-03, -2.2135e-03, -2.1467e-03,  1.3228e-02,  9.2888e-03,\n",
      "         9.3053e-03, -1.1639e-02,  4.2375e-03, -5.1354e-03,  2.1876e-04,\n",
      "         1.6039e-03,  1.3630e-02, -1.1768e-02,  1.1030e-02,  8.9738e-03,\n",
      "        -7.1935e-03,  6.0897e-03, -4.8371e-03,  2.8145e-03,  1.2091e-03,\n",
      "        -1.2767e-02, -1.7139e-03,  1.4296e-02, -6.7030e-03, -1.8529e-03,\n",
      "         7.7894e-03, -1.0167e-02,  6.9524e-03, -4.0389e-03, -2.9424e-04,\n",
      "         1.5308e-03,  1.2231e-02, -1.0219e-02, -7.3094e-03, -1.1144e-03,\n",
      "         4.8261e-03, -2.0020e-03, -1.7085e-03,  4.3137e-04, -8.1651e-03,\n",
      "         1.3124e-02,  9.2567e-03,  8.6125e-03,  1.2291e-02,  7.5166e-04,\n",
      "         1.2194e-02,  1.2568e-02,  4.9993e-03,  1.3795e-02,  7.1458e-03,\n",
      "        -5.5317e-03,  1.1306e-02,  1.3531e-02,  1.0326e-02,  1.2862e-02,\n",
      "        -1.2375e-02,  5.0163e-03,  1.2698e-02, -2.6331e-03, -3.7984e-04,\n",
      "         4.6796e-03, -9.4368e-03,  4.6366e-03,  5.2207e-03, -8.4983e-03,\n",
      "        -9.6763e-03, -4.8472e-03, -6.5568e-03,  5.7721e-03,  1.0526e-03,\n",
      "         7.2905e-03,  6.7047e-03, -4.9795e-03, -1.0543e-02, -1.2019e-02,\n",
      "        -7.0444e-03,  6.7335e-03, -8.7316e-03,  8.9397e-03, -9.7711e-03,\n",
      "        -2.4642e-03,  1.4017e-02,  1.2520e-02,  9.9347e-03, -1.0150e-02,\n",
      "         4.5427e-03, -1.4572e-02, -1.0617e-02, -3.4526e-03,  1.2901e-02,\n",
      "         2.2963e-03, -1.3657e-02,  1.3418e-02,  1.0937e-02,  1.1278e-02,\n",
      "         4.7522e-03,  4.7644e-03,  1.0904e-04,  6.2967e-03,  1.2957e-02,\n",
      "        -3.5605e-03,  1.1815e-02, -3.3858e-03,  7.6243e-03,  9.0138e-03,\n",
      "        -2.3464e-05,  6.0257e-03, -6.9565e-03, -8.3619e-03,  1.6252e-03,\n",
      "        -8.8849e-03, -1.4251e-02, -1.0283e-03, -5.0656e-03, -7.3823e-03,\n",
      "        -2.7637e-03, -1.0683e-02, -1.3259e-02,  9.8181e-03, -8.2849e-03,\n",
      "        -3.8976e-03,  2.3498e-03,  2.9095e-04, -1.1714e-02, -1.3835e-03,\n",
      "         2.3388e-03,  7.2429e-05,  9.8465e-03, -1.3210e-02,  9.8727e-03,\n",
      "        -9.5943e-03,  2.9742e-03, -6.7505e-03, -1.3764e-02,  1.1689e-02,\n",
      "         1.0593e-02, -7.5019e-03, -1.0456e-02, -2.2465e-03,  1.1636e-02,\n",
      "        -3.2253e-03,  9.8350e-03,  2.2027e-03,  1.3162e-02,  3.1030e-03,\n",
      "         1.1923e-02, -3.1756e-03, -1.8779e-03, -1.2373e-02, -7.6676e-03,\n",
      "         1.3758e-02,  1.1193e-02, -5.6152e-03,  6.6592e-03,  9.4328e-03,\n",
      "         3.1858e-03, -1.0333e-02, -1.4527e-02, -1.0247e-02, -5.3482e-03,\n",
      "        -8.3355e-03, -1.4371e-02, -1.1662e-02, -7.7349e-03,  1.2774e-02,\n",
      "         1.0081e-02, -1.3216e-02,  8.4087e-03,  1.3217e-02,  3.9710e-03,\n",
      "         4.0604e-03,  3.5001e-03,  1.5385e-04,  1.3182e-02,  7.8182e-03,\n",
      "        -1.1092e-02,  6.7307e-03,  5.9987e-03, -1.0666e-02, -8.2666e-03,\n",
      "         4.2729e-03, -6.4362e-03,  1.1668e-02,  1.1781e-02, -1.4080e-02,\n",
      "         9.3089e-03,  1.0260e-02, -1.0824e-02, -4.9098e-03,  5.4375e-03,\n",
      "        -1.1079e-02,  1.1476e-02,  1.2114e-03,  2.7434e-03, -1.1925e-02,\n",
      "         1.3683e-02, -1.0258e-03,  1.2762e-02, -5.8660e-03,  1.0599e-02,\n",
      "         2.1202e-04, -6.1280e-03, -6.3040e-03, -5.3535e-03,  1.4721e-02,\n",
      "        -2.5716e-04,  4.3749e-04, -3.1891e-03,  7.0758e-03,  1.0620e-02,\n",
      "        -1.4212e-02, -1.0992e-02,  1.4375e-02, -1.0326e-02, -1.1169e-02,\n",
      "         9.0604e-03, -1.4506e-02,  1.2098e-02,  1.3994e-02, -1.2914e-02,\n",
      "        -1.0542e-02, -1.1017e-02,  3.3550e-03,  6.2695e-03, -1.0953e-02,\n",
      "         4.4299e-03,  7.2749e-03,  1.0744e-02, -6.1832e-03, -1.0839e-02,\n",
      "         9.5856e-03, -1.7224e-03], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.0092,  0.0202],\n",
      "          [-0.0207, -0.0049]],\n",
      "\n",
      "         [[ 0.0072, -0.0146],\n",
      "          [-0.0242, -0.0140]],\n",
      "\n",
      "         [[ 0.0235, -0.0183],\n",
      "          [ 0.0092, -0.0112]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0231,  0.0116],\n",
      "          [-0.0134, -0.0054]],\n",
      "\n",
      "         [[ 0.0254, -0.0190],\n",
      "          [-0.0042, -0.0095]],\n",
      "\n",
      "         [[ 0.0199, -0.0287],\n",
      "          [-0.0308, -0.0248]]],\n",
      "\n",
      "\n",
      "        [[[-0.0107, -0.0116],\n",
      "          [-0.0135, -0.0283]],\n",
      "\n",
      "         [[ 0.0197, -0.0124],\n",
      "          [-0.0116, -0.0222]],\n",
      "\n",
      "         [[-0.0312,  0.0247],\n",
      "          [-0.0260,  0.0213]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0206, -0.0018],\n",
      "          [-0.0287,  0.0199]],\n",
      "\n",
      "         [[-0.0177,  0.0193],\n",
      "          [-0.0149,  0.0119]],\n",
      "\n",
      "         [[-0.0277,  0.0066],\n",
      "          [ 0.0215,  0.0087]]],\n",
      "\n",
      "\n",
      "        [[[-0.0293,  0.0080],\n",
      "          [ 0.0161, -0.0207]],\n",
      "\n",
      "         [[-0.0112, -0.0039],\n",
      "          [-0.0189, -0.0015]],\n",
      "\n",
      "         [[ 0.0121,  0.0190],\n",
      "          [-0.0166, -0.0213]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0050, -0.0076],\n",
      "          [-0.0157, -0.0172]],\n",
      "\n",
      "         [[-0.0200,  0.0162],\n",
      "          [-0.0160, -0.0078]],\n",
      "\n",
      "         [[ 0.0232,  0.0196],\n",
      "          [ 0.0299,  0.0213]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0018, -0.0077],\n",
      "          [-0.0070,  0.0285]],\n",
      "\n",
      "         [[ 0.0100, -0.0017],\n",
      "          [-0.0107,  0.0296]],\n",
      "\n",
      "         [[ 0.0165,  0.0300],\n",
      "          [ 0.0251, -0.0033]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0158, -0.0046],\n",
      "          [-0.0103,  0.0297]],\n",
      "\n",
      "         [[ 0.0051,  0.0189],\n",
      "          [ 0.0125,  0.0124]],\n",
      "\n",
      "         [[-0.0268,  0.0074],\n",
      "          [ 0.0166,  0.0265]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0295, -0.0001],\n",
      "          [-0.0257, -0.0299]],\n",
      "\n",
      "         [[-0.0041, -0.0092],\n",
      "          [-0.0138,  0.0296]],\n",
      "\n",
      "         [[-0.0233,  0.0097],\n",
      "          [ 0.0200, -0.0027]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0023,  0.0083],\n",
      "          [ 0.0263, -0.0071]],\n",
      "\n",
      "         [[ 0.0263,  0.0041],\n",
      "          [ 0.0059, -0.0222]],\n",
      "\n",
      "         [[ 0.0233,  0.0266],\n",
      "          [ 0.0170,  0.0076]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0244,  0.0302],\n",
      "          [ 0.0295,  0.0277]],\n",
      "\n",
      "         [[-0.0127,  0.0161],\n",
      "          [-0.0158,  0.0044]],\n",
      "\n",
      "         [[-0.0260,  0.0270],\n",
      "          [-0.0175, -0.0189]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0165, -0.0238],\n",
      "          [-0.0142,  0.0233]],\n",
      "\n",
      "         [[-0.0247,  0.0207],\n",
      "          [-0.0191, -0.0210]],\n",
      "\n",
      "         [[-0.0172,  0.0244],\n",
      "          [ 0.0124,  0.0114]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-2.5802e-02,  8.6285e-03,  2.1051e-02, -9.1895e-03,  4.9723e-03,\n",
      "         1.6973e-02,  2.1323e-02, -3.0641e-02,  2.9333e-02,  7.5292e-03,\n",
      "         3.0919e-02, -1.8382e-02, -9.2411e-03,  2.9076e-02, -1.9440e-02,\n",
      "         2.6591e-02, -2.7695e-02,  2.4817e-02, -2.1679e-02,  8.7954e-03,\n",
      "         2.1531e-02,  2.4969e-03,  2.2044e-02,  6.0881e-03,  2.9398e-02,\n",
      "         2.9477e-03, -1.9925e-02, -2.5878e-04,  2.0191e-02,  2.8507e-02,\n",
      "        -4.2853e-04,  1.9209e-02,  9.3857e-04, -2.7015e-02, -5.5121e-03,\n",
      "        -2.8031e-02,  2.0610e-02, -2.8918e-02,  2.1237e-02, -3.0721e-02,\n",
      "        -6.6906e-03,  2.9218e-02, -3.7301e-03, -1.9038e-02,  3.0461e-02,\n",
      "        -1.2087e-02, -1.4659e-02,  1.2293e-02,  7.3945e-04,  2.7509e-02,\n",
      "        -8.1209e-03,  2.1818e-02,  9.1619e-03,  2.0670e-02, -9.5836e-03,\n",
      "        -1.7890e-02,  2.7813e-02,  1.0432e-02,  1.7202e-03, -6.9059e-03,\n",
      "        -6.1372e-03,  2.6413e-02, -2.3537e-02, -5.0188e-03, -2.2495e-02,\n",
      "        -1.9905e-02,  2.9607e-02, -1.4282e-02,  1.9274e-02,  2.7182e-02,\n",
      "         2.3393e-02,  1.0280e-02, -2.6956e-03,  2.7528e-03,  1.4238e-02,\n",
      "        -1.2076e-02,  8.2646e-04, -5.8664e-03, -2.1612e-02, -2.2528e-02,\n",
      "         2.0209e-02, -1.5398e-02,  3.0113e-02, -2.4679e-02,  1.3736e-02,\n",
      "         1.5950e-02,  5.9412e-03, -2.2037e-02,  2.3004e-02,  1.5758e-02,\n",
      "         2.0235e-02, -1.6754e-02,  1.7408e-02, -8.0178e-03,  3.7829e-03,\n",
      "         2.0422e-02,  1.3013e-02, -3.0973e-02, -3.0333e-02,  3.7330e-03,\n",
      "         8.2174e-03,  2.7485e-03,  2.1314e-02,  9.2693e-03, -2.2115e-02,\n",
      "         9.9759e-03, -3.1047e-02, -9.0812e-03, -2.3298e-02, -8.8177e-03,\n",
      "         2.6549e-02,  2.5049e-02,  6.3105e-03, -6.5798e-03, -8.2756e-03,\n",
      "         1.1648e-02,  2.9730e-02, -3.0284e-02, -2.3089e-02,  2.3319e-02,\n",
      "        -1.7105e-02, -3.0609e-02, -4.6534e-03,  3.3722e-03,  1.0814e-03,\n",
      "         2.9273e-02, -2.7495e-02, -6.5279e-04, -2.4333e-02,  2.8130e-02,\n",
      "         3.7172e-03, -1.5125e-03,  9.0518e-03, -2.8725e-03, -3.1166e-02,\n",
      "        -1.5910e-02, -1.1340e-02,  1.1862e-02,  5.5998e-03,  2.3382e-02,\n",
      "         9.5940e-03, -1.4781e-02,  4.2857e-03,  5.1126e-03,  1.7621e-02,\n",
      "        -6.5928e-03,  1.3746e-04, -9.6138e-03,  6.0535e-03,  2.8494e-04,\n",
      "        -2.1464e-02,  2.9911e-02,  1.7759e-02, -5.7094e-03, -1.7606e-02,\n",
      "        -7.5919e-03,  1.3565e-03,  9.2614e-03, -1.2103e-02, -9.2740e-03,\n",
      "         2.1085e-02,  5.1467e-04, -2.8817e-02,  2.0347e-02, -1.9195e-02,\n",
      "         1.0963e-02, -1.4506e-02,  2.0760e-02, -2.0165e-02, -2.5556e-03,\n",
      "         1.3175e-03, -2.1412e-02,  3.1001e-02, -2.5636e-02,  1.3930e-02,\n",
      "        -1.4316e-02, -1.7056e-02,  1.8907e-02,  3.6908e-03, -1.0511e-02,\n",
      "        -1.5744e-02,  2.4046e-02,  7.1763e-03,  2.3504e-02,  7.0688e-03,\n",
      "        -1.5104e-03, -1.3680e-02, -2.4061e-02,  1.4613e-03,  1.0633e-03,\n",
      "         2.8185e-03,  2.0795e-02, -1.4023e-02,  1.8780e-02,  2.9644e-02,\n",
      "        -5.1987e-03, -2.0685e-02, -1.6613e-02, -2.3030e-02, -2.7861e-02,\n",
      "        -3.5074e-03, -1.8740e-02, -2.9970e-02,  1.0502e-02, -2.6838e-02,\n",
      "         2.2225e-02, -2.1154e-02,  9.5667e-03, -2.9642e-02, -2.6100e-02,\n",
      "         1.7995e-02, -2.0851e-02, -2.7582e-02,  1.2533e-02,  1.5538e-02,\n",
      "        -1.6693e-02,  1.3450e-02,  2.2096e-02,  2.7104e-02,  1.6846e-02,\n",
      "        -2.1757e-02, -2.4589e-02,  2.5680e-02, -1.5289e-02, -2.1495e-02,\n",
      "        -2.1459e-02,  4.3281e-03, -2.2578e-02,  1.7672e-02, -8.9044e-03,\n",
      "        -1.6979e-02,  2.6872e-02,  8.5581e-03,  9.1227e-03,  1.8688e-02,\n",
      "        -2.3949e-02, -2.6069e-03, -1.8252e-02, -6.2316e-03, -4.2957e-03,\n",
      "         6.5235e-03,  3.0233e-02,  2.0410e-02, -1.3337e-02,  2.8506e-03,\n",
      "         4.4020e-03,  2.5196e-02, -1.2951e-02,  2.4891e-02,  5.3531e-03,\n",
      "         9.6802e-03,  1.2682e-02, -2.2063e-02, -1.8369e-02, -9.1884e-03,\n",
      "        -7.7341e-05], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 1.5980e-03, -3.6253e-03, -9.1070e-03],\n",
      "          [ 8.2938e-03, -1.3422e-02, -3.9696e-03],\n",
      "          [ 3.1364e-03,  7.6929e-03,  6.1174e-03]],\n",
      "\n",
      "         [[ 1.2939e-02, -8.0951e-03, -1.4029e-02],\n",
      "          [-9.6772e-03, -2.4588e-03, -8.5728e-05],\n",
      "          [ 8.1790e-03, -1.0067e-02, -4.4800e-03]],\n",
      "\n",
      "         [[ 7.7774e-03, -2.3288e-03,  1.3120e-02],\n",
      "          [-7.4499e-03, -1.0501e-02,  3.8230e-03],\n",
      "          [ 3.9370e-03, -6.0209e-04, -9.4820e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.3782e-02, -7.1667e-03, -3.7053e-03],\n",
      "          [-4.5848e-03,  2.5241e-03,  1.0059e-02],\n",
      "          [-1.1638e-02,  1.2865e-02, -1.2688e-03]],\n",
      "\n",
      "         [[-7.5248e-03, -6.9573e-03, -4.0935e-03],\n",
      "          [-7.8238e-03,  1.1925e-02, -2.8461e-03],\n",
      "          [-5.3693e-03, -1.4441e-02, -2.7502e-03]],\n",
      "\n",
      "         [[-9.5488e-04, -8.8907e-03,  4.4719e-03],\n",
      "          [-4.0901e-04,  7.2400e-03, -1.1527e-03],\n",
      "          [-7.2282e-03,  3.9941e-03, -9.9711e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.3716e-02, -1.7019e-04, -1.0735e-02],\n",
      "          [-9.4562e-03,  1.1537e-02,  6.1296e-03],\n",
      "          [ 9.0264e-03,  5.6441e-03,  1.0038e-02]],\n",
      "\n",
      "         [[-3.6954e-03,  1.4158e-02,  1.1477e-02],\n",
      "          [-1.0347e-03,  7.2778e-03,  8.8010e-03],\n",
      "          [-3.0521e-03, -1.0543e-02, -1.4981e-03]],\n",
      "\n",
      "         [[ 9.2871e-03,  4.1487e-03,  2.8028e-03],\n",
      "          [-1.4342e-02,  2.9254e-03,  1.0960e-02],\n",
      "          [-6.6286e-03,  1.1375e-02,  3.8750e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3359e-02, -1.0455e-02, -1.4333e-02],\n",
      "          [-1.2056e-02,  1.4660e-02, -5.2508e-03],\n",
      "          [ 7.1723e-04,  7.1685e-03, -1.0739e-02]],\n",
      "\n",
      "         [[ 5.5854e-03, -1.4417e-02, -1.3669e-02],\n",
      "          [-1.4023e-02, -9.3360e-03,  5.0191e-03],\n",
      "          [ 2.2713e-03, -8.2910e-03,  1.1925e-02]],\n",
      "\n",
      "         [[ 1.4511e-02, -8.8438e-03,  1.1630e-02],\n",
      "          [ 8.4182e-03, -2.2833e-03,  5.0453e-03],\n",
      "          [ 8.9640e-03, -1.4623e-02,  1.0102e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 8.5915e-03, -4.3867e-03,  1.2787e-02],\n",
      "          [-6.5040e-03,  8.8734e-03,  8.0414e-03],\n",
      "          [ 1.2103e-02, -1.0350e-02, -8.6512e-03]],\n",
      "\n",
      "         [[ 6.1924e-03,  8.5658e-03,  1.0085e-02],\n",
      "          [ 1.0549e-02, -1.2070e-02,  2.6684e-04],\n",
      "          [-6.6799e-03, -5.4514e-03, -7.0302e-03]],\n",
      "\n",
      "         [[-1.0978e-02,  3.8425e-03,  9.4769e-03],\n",
      "          [ 9.9218e-03, -8.6686e-03,  2.0155e-03],\n",
      "          [ 1.2895e-02, -4.4532e-03,  8.1881e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-9.0720e-04,  8.6881e-03,  1.2415e-02],\n",
      "          [ 4.0042e-03, -4.1260e-03, -5.2197e-03],\n",
      "          [-2.5533e-03,  6.3859e-03,  1.2766e-02]],\n",
      "\n",
      "         [[ 1.3549e-02, -2.7335e-04,  6.2488e-03],\n",
      "          [ 2.9833e-03, -5.1303e-03,  5.3945e-03],\n",
      "          [ 6.4192e-03, -7.6197e-03,  9.1181e-03]],\n",
      "\n",
      "         [[ 1.0660e-02,  1.4537e-02,  2.9704e-03],\n",
      "          [ 3.5214e-03,  7.6910e-03,  1.3148e-02],\n",
      "          [ 1.3415e-02, -1.8869e-03,  1.0281e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-5.4987e-03,  1.3791e-02,  2.2927e-03],\n",
      "          [-1.9195e-03,  2.7664e-03, -3.0023e-03],\n",
      "          [ 8.4620e-03, -4.0916e-03, -1.3431e-03]],\n",
      "\n",
      "         [[ 6.4790e-03, -1.2834e-02,  8.4200e-03],\n",
      "          [ 6.6266e-03,  8.7865e-03, -5.2963e-03],\n",
      "          [ 7.1607e-03,  9.4063e-03, -8.8254e-03]],\n",
      "\n",
      "         [[ 1.3262e-02,  1.4488e-02,  6.2003e-03],\n",
      "          [ 1.0570e-03, -2.6191e-03,  1.2748e-02],\n",
      "          [-1.2889e-02,  7.6747e-03, -1.7445e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.6265e-03, -9.6673e-03,  1.1139e-03],\n",
      "          [ 3.4807e-03, -1.2642e-02,  8.0709e-03],\n",
      "          [ 8.0379e-03, -8.9455e-03, -7.2353e-03]],\n",
      "\n",
      "         [[-1.0134e-03,  8.4620e-04, -4.1525e-03],\n",
      "          [ 2.7626e-03,  7.0363e-03,  2.8588e-03],\n",
      "          [-4.1931e-03, -1.4118e-02, -1.3430e-02]],\n",
      "\n",
      "         [[-1.3649e-02,  5.8473e-03, -1.3886e-02],\n",
      "          [ 6.7080e-03,  7.9388e-03, -3.0482e-03],\n",
      "          [-1.2980e-02, -9.3658e-03,  1.0232e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.2948e-02, -6.2433e-03, -1.1536e-02],\n",
      "          [ 8.2384e-03, -1.3264e-02, -1.3468e-02],\n",
      "          [-4.6466e-03,  7.9534e-03,  1.2505e-02]],\n",
      "\n",
      "         [[ 1.3226e-02,  4.3316e-03,  1.6146e-03],\n",
      "          [-5.4537e-03,  7.1357e-03,  1.0924e-02],\n",
      "          [ 3.8882e-03, -8.7042e-03,  3.8916e-03]],\n",
      "\n",
      "         [[ 7.5084e-03,  7.8436e-03, -8.2559e-03],\n",
      "          [ 6.2020e-03, -6.6177e-03,  4.6859e-03],\n",
      "          [-8.6884e-03,  5.0549e-03, -1.4132e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.0851e-02, -1.4131e-02, -5.0984e-03],\n",
      "          [-7.6689e-04,  8.2129e-03,  1.2185e-02],\n",
      "          [ 1.9117e-03, -1.0295e-02, -1.0855e-02]],\n",
      "\n",
      "         [[-2.4385e-03, -1.4270e-02,  8.2830e-03],\n",
      "          [-1.3998e-02, -8.4588e-03, -1.2298e-02],\n",
      "          [ 1.2545e-02, -1.4466e-02,  1.1180e-02]],\n",
      "\n",
      "         [[-1.1894e-02,  5.5759e-03,  4.0420e-03],\n",
      "          [ 3.8307e-03,  1.9188e-03, -6.3331e-03],\n",
      "          [-1.0453e-02,  8.7004e-03, -6.1770e-03]]],\n",
      "\n",
      "\n",
      "        [[[-6.7162e-03,  8.1123e-03, -6.6202e-03],\n",
      "          [-8.2211e-03,  4.6157e-03, -2.6591e-03],\n",
      "          [ 5.8133e-04,  1.6442e-03,  5.8845e-03]],\n",
      "\n",
      "         [[-1.0205e-02,  1.5819e-03,  2.5118e-03],\n",
      "          [-1.3641e-02, -8.6373e-03,  1.2466e-04],\n",
      "          [ 2.7668e-03,  6.7674e-03, -1.2138e-03]],\n",
      "\n",
      "         [[ 3.1043e-03,  1.0691e-02,  6.3126e-03],\n",
      "          [-2.8071e-03,  1.2163e-02, -3.8790e-03],\n",
      "          [ 1.1826e-02, -7.9400e-03,  1.2554e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.2164e-02, -3.0990e-03,  9.3086e-03],\n",
      "          [-1.0994e-03,  7.1622e-03,  6.1032e-03],\n",
      "          [ 7.3469e-05,  4.5790e-03, -6.4280e-03]],\n",
      "\n",
      "         [[ 1.2629e-02, -3.0311e-03,  1.3819e-02],\n",
      "          [-7.4269e-03,  1.1416e-02, -1.3331e-02],\n",
      "          [ 4.8256e-03,  4.3891e-03,  1.5491e-03]],\n",
      "\n",
      "         [[ 1.3610e-02, -7.3692e-03, -1.1536e-02],\n",
      "          [-4.4136e-03,  6.5463e-03,  1.5456e-03],\n",
      "          [-3.3297e-03, -1.1563e-02,  3.2140e-03]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-1.3434e-02,  4.9309e-03, -1.1335e-02, -1.1380e-02,  8.3353e-03,\n",
      "        -6.1901e-03, -5.0796e-03,  8.6714e-04,  1.0963e-02,  9.7735e-03,\n",
      "         1.1771e-02, -5.9128e-03,  1.0940e-02, -6.2881e-03, -4.1966e-03,\n",
      "        -7.9831e-03, -4.8896e-03,  8.2877e-03, -1.4263e-02, -6.5536e-03,\n",
      "        -1.4444e-02,  6.4321e-03, -1.3969e-02,  9.4988e-03, -1.2748e-02,\n",
      "        -4.0414e-04, -1.9126e-03, -8.4796e-03,  1.5362e-03,  6.1536e-03,\n",
      "        -8.8070e-03,  1.4366e-02, -1.2605e-02,  1.3742e-02,  1.3729e-02,\n",
      "        -7.8459e-03,  1.2191e-02, -1.1694e-02,  1.4771e-03,  8.8680e-03,\n",
      "        -4.1523e-03, -5.7271e-03, -1.2849e-02, -1.1236e-02,  4.8055e-03,\n",
      "         6.2053e-03,  4.7111e-03,  1.3183e-02, -1.2321e-02,  6.5057e-04,\n",
      "         4.6344e-03, -1.1578e-03, -1.2787e-03,  1.5705e-05, -7.7439e-03,\n",
      "        -7.4044e-03, -1.1476e-02, -8.6923e-03,  1.1625e-02,  5.1255e-03,\n",
      "        -6.2933e-03, -4.7753e-03, -1.3321e-02,  3.7584e-03, -7.1594e-03,\n",
      "        -2.2777e-03, -5.1202e-03,  3.8856e-03, -6.0950e-03, -1.3023e-02,\n",
      "        -2.7699e-03,  7.0907e-03,  1.2508e-03, -1.2845e-02, -4.1523e-03,\n",
      "         6.5490e-03, -4.1968e-03, -4.8532e-03,  2.2207e-03, -3.1984e-03,\n",
      "        -5.9450e-03, -1.4605e-02, -1.1597e-02, -4.4999e-03, -6.4867e-03,\n",
      "        -1.1301e-02, -1.0484e-02,  6.9613e-03, -4.8994e-03,  6.3033e-03,\n",
      "         7.9239e-04,  1.4457e-02,  1.3323e-02,  1.1856e-02, -3.8330e-03,\n",
      "        -5.6174e-03,  8.4152e-03, -1.2052e-03,  8.1239e-03, -3.8515e-03,\n",
      "         1.1376e-02,  1.2904e-02,  8.5689e-03,  8.5822e-03,  4.7928e-03,\n",
      "         1.3961e-02, -8.1920e-03, -3.8055e-03, -4.5479e-03,  8.4121e-03,\n",
      "         1.4043e-02, -1.3999e-02,  1.3636e-02, -2.9252e-03,  1.2860e-02,\n",
      "        -9.4175e-03, -1.0182e-02,  4.9507e-03,  1.8140e-03,  7.5296e-03,\n",
      "         9.5729e-03,  5.6124e-03,  5.5310e-03,  6.8663e-03, -1.1549e-02,\n",
      "        -5.0993e-03, -1.4385e-02, -7.5845e-03, -1.3165e-03, -6.2476e-04,\n",
      "        -4.3052e-03, -2.8562e-03,  1.4480e-02, -1.1496e-02, -7.9462e-03,\n",
      "         5.5556e-03, -5.7406e-03, -9.1037e-03,  4.0476e-03, -9.2304e-03,\n",
      "        -5.7273e-03,  3.6164e-03,  2.3065e-03, -1.2418e-02, -1.1706e-02,\n",
      "        -1.2646e-02, -1.3126e-02,  8.6569e-03,  4.9297e-03,  1.1575e-03,\n",
      "         3.6806e-04,  1.0717e-02,  1.0931e-02, -6.8192e-03, -7.9132e-03,\n",
      "        -1.3468e-02,  5.8161e-03,  3.7292e-03, -3.6964e-03,  3.1206e-03,\n",
      "         8.3710e-03, -9.3728e-03, -7.8597e-03, -1.0699e-02, -7.4118e-03,\n",
      "        -7.4586e-03, -5.5490e-03, -1.4310e-02,  6.9420e-03, -4.7785e-03,\n",
      "        -1.2702e-02,  7.8822e-03,  2.7196e-03,  8.5392e-03, -9.8802e-03,\n",
      "        -1.1405e-02, -4.7598e-03,  6.7517e-03,  6.1696e-03,  6.9974e-03,\n",
      "         1.2969e-02, -5.0231e-04,  8.0978e-03, -5.1261e-03,  2.6891e-03,\n",
      "         6.1404e-04, -5.6890e-03,  1.3411e-02, -1.4331e-02,  1.4034e-02,\n",
      "        -7.0043e-03, -4.7210e-03, -6.8787e-03, -1.1388e-02, -7.6400e-03,\n",
      "         1.9399e-03,  4.2117e-03,  2.8950e-03, -1.2486e-02,  1.0255e-02,\n",
      "         3.9596e-03,  7.5123e-03,  1.4446e-02, -9.8365e-03, -3.3512e-03,\n",
      "        -1.2432e-02, -1.4265e-02,  1.0097e-02, -9.1752e-03, -1.9133e-03,\n",
      "         1.4547e-02,  1.3351e-02,  9.2084e-03, -8.9487e-03,  2.7412e-03,\n",
      "        -5.7463e-03,  4.1802e-03,  1.0591e-02,  9.3208e-03, -1.1054e-02,\n",
      "         4.7835e-03, -1.3505e-02,  5.6630e-03,  1.9230e-03,  1.0502e-03,\n",
      "         4.5497e-03,  2.1388e-03, -1.4381e-02, -7.3193e-03, -6.4893e-03,\n",
      "        -8.3926e-03,  1.1039e-02, -6.0992e-03,  5.2727e-03, -8.4463e-03,\n",
      "         1.0413e-03,  9.3286e-03,  3.7538e-03, -9.6870e-03, -9.2042e-03,\n",
      "         8.9906e-03,  1.2743e-02, -1.3354e-02,  5.7021e-03,  9.9062e-03,\n",
      "        -9.8486e-03,  8.6680e-03,  4.4413e-03, -4.9152e-03, -7.8114e-03,\n",
      "         1.3177e-02, -1.2974e-02,  4.0673e-03,  1.6907e-04, -1.2478e-02,\n",
      "         1.1967e-02], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.0002, -0.0090, -0.0203],\n",
      "          [-0.0172,  0.0170,  0.0051],\n",
      "          [ 0.0033, -0.0070,  0.0015]],\n",
      "\n",
      "         [[ 0.0009,  0.0175,  0.0055],\n",
      "          [ 0.0124, -0.0196,  0.0012],\n",
      "          [ 0.0074, -0.0060, -0.0100]],\n",
      "\n",
      "         [[ 0.0143, -0.0044,  0.0134],\n",
      "          [-0.0158, -0.0186, -0.0176],\n",
      "          [-0.0206, -0.0175, -0.0139]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0177,  0.0119, -0.0091],\n",
      "          [ 0.0151,  0.0194, -0.0124],\n",
      "          [-0.0019, -0.0188, -0.0123]],\n",
      "\n",
      "         [[-0.0002,  0.0169,  0.0196],\n",
      "          [-0.0115, -0.0098,  0.0145],\n",
      "          [-0.0005, -0.0039, -0.0175]],\n",
      "\n",
      "         [[ 0.0119, -0.0140,  0.0159],\n",
      "          [ 0.0147, -0.0186, -0.0057],\n",
      "          [-0.0119, -0.0020, -0.0162]]],\n",
      "\n",
      "\n",
      "        [[[-0.0067, -0.0046,  0.0078],\n",
      "          [ 0.0205, -0.0059, -0.0030],\n",
      "          [-0.0179, -0.0129,  0.0026]],\n",
      "\n",
      "         [[-0.0118,  0.0037,  0.0049],\n",
      "          [-0.0075, -0.0065,  0.0157],\n",
      "          [ 0.0171, -0.0078, -0.0202]],\n",
      "\n",
      "         [[ 0.0093,  0.0178, -0.0030],\n",
      "          [ 0.0208, -0.0008, -0.0207],\n",
      "          [ 0.0156, -0.0054,  0.0189]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0006,  0.0204,  0.0119],\n",
      "          [-0.0064,  0.0039, -0.0200],\n",
      "          [ 0.0111, -0.0131,  0.0162]],\n",
      "\n",
      "         [[-0.0177, -0.0085, -0.0156],\n",
      "          [-0.0098, -0.0172,  0.0066],\n",
      "          [ 0.0160, -0.0059,  0.0107]],\n",
      "\n",
      "         [[-0.0047, -0.0049,  0.0082],\n",
      "          [-0.0157, -0.0073, -0.0047],\n",
      "          [-0.0148,  0.0005, -0.0188]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0025, -0.0036,  0.0141],\n",
      "          [ 0.0027,  0.0083,  0.0152],\n",
      "          [-0.0115,  0.0146, -0.0153]],\n",
      "\n",
      "         [[ 0.0095,  0.0063, -0.0055],\n",
      "          [ 0.0144,  0.0051, -0.0159],\n",
      "          [-0.0112, -0.0185, -0.0131]],\n",
      "\n",
      "         [[ 0.0159, -0.0009, -0.0066],\n",
      "          [-0.0158, -0.0163, -0.0084],\n",
      "          [ 0.0094, -0.0072,  0.0200]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0141, -0.0142,  0.0170],\n",
      "          [ 0.0205,  0.0190, -0.0034],\n",
      "          [-0.0092,  0.0181, -0.0018]],\n",
      "\n",
      "         [[-0.0051,  0.0152, -0.0006],\n",
      "          [ 0.0140,  0.0165, -0.0007],\n",
      "          [-0.0050,  0.0116,  0.0166]],\n",
      "\n",
      "         [[ 0.0004, -0.0011, -0.0083],\n",
      "          [ 0.0189,  0.0165, -0.0017],\n",
      "          [ 0.0023, -0.0138, -0.0134]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.0126,  0.0203, -0.0075],\n",
      "          [ 0.0109, -0.0043,  0.0160],\n",
      "          [-0.0078, -0.0006, -0.0122]],\n",
      "\n",
      "         [[ 0.0200,  0.0068, -0.0095],\n",
      "          [-0.0146,  0.0011, -0.0122],\n",
      "          [ 0.0101, -0.0067,  0.0033]],\n",
      "\n",
      "         [[-0.0102,  0.0055, -0.0097],\n",
      "          [-0.0150,  0.0128, -0.0061],\n",
      "          [-0.0206, -0.0172, -0.0050]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0163,  0.0047, -0.0177],\n",
      "          [-0.0188,  0.0201, -0.0002],\n",
      "          [-0.0097,  0.0028,  0.0154]],\n",
      "\n",
      "         [[ 0.0104,  0.0086, -0.0107],\n",
      "          [ 0.0184, -0.0117,  0.0102],\n",
      "          [ 0.0067, -0.0113,  0.0125]],\n",
      "\n",
      "         [[ 0.0045, -0.0023, -0.0204],\n",
      "          [ 0.0022, -0.0184,  0.0023],\n",
      "          [ 0.0138,  0.0148, -0.0168]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0168, -0.0148, -0.0085],\n",
      "          [ 0.0139,  0.0074,  0.0156],\n",
      "          [ 0.0170,  0.0099,  0.0117]],\n",
      "\n",
      "         [[-0.0165, -0.0116, -0.0207],\n",
      "          [ 0.0182, -0.0069,  0.0052],\n",
      "          [ 0.0206,  0.0035, -0.0038]],\n",
      "\n",
      "         [[ 0.0042,  0.0027, -0.0083],\n",
      "          [ 0.0044,  0.0168,  0.0153],\n",
      "          [-0.0030,  0.0106, -0.0101]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0169,  0.0114,  0.0199],\n",
      "          [ 0.0107, -0.0110,  0.0142],\n",
      "          [ 0.0021, -0.0177, -0.0062]],\n",
      "\n",
      "         [[-0.0199, -0.0059,  0.0069],\n",
      "          [ 0.0121, -0.0184, -0.0013],\n",
      "          [ 0.0190,  0.0138,  0.0142]],\n",
      "\n",
      "         [[-0.0104, -0.0033, -0.0151],\n",
      "          [ 0.0165, -0.0111,  0.0157],\n",
      "          [-0.0165,  0.0064,  0.0195]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0047,  0.0113,  0.0156],\n",
      "          [-0.0133,  0.0206,  0.0042],\n",
      "          [ 0.0139,  0.0086, -0.0155]],\n",
      "\n",
      "         [[ 0.0159,  0.0167,  0.0055],\n",
      "          [-0.0116, -0.0202, -0.0032],\n",
      "          [ 0.0113, -0.0187, -0.0105]],\n",
      "\n",
      "         [[-0.0084,  0.0063, -0.0017],\n",
      "          [-0.0188,  0.0023, -0.0166],\n",
      "          [-0.0200,  0.0064,  0.0017]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0023, -0.0119, -0.0141],\n",
      "          [ 0.0082, -0.0112, -0.0012],\n",
      "          [-0.0167, -0.0180, -0.0177]],\n",
      "\n",
      "         [[ 0.0058, -0.0114, -0.0011],\n",
      "          [ 0.0166, -0.0044, -0.0083],\n",
      "          [ 0.0148,  0.0166,  0.0062]],\n",
      "\n",
      "         [[ 0.0207,  0.0080,  0.0097],\n",
      "          [-0.0185,  0.0144, -0.0198],\n",
      "          [-0.0141, -0.0018,  0.0186]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0016,  0.0136,  0.0021,  0.0008,  0.0064, -0.0157,  0.0068, -0.0177,\n",
      "         0.0024,  0.0061,  0.0146, -0.0040,  0.0204, -0.0102,  0.0196,  0.0033,\n",
      "         0.0030,  0.0188, -0.0113, -0.0014, -0.0028,  0.0202, -0.0059, -0.0164,\n",
      "         0.0202,  0.0194, -0.0131,  0.0021, -0.0111,  0.0066,  0.0153, -0.0032,\n",
      "         0.0199, -0.0010, -0.0085, -0.0202, -0.0158,  0.0030,  0.0104, -0.0039,\n",
      "        -0.0123,  0.0064,  0.0149,  0.0013, -0.0145, -0.0001,  0.0002, -0.0162,\n",
      "        -0.0202, -0.0199, -0.0061,  0.0052, -0.0142,  0.0105, -0.0055,  0.0173,\n",
      "         0.0200, -0.0122,  0.0061, -0.0195, -0.0087, -0.0155,  0.0185, -0.0160,\n",
      "         0.0160, -0.0061,  0.0006,  0.0199, -0.0028,  0.0181,  0.0012, -0.0126,\n",
      "        -0.0180,  0.0028, -0.0145, -0.0094, -0.0010, -0.0155, -0.0154, -0.0055,\n",
      "         0.0162,  0.0162,  0.0206,  0.0013,  0.0022,  0.0033, -0.0207, -0.0195,\n",
      "         0.0076,  0.0158,  0.0092, -0.0079, -0.0058,  0.0098, -0.0026, -0.0173,\n",
      "        -0.0045,  0.0016,  0.0185,  0.0201, -0.0116, -0.0155, -0.0106,  0.0063,\n",
      "         0.0062,  0.0186, -0.0103,  0.0004, -0.0160, -0.0075,  0.0016, -0.0093,\n",
      "         0.0065,  0.0037,  0.0008, -0.0055,  0.0093, -0.0011,  0.0172, -0.0034,\n",
      "        -0.0112,  0.0006,  0.0083, -0.0202,  0.0005,  0.0172, -0.0050,  0.0102,\n",
      "        -0.0138, -0.0121,  0.0131,  0.0004, -0.0115,  0.0075,  0.0039,  0.0195,\n",
      "        -0.0119,  0.0073,  0.0144,  0.0118,  0.0078,  0.0122, -0.0039, -0.0025,\n",
      "         0.0120,  0.0162,  0.0088,  0.0050, -0.0159,  0.0049,  0.0050, -0.0062,\n",
      "        -0.0178, -0.0191,  0.0134, -0.0109,  0.0174, -0.0024,  0.0073,  0.0030,\n",
      "        -0.0094,  0.0074, -0.0101, -0.0065,  0.0025, -0.0138, -0.0143,  0.0053,\n",
      "        -0.0099,  0.0182, -0.0064,  0.0141,  0.0056,  0.0158,  0.0183,  0.0002,\n",
      "        -0.0024,  0.0200,  0.0198, -0.0024,  0.0070,  0.0175, -0.0136, -0.0088,\n",
      "         0.0195,  0.0120,  0.0189, -0.0118, -0.0022,  0.0181, -0.0134, -0.0112,\n",
      "         0.0107, -0.0169, -0.0107,  0.0190,  0.0052,  0.0088,  0.0123, -0.0197,\n",
      "         0.0114,  0.0129, -0.0146, -0.0025, -0.0165, -0.0153,  0.0161, -0.0076,\n",
      "         0.0007,  0.0086, -0.0189,  0.0044,  0.0101,  0.0202, -0.0048,  0.0026,\n",
      "        -0.0011,  0.0072,  0.0054,  0.0149,  0.0149,  0.0108, -0.0043, -0.0208,\n",
      "         0.0052,  0.0165, -0.0190, -0.0194, -0.0160, -0.0181,  0.0207, -0.0199,\n",
      "        -0.0179, -0.0056,  0.0002, -0.0171, -0.0161, -0.0090,  0.0096,  0.0002,\n",
      "        -0.0161, -0.0202, -0.0158,  0.0200, -0.0065, -0.0013,  0.0157, -0.0030,\n",
      "         0.0099,  0.0003,  0.0123, -0.0139, -0.0099, -0.0126,  0.0116, -0.0050],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-8.1360e-04, -2.8260e-03, -1.3515e-02],\n",
      "          [ 5.4210e-04,  1.7085e-02,  1.7610e-03],\n",
      "          [-4.5624e-03, -5.6066e-03, -8.9214e-03]],\n",
      "\n",
      "         [[ 1.5223e-02, -1.8724e-02, -3.6626e-03],\n",
      "          [-1.4926e-02,  8.3921e-03, -1.3439e-02],\n",
      "          [-5.0848e-03, -1.3665e-02, -4.4411e-04]],\n",
      "\n",
      "         [[ 4.0504e-03,  9.7681e-03,  7.1145e-03],\n",
      "          [ 6.4350e-04,  3.5246e-03,  5.0835e-03],\n",
      "          [ 7.3812e-03, -1.3756e-03,  1.5106e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-8.1196e-03,  6.9275e-03,  9.7548e-03],\n",
      "          [-1.8078e-02,  1.4341e-02,  2.6451e-03],\n",
      "          [ 1.3895e-02,  5.9551e-03,  9.6035e-03]],\n",
      "\n",
      "         [[ 1.5757e-02,  2.4574e-03, -1.8182e-02],\n",
      "          [-1.1075e-02, -1.3886e-02,  7.7489e-03],\n",
      "          [ 5.4832e-03,  2.6356e-03, -6.6396e-03]],\n",
      "\n",
      "         [[ 1.2916e-02, -1.0823e-02, -3.7384e-03],\n",
      "          [ 6.7897e-03, -8.8058e-04, -3.5102e-03],\n",
      "          [-1.0385e-02, -1.5269e-02,  1.6288e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 1.2135e-02,  1.2660e-02,  2.8886e-03],\n",
      "          [-1.3588e-02,  1.5640e-02,  2.5233e-04],\n",
      "          [ 1.9664e-02,  1.3165e-03, -6.4587e-03]],\n",
      "\n",
      "         [[-1.5493e-02, -1.6701e-02,  1.5860e-03],\n",
      "          [ 1.3511e-02, -7.8481e-03, -1.7013e-02],\n",
      "          [-3.4520e-03, -1.2371e-02, -1.1326e-02]],\n",
      "\n",
      "         [[ 4.3283e-03, -1.0648e-02,  9.5980e-03],\n",
      "          [-1.2218e-02, -9.7792e-03, -6.0708e-04],\n",
      "          [-1.8004e-02,  2.0397e-02,  9.7471e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 6.3099e-03, -1.8246e-02, -1.8247e-02],\n",
      "          [ 1.0728e-02, -9.6733e-03, -1.5431e-03],\n",
      "          [ 9.3346e-03,  1.0553e-02, -3.1365e-03]],\n",
      "\n",
      "         [[ 7.5584e-03,  1.3746e-02,  1.6474e-02],\n",
      "          [ 1.3359e-02,  3.9046e-03,  5.7659e-03],\n",
      "          [ 1.2926e-02,  1.0816e-02, -8.9207e-03]],\n",
      "\n",
      "         [[ 1.3878e-03, -1.4917e-02,  1.4614e-02],\n",
      "          [ 1.2500e-02,  2.0831e-02, -9.0624e-03],\n",
      "          [-2.8089e-03, -1.5745e-02,  1.3196e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.4277e-02, -5.1815e-03, -1.9689e-02],\n",
      "          [ 1.9103e-02, -1.1941e-03,  3.3410e-03],\n",
      "          [ 1.9300e-02, -9.1108e-03, -1.9982e-02]],\n",
      "\n",
      "         [[ 6.0968e-03,  8.4018e-03,  2.0369e-02],\n",
      "          [-1.9739e-02, -6.2563e-03,  7.0940e-04],\n",
      "          [ 1.9659e-02,  7.5715e-03,  1.2109e-02]],\n",
      "\n",
      "         [[ 1.3216e-02, -1.0985e-03,  2.0732e-02],\n",
      "          [-6.8906e-03, -1.0641e-02, -3.0185e-03],\n",
      "          [-6.3812e-03,  1.4601e-02,  1.8308e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 6.7247e-03,  3.0337e-03,  1.7564e-02],\n",
      "          [ 3.8184e-03,  1.0611e-02,  1.2243e-02],\n",
      "          [ 2.7547e-05,  1.8473e-02,  1.6355e-02]],\n",
      "\n",
      "         [[-2.9295e-03, -1.9625e-02, -1.6538e-02],\n",
      "          [-8.1418e-03,  1.2603e-02,  9.9468e-03],\n",
      "          [-8.0346e-03, -1.1478e-02,  1.5891e-02]],\n",
      "\n",
      "         [[ 1.7495e-02,  1.0138e-02,  1.3933e-02],\n",
      "          [-1.8026e-02, -7.1812e-04,  4.8411e-03],\n",
      "          [ 1.4797e-02,  1.5066e-02,  1.2105e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-1.9190e-02, -1.1659e-03,  1.1595e-02],\n",
      "          [-1.9979e-02,  1.0876e-02,  7.0968e-03],\n",
      "          [-1.3807e-02,  1.3419e-02,  1.0762e-02]],\n",
      "\n",
      "         [[ 1.1867e-02,  1.7741e-02, -5.2465e-03],\n",
      "          [-8.0586e-03,  1.9946e-02, -1.8627e-02],\n",
      "          [-1.6722e-02, -1.3260e-02, -5.4339e-03]],\n",
      "\n",
      "         [[ 2.5989e-03,  1.7416e-02, -1.4096e-02],\n",
      "          [-3.0444e-03,  1.5614e-02, -6.2994e-03],\n",
      "          [-9.1322e-03,  6.2712e-03,  2.0729e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.7197e-02, -8.6216e-04,  1.8959e-02],\n",
      "          [-1.8538e-02,  1.1426e-02, -1.0053e-02],\n",
      "          [ 1.3542e-02,  4.0524e-03, -3.9651e-03]],\n",
      "\n",
      "         [[-9.3653e-03, -1.9592e-02,  5.7268e-03],\n",
      "          [ 1.1531e-02,  8.7323e-03, -6.9620e-03],\n",
      "          [-1.1406e-02,  1.2281e-02, -6.8938e-03]],\n",
      "\n",
      "         [[-6.2832e-03, -1.6039e-02, -1.2053e-02],\n",
      "          [-7.2297e-03,  9.3083e-03, -5.2215e-04],\n",
      "          [ 1.2744e-02,  1.2113e-02,  9.1985e-04]]],\n",
      "\n",
      "\n",
      "        [[[-2.0254e-02,  2.0431e-03, -1.5233e-03],\n",
      "          [-2.9116e-03,  1.9602e-03, -1.0910e-02],\n",
      "          [ 3.4848e-03,  7.0925e-03, -1.8302e-02]],\n",
      "\n",
      "         [[-5.3623e-03,  7.6196e-03, -1.5986e-02],\n",
      "          [ 4.8456e-03, -1.8299e-02, -3.9671e-03],\n",
      "          [-1.7857e-02, -5.3163e-04,  1.2935e-02]],\n",
      "\n",
      "         [[-1.7336e-02,  1.3822e-02,  2.0195e-02],\n",
      "          [-6.4096e-04,  6.6966e-03,  3.8958e-03],\n",
      "          [-5.0352e-03, -1.2666e-02,  1.4963e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.9260e-02,  1.1698e-02,  4.7858e-03],\n",
      "          [-1.6286e-02,  1.0855e-02, -1.2713e-02],\n",
      "          [ 1.8067e-02, -1.7918e-02, -1.7930e-02]],\n",
      "\n",
      "         [[ 1.4897e-02, -1.1925e-02, -6.4544e-03],\n",
      "          [ 7.7850e-03,  4.0682e-03,  1.5541e-02],\n",
      "          [ 1.3068e-02, -6.1386e-03, -1.1252e-02]],\n",
      "\n",
      "         [[-1.8956e-02, -1.2627e-02,  1.4720e-02],\n",
      "          [-5.1528e-03, -1.4035e-02,  1.0418e-02],\n",
      "          [ 3.8253e-03, -1.7215e-02, -1.5334e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.3415e-02, -4.5223e-03,  8.0589e-03],\n",
      "          [-1.3523e-02, -8.3591e-03, -1.3463e-02],\n",
      "          [-2.6466e-03,  1.7074e-02, -1.6649e-02]],\n",
      "\n",
      "         [[ 1.7491e-02,  6.4715e-03, -3.4962e-03],\n",
      "          [-1.5957e-02, -3.2461e-04,  6.3725e-03],\n",
      "          [-8.7634e-03, -1.6654e-02, -1.3766e-02]],\n",
      "\n",
      "         [[-1.9428e-02,  1.0900e-02,  2.0138e-02],\n",
      "          [-1.8856e-02, -5.3224e-03, -1.5329e-02],\n",
      "          [ 1.1400e-03,  1.7986e-02,  1.7856e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.7630e-02, -1.7815e-02,  5.7413e-03],\n",
      "          [ 1.7561e-02,  6.0254e-04,  1.4406e-02],\n",
      "          [ 1.5739e-02, -3.4479e-03,  1.5493e-02]],\n",
      "\n",
      "         [[ 6.8710e-03,  1.5404e-02, -5.7407e-04],\n",
      "          [-7.0652e-03, -2.0248e-02, -1.0863e-02],\n",
      "          [ 4.0831e-03, -1.0459e-02,  9.2384e-03]],\n",
      "\n",
      "         [[ 6.1286e-03, -1.5737e-02, -7.6427e-04],\n",
      "          [-1.3725e-02,  3.0048e-03, -1.6340e-02],\n",
      "          [ 9.1475e-03, -2.4176e-03, -1.4918e-03]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0121, -0.0147, -0.0020,  0.0111,  0.0073, -0.0083,  0.0009,  0.0168,\n",
      "         0.0001, -0.0019,  0.0099, -0.0171, -0.0165, -0.0166,  0.0119,  0.0053,\n",
      "         0.0052, -0.0062,  0.0160, -0.0024,  0.0079,  0.0086,  0.0021,  0.0007,\n",
      "         0.0172, -0.0138,  0.0006,  0.0104,  0.0082,  0.0030, -0.0115,  0.0207,\n",
      "         0.0181,  0.0199, -0.0136,  0.0045,  0.0155,  0.0008,  0.0172,  0.0077,\n",
      "         0.0011,  0.0159, -0.0206, -0.0070, -0.0057,  0.0129,  0.0182, -0.0156,\n",
      "         0.0023, -0.0043,  0.0006, -0.0150, -0.0074,  0.0140, -0.0179, -0.0103,\n",
      "         0.0107, -0.0056, -0.0073, -0.0168,  0.0164,  0.0073,  0.0105, -0.0161,\n",
      "        -0.0173,  0.0023,  0.0016,  0.0207,  0.0093,  0.0205,  0.0152,  0.0136,\n",
      "        -0.0155, -0.0019,  0.0078,  0.0107, -0.0189,  0.0031,  0.0010,  0.0160,\n",
      "         0.0099, -0.0009, -0.0081,  0.0113,  0.0196, -0.0202,  0.0072, -0.0101,\n",
      "        -0.0031, -0.0117,  0.0177,  0.0196, -0.0199, -0.0037,  0.0115, -0.0030,\n",
      "         0.0192,  0.0055, -0.0170,  0.0003, -0.0004,  0.0048, -0.0139, -0.0180,\n",
      "        -0.0156,  0.0107, -0.0050,  0.0066,  0.0065, -0.0108,  0.0057,  0.0086,\n",
      "         0.0042,  0.0129,  0.0103,  0.0039, -0.0063, -0.0170, -0.0026, -0.0141,\n",
      "        -0.0080, -0.0151,  0.0099,  0.0082,  0.0192,  0.0064, -0.0191,  0.0058,\n",
      "         0.0051,  0.0119, -0.0138, -0.0138,  0.0090,  0.0115, -0.0114, -0.0030,\n",
      "        -0.0129, -0.0112, -0.0070, -0.0081,  0.0037, -0.0066, -0.0127,  0.0163,\n",
      "        -0.0115,  0.0160,  0.0059, -0.0017,  0.0029, -0.0122,  0.0077,  0.0122,\n",
      "         0.0204,  0.0055, -0.0069, -0.0205, -0.0043,  0.0199,  0.0059, -0.0162,\n",
      "        -0.0146, -0.0150,  0.0178,  0.0177, -0.0100, -0.0146, -0.0100,  0.0007,\n",
      "        -0.0013, -0.0059, -0.0160, -0.0090, -0.0092, -0.0125, -0.0167, -0.0072,\n",
      "        -0.0149, -0.0114,  0.0011, -0.0019, -0.0190,  0.0184, -0.0059, -0.0135,\n",
      "         0.0125, -0.0190,  0.0068,  0.0017,  0.0081, -0.0074,  0.0176,  0.0153,\n",
      "         0.0190,  0.0126,  0.0038, -0.0097, -0.0125,  0.0126,  0.0207, -0.0098,\n",
      "         0.0052,  0.0069, -0.0174,  0.0194,  0.0141, -0.0164,  0.0180, -0.0049,\n",
      "        -0.0012,  0.0151,  0.0194,  0.0078, -0.0119, -0.0193,  0.0039, -0.0076,\n",
      "        -0.0165,  0.0125, -0.0081,  0.0016, -0.0028,  0.0127,  0.0002, -0.0024,\n",
      "        -0.0166,  0.0027,  0.0016, -0.0085,  0.0108, -0.0065,  0.0149,  0.0081,\n",
      "         0.0199,  0.0125,  0.0118,  0.0065,  0.0082,  0.0029, -0.0050, -0.0066,\n",
      "         0.0032, -0.0007,  0.0109,  0.0181, -0.0202,  0.0022,  0.0007, -0.0079,\n",
      "         0.0169, -0.0121,  0.0039,  0.0094,  0.0010, -0.0059,  0.0050,  0.0168],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
      "       device='cuda:0', requires_grad=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Parameter containing:\n",
      "tensor([[[[-0.0193, -0.0157],\n",
      "          [-0.0429,  0.0173]],\n",
      "\n",
      "         [[ 0.0025, -0.0015],\n",
      "          [-0.0192,  0.0273]],\n",
      "\n",
      "         [[ 0.0438,  0.0285],\n",
      "          [-0.0236,  0.0074]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0359,  0.0078],\n",
      "          [-0.0178,  0.0184]],\n",
      "\n",
      "         [[-0.0140,  0.0245],\n",
      "          [ 0.0124,  0.0353]],\n",
      "\n",
      "         [[-0.0158,  0.0441],\n",
      "          [-0.0442,  0.0183]]],\n",
      "\n",
      "\n",
      "        [[[-0.0014, -0.0100],\n",
      "          [-0.0412, -0.0007]],\n",
      "\n",
      "         [[-0.0193, -0.0119],\n",
      "          [-0.0363,  0.0106]],\n",
      "\n",
      "         [[ 0.0395,  0.0125],\n",
      "          [-0.0051, -0.0220]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0240, -0.0151],\n",
      "          [-0.0055, -0.0426]],\n",
      "\n",
      "         [[-0.0004, -0.0418],\n",
      "          [ 0.0216,  0.0246]],\n",
      "\n",
      "         [[ 0.0011,  0.0433],\n",
      "          [ 0.0194,  0.0344]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0078, -0.0138],\n",
      "          [ 0.0184, -0.0358]],\n",
      "\n",
      "         [[ 0.0423,  0.0237],\n",
      "          [ 0.0299, -0.0266]],\n",
      "\n",
      "         [[ 0.0290,  0.0166],\n",
      "          [-0.0072, -0.0188]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0085,  0.0122],\n",
      "          [-0.0188,  0.0085]],\n",
      "\n",
      "         [[-0.0236,  0.0144],\n",
      "          [ 0.0070, -0.0365]],\n",
      "\n",
      "         [[-0.0307, -0.0293],\n",
      "          [ 0.0370, -0.0176]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0025, -0.0127],\n",
      "          [-0.0321,  0.0191]],\n",
      "\n",
      "         [[-0.0090, -0.0388],\n",
      "          [-0.0300,  0.0211]],\n",
      "\n",
      "         [[-0.0135,  0.0135],\n",
      "          [-0.0338, -0.0217]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0299,  0.0098],\n",
      "          [-0.0364, -0.0074]],\n",
      "\n",
      "         [[-0.0302, -0.0187],\n",
      "          [-0.0255, -0.0277]],\n",
      "\n",
      "         [[ 0.0244, -0.0378],\n",
      "          [-0.0112, -0.0172]]],\n",
      "\n",
      "\n",
      "        [[[-0.0416, -0.0178],\n",
      "          [ 0.0391,  0.0432]],\n",
      "\n",
      "         [[ 0.0007, -0.0170],\n",
      "          [-0.0016,  0.0026]],\n",
      "\n",
      "         [[ 0.0234, -0.0053],\n",
      "          [ 0.0251,  0.0161]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0282,  0.0077],\n",
      "          [ 0.0296, -0.0051]],\n",
      "\n",
      "         [[ 0.0077,  0.0207],\n",
      "          [-0.0421, -0.0184]],\n",
      "\n",
      "         [[-0.0414, -0.0162],\n",
      "          [-0.0109,  0.0032]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0011,  0.0441],\n",
      "          [-0.0299, -0.0038]],\n",
      "\n",
      "         [[-0.0237,  0.0282],\n",
      "          [ 0.0282,  0.0097]],\n",
      "\n",
      "         [[ 0.0231, -0.0342],\n",
      "          [ 0.0217,  0.0092]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0357,  0.0220],\n",
      "          [ 0.0123, -0.0207]],\n",
      "\n",
      "         [[-0.0080,  0.0386],\n",
      "          [-0.0289,  0.0302]],\n",
      "\n",
      "         [[ 0.0071, -0.0296],\n",
      "          [-0.0059, -0.0075]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0053,  0.0042, -0.0351, -0.0322, -0.0351,  0.0248, -0.0257, -0.0175,\n",
      "         0.0237, -0.0288, -0.0006,  0.0083, -0.0310,  0.0285, -0.0106, -0.0136,\n",
      "         0.0139, -0.0265,  0.0384, -0.0278, -0.0225,  0.0115,  0.0416,  0.0014,\n",
      "         0.0393,  0.0022, -0.0244, -0.0092, -0.0350,  0.0071, -0.0235, -0.0384,\n",
      "        -0.0179, -0.0403,  0.0375,  0.0306,  0.0110,  0.0231, -0.0406, -0.0041,\n",
      "        -0.0293,  0.0389, -0.0162, -0.0257,  0.0163, -0.0045,  0.0110,  0.0387,\n",
      "         0.0398,  0.0004,  0.0318, -0.0330, -0.0202, -0.0064, -0.0167, -0.0175,\n",
      "        -0.0116, -0.0369, -0.0314, -0.0389,  0.0347,  0.0219,  0.0027,  0.0317,\n",
      "         0.0030, -0.0196, -0.0263, -0.0128, -0.0198,  0.0391,  0.0033,  0.0251,\n",
      "         0.0367, -0.0179, -0.0308, -0.0437,  0.0334, -0.0112,  0.0340, -0.0090,\n",
      "         0.0430, -0.0180, -0.0365, -0.0082, -0.0437, -0.0155, -0.0439,  0.0434,\n",
      "        -0.0138,  0.0310,  0.0224,  0.0149, -0.0401,  0.0376,  0.0056,  0.0309,\n",
      "        -0.0388,  0.0374,  0.0182,  0.0034, -0.0178,  0.0414, -0.0111,  0.0096,\n",
      "         0.0124, -0.0285, -0.0245,  0.0235, -0.0023, -0.0024, -0.0130,  0.0175,\n",
      "         0.0054,  0.0417, -0.0206, -0.0031, -0.0061,  0.0398,  0.0176, -0.0223,\n",
      "         0.0173, -0.0029,  0.0171,  0.0105, -0.0408, -0.0052, -0.0178,  0.0087],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 1.2640e-02, -2.1915e-03,  1.7188e-02],\n",
      "          [ 1.2542e-02, -1.5579e-02,  1.0964e-02],\n",
      "          [ 1.1246e-02,  1.7827e-02, -1.4017e-02]],\n",
      "\n",
      "         [[ 1.5431e-02, -1.3051e-02,  7.7003e-03],\n",
      "          [-1.4944e-02, -1.9851e-04,  1.0986e-03],\n",
      "          [-1.5786e-03,  7.4133e-03, -2.3105e-03]],\n",
      "\n",
      "         [[-1.7647e-02, -1.8411e-02, -1.4554e-03],\n",
      "          [ 9.9135e-03,  3.5042e-03, -1.3727e-03],\n",
      "          [ 1.1845e-02,  2.0556e-02, -1.9880e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.5722e-02,  6.2620e-03,  3.9291e-04],\n",
      "          [ 1.0191e-02,  1.4883e-02, -4.7044e-03],\n",
      "          [ 8.0424e-03, -1.0149e-02,  1.0774e-02]],\n",
      "\n",
      "         [[-3.2781e-03, -1.7261e-02,  4.9180e-03],\n",
      "          [ 1.3095e-02,  1.4463e-02, -1.4242e-02],\n",
      "          [-1.5009e-02,  1.1842e-02, -7.3214e-03]],\n",
      "\n",
      "         [[ 9.6787e-03,  6.2356e-03,  1.6423e-02],\n",
      "          [-1.6862e-02, -1.6069e-02,  9.3601e-03],\n",
      "          [ 1.2557e-02, -1.0946e-02,  2.0063e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.2397e-02,  1.9278e-02, -1.7019e-02],\n",
      "          [ 7.3917e-03,  1.9379e-02,  1.6431e-02],\n",
      "          [ 1.5317e-02, -2.6249e-03,  2.5537e-03]],\n",
      "\n",
      "         [[ 1.7514e-02, -5.7972e-03, -6.0403e-03],\n",
      "          [ 3.2043e-03, -1.6701e-02, -1.3711e-02],\n",
      "          [ 1.5739e-02,  8.9730e-03, -7.7440e-03]],\n",
      "\n",
      "         [[-2.2371e-03, -1.7627e-02, -8.7612e-03],\n",
      "          [ 3.1876e-03, -9.2287e-03,  1.1893e-02],\n",
      "          [-1.6051e-02, -1.1791e-02, -2.3895e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 9.4577e-03, -5.2305e-03, -1.1308e-02],\n",
      "          [ 5.4843e-03, -1.7927e-02, -1.6802e-02],\n",
      "          [-7.6336e-03,  4.3646e-03, -1.6583e-02]],\n",
      "\n",
      "         [[-1.3507e-03, -1.7997e-02, -1.1758e-02],\n",
      "          [ 6.5979e-03, -1.1347e-02, -2.0802e-02],\n",
      "          [-4.1324e-04, -1.1744e-02, -1.4779e-02]],\n",
      "\n",
      "         [[-2.0390e-02,  6.1759e-03,  1.7233e-03],\n",
      "          [ 1.2669e-03,  6.7790e-03, -1.6457e-02],\n",
      "          [ 1.4538e-02,  1.1346e-02, -1.9874e-02]]],\n",
      "\n",
      "\n",
      "        [[[-6.0020e-03, -1.1418e-02,  5.1337e-03],\n",
      "          [ 1.6784e-02,  6.2914e-03, -1.8530e-02],\n",
      "          [-6.2650e-03,  1.3067e-03, -3.3467e-04]],\n",
      "\n",
      "         [[-1.2212e-02,  6.6287e-03, -8.0457e-03],\n",
      "          [ 2.0157e-02,  3.9556e-03, -1.2341e-02],\n",
      "          [-6.2562e-03,  1.6556e-02, -9.4582e-03]],\n",
      "\n",
      "         [[ 1.7019e-02,  3.2468e-03, -1.2457e-02],\n",
      "          [ 2.0302e-02,  1.9684e-02, -2.0015e-02],\n",
      "          [-1.5342e-02, -1.8977e-02, -6.2731e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 9.3962e-03,  6.5348e-03, -7.7875e-03],\n",
      "          [-1.0217e-02, -1.0241e-02,  1.9369e-03],\n",
      "          [ 1.1746e-03, -7.0149e-03, -1.3993e-02]],\n",
      "\n",
      "         [[-1.7284e-02, -1.9098e-02, -9.2603e-03],\n",
      "          [-1.7052e-02, -5.2570e-03,  1.1035e-02],\n",
      "          [ 1.6971e-02,  1.7869e-02, -7.6445e-03]],\n",
      "\n",
      "         [[ 4.9672e-04,  1.5319e-02, -5.5209e-03],\n",
      "          [-1.4299e-02,  1.2419e-02,  7.1373e-03],\n",
      "          [ 1.8436e-02,  1.6605e-02,  1.3237e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 1.2172e-02,  1.6914e-02, -1.9420e-02],\n",
      "          [-6.2328e-03, -1.8069e-02, -1.2610e-02],\n",
      "          [ 6.4868e-03,  1.3772e-02,  1.7145e-02]],\n",
      "\n",
      "         [[-2.0792e-02,  3.3758e-03,  1.5571e-03],\n",
      "          [-6.2633e-03, -1.6000e-03,  1.7164e-02],\n",
      "          [ 8.5905e-04,  1.4273e-02,  1.5489e-02]],\n",
      "\n",
      "         [[ 2.0313e-02,  1.1383e-03,  1.9556e-02],\n",
      "          [ 1.3889e-02, -2.8201e-03, -9.0981e-03],\n",
      "          [ 7.2360e-03, -6.7604e-03, -1.1163e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.4539e-03,  5.0239e-03, -1.4838e-02],\n",
      "          [-1.7995e-02, -1.9219e-02, -5.3565e-03],\n",
      "          [-1.6649e-02, -5.2772e-03, -1.3831e-03]],\n",
      "\n",
      "         [[-1.1185e-02,  1.9730e-02, -1.7099e-02],\n",
      "          [-4.7480e-03,  1.5624e-02,  9.6766e-03],\n",
      "          [ 4.8410e-03,  1.2034e-02,  9.1864e-03]],\n",
      "\n",
      "         [[ 8.1133e-03,  9.9165e-03,  2.8632e-03],\n",
      "          [ 1.6519e-02, -1.9126e-02, -5.5333e-04],\n",
      "          [-1.8806e-02, -1.2823e-02, -5.2622e-03]]],\n",
      "\n",
      "\n",
      "        [[[-3.8152e-03,  1.9523e-03, -4.8059e-03],\n",
      "          [ 2.2528e-03,  2.0495e-02, -1.8989e-04],\n",
      "          [-4.6572e-03, -1.7304e-02,  4.8654e-03]],\n",
      "\n",
      "         [[-1.0100e-02,  3.6735e-03,  8.4194e-03],\n",
      "          [-1.1315e-02, -7.7999e-03, -1.7805e-02],\n",
      "          [ 1.0374e-03,  1.9116e-02,  2.0605e-02]],\n",
      "\n",
      "         [[-4.6083e-03, -1.9553e-02, -2.0002e-02],\n",
      "          [ 9.9371e-03, -1.7744e-02, -4.8333e-04],\n",
      "          [-7.6595e-03, -1.5867e-02,  1.2149e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-9.3744e-03,  1.3734e-02,  1.9485e-03],\n",
      "          [-9.9295e-03,  1.8665e-02,  1.5414e-02],\n",
      "          [ 1.4731e-02,  1.9906e-02, -2.0146e-05]],\n",
      "\n",
      "         [[-8.3470e-03,  2.6297e-04,  2.1577e-03],\n",
      "          [-3.1689e-03,  1.2168e-02, -6.5469e-03],\n",
      "          [ 2.5340e-03,  8.6751e-03,  4.4873e-03]],\n",
      "\n",
      "         [[ 1.9476e-03,  1.7366e-02, -1.2943e-02],\n",
      "          [-3.9939e-03, -9.0037e-03,  7.4718e-03],\n",
      "          [-2.0466e-02, -9.4574e-03,  2.0011e-02]]],\n",
      "\n",
      "\n",
      "        [[[-4.9915e-03, -3.2914e-03, -1.1300e-02],\n",
      "          [ 1.9117e-03,  9.1847e-03, -5.8699e-03],\n",
      "          [-1.0882e-02,  1.2571e-02, -5.8500e-03]],\n",
      "\n",
      "         [[-1.7153e-02,  9.9024e-03, -1.8799e-02],\n",
      "          [ 1.3546e-02,  1.0815e-03,  2.0806e-02],\n",
      "          [-2.3965e-03, -8.0827e-03, -1.2162e-03]],\n",
      "\n",
      "         [[ 8.2307e-03, -1.7256e-03,  1.1687e-02],\n",
      "          [ 1.9015e-02, -1.1654e-02, -1.1274e-02],\n",
      "          [ 1.6741e-02,  8.3025e-03, -1.6923e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.0820e-02, -1.6838e-02, -1.6239e-02],\n",
      "          [-1.5770e-02,  3.0094e-03, -1.8641e-02],\n",
      "          [ 2.1108e-03,  1.4068e-03,  1.3723e-02]],\n",
      "\n",
      "         [[ 2.0326e-02, -3.1913e-04,  1.5316e-02],\n",
      "          [-1.5227e-02,  2.9785e-03, -1.8674e-02],\n",
      "          [-9.1877e-03, -9.0632e-03, -6.5137e-03]],\n",
      "\n",
      "         [[ 8.8713e-03,  1.1387e-02,  1.9671e-02],\n",
      "          [-9.0824e-03,  5.8002e-03, -1.3903e-03],\n",
      "          [ 2.0499e-02, -1.4459e-02, -1.0748e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0098, -0.0100, -0.0107,  0.0003,  0.0168,  0.0025, -0.0051,  0.0129,\n",
      "        -0.0037, -0.0070,  0.0189,  0.0114,  0.0104, -0.0195,  0.0201,  0.0132,\n",
      "         0.0102,  0.0039, -0.0190,  0.0132,  0.0139, -0.0002,  0.0208,  0.0126,\n",
      "         0.0179, -0.0121, -0.0122, -0.0087, -0.0090,  0.0096,  0.0095, -0.0200,\n",
      "        -0.0189, -0.0141, -0.0068, -0.0011,  0.0203,  0.0040,  0.0131, -0.0155,\n",
      "        -0.0087, -0.0193, -0.0160, -0.0010, -0.0073,  0.0123, -0.0160,  0.0054,\n",
      "        -0.0130,  0.0088,  0.0055, -0.0125, -0.0028,  0.0033,  0.0133,  0.0035,\n",
      "        -0.0183, -0.0060, -0.0009,  0.0048,  0.0092,  0.0155, -0.0117,  0.0055,\n",
      "         0.0060,  0.0070,  0.0045,  0.0207,  0.0156, -0.0051,  0.0153,  0.0108,\n",
      "         0.0049, -0.0041, -0.0164,  0.0096, -0.0081, -0.0083,  0.0009, -0.0095,\n",
      "        -0.0011, -0.0010,  0.0103,  0.0170, -0.0134, -0.0108, -0.0096,  0.0062,\n",
      "        -0.0048, -0.0082, -0.0180,  0.0020, -0.0202,  0.0079, -0.0044, -0.0021,\n",
      "         0.0068, -0.0003, -0.0134, -0.0026, -0.0191,  0.0093, -0.0103,  0.0041,\n",
      "        -0.0108, -0.0203, -0.0099, -0.0046,  0.0102,  0.0084,  0.0121, -0.0023,\n",
      "         0.0141,  0.0162, -0.0129, -0.0007,  0.0153, -0.0200,  0.0177, -0.0068,\n",
      "        -0.0038,  0.0068, -0.0171, -0.0131,  0.0131,  0.0080, -0.0199,  0.0184],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[-8.6313e-03,  1.1455e-02,  3.6405e-03],\n",
      "          [ 2.5593e-02, -9.7513e-03,  2.7075e-02],\n",
      "          [-1.1044e-02, -1.2598e-03,  1.9498e-02]],\n",
      "\n",
      "         [[ 2.5245e-02,  1.0605e-02,  2.9085e-02],\n",
      "          [-1.6235e-03, -1.4349e-02, -1.0994e-02],\n",
      "          [-2.9294e-02, -4.1370e-03,  1.4614e-02]],\n",
      "\n",
      "         [[-3.7021e-03,  2.7281e-02,  7.8764e-03],\n",
      "          [ 2.7815e-02, -2.4354e-02, -5.2608e-04],\n",
      "          [ 7.8362e-03, -1.3469e-02, -7.3430e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.4674e-03, -3.8871e-03,  1.3358e-02],\n",
      "          [ 2.5715e-02,  1.4597e-02, -2.5583e-02],\n",
      "          [-1.2567e-02, -9.9244e-03, -1.4660e-02]],\n",
      "\n",
      "         [[-1.3472e-02, -1.8386e-02, -1.2343e-02],\n",
      "          [ 1.3038e-02,  1.0176e-02,  9.8731e-04],\n",
      "          [-4.3395e-03,  5.3499e-04, -2.8389e-02]],\n",
      "\n",
      "         [[ 2.5399e-02, -1.6684e-02, -1.8792e-02],\n",
      "          [-1.4626e-02, -1.4406e-02,  2.5944e-02],\n",
      "          [ 3.3774e-03, -6.5428e-03,  2.6293e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 9.3904e-03, -1.2540e-02,  2.5833e-02],\n",
      "          [-1.5834e-02,  1.4713e-02, -2.0441e-02],\n",
      "          [-2.1763e-02,  9.2545e-03,  1.8848e-03]],\n",
      "\n",
      "         [[ 2.5297e-02, -2.5882e-02, -1.8211e-02],\n",
      "          [-2.7352e-02,  2.8519e-02, -1.0950e-02],\n",
      "          [-2.9447e-02,  1.6454e-02, -1.5707e-02]],\n",
      "\n",
      "         [[ 2.1074e-02,  2.3894e-03,  1.2490e-02],\n",
      "          [-2.4881e-02,  5.4950e-03, -7.9109e-03],\n",
      "          [-1.3391e-03, -1.4216e-02, -2.8442e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.8201e-02, -3.6644e-03, -1.4659e-02],\n",
      "          [ 1.8189e-02, -1.3227e-02,  1.7996e-02],\n",
      "          [-1.0904e-02,  4.0799e-03, -1.7704e-02]],\n",
      "\n",
      "         [[-2.9037e-02,  2.0969e-02, -1.2145e-02],\n",
      "          [-2.1198e-04, -1.1024e-02, -1.3604e-02],\n",
      "          [-2.7408e-02,  1.4329e-03, -1.7707e-02]],\n",
      "\n",
      "         [[ 1.6943e-02, -2.1856e-02,  1.2080e-03],\n",
      "          [ 1.6482e-02,  2.8823e-02, -9.7040e-03],\n",
      "          [-2.2533e-02,  2.3579e-02, -5.8057e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 9.1743e-03,  1.7996e-02,  2.7514e-02],\n",
      "          [-1.9944e-02, -7.2512e-03, -2.0066e-02],\n",
      "          [ 2.4561e-02, -2.7964e-02,  2.4605e-02]],\n",
      "\n",
      "         [[-1.4922e-02,  1.6901e-02,  7.7221e-03],\n",
      "          [-1.1999e-02, -2.5163e-02, -1.5147e-02],\n",
      "          [-2.7683e-02, -1.8227e-02, -2.1355e-02]],\n",
      "\n",
      "         [[-3.3982e-03, -2.2807e-02, -4.6030e-03],\n",
      "          [ 2.4709e-02,  5.5262e-03,  3.0190e-03],\n",
      "          [-5.5325e-03, -6.9517e-03,  1.5988e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.7164e-03,  9.7830e-03,  1.8910e-03],\n",
      "          [ 2.2451e-02,  1.6814e-02, -1.8216e-02],\n",
      "          [-2.1959e-02,  1.3540e-02, -2.2843e-02]],\n",
      "\n",
      "         [[ 2.3715e-02,  2.5546e-02,  2.0355e-02],\n",
      "          [ 1.5055e-02,  2.9316e-02,  2.8279e-02],\n",
      "          [-6.4429e-03, -2.7588e-02, -2.4207e-02]],\n",
      "\n",
      "         [[ 5.8944e-03,  1.0679e-02, -1.7740e-03],\n",
      "          [-2.3916e-02, -1.5107e-02,  2.4468e-02],\n",
      "          [-8.8278e-03, -7.4833e-03, -2.7696e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-1.0905e-02,  2.5843e-02, -2.6286e-02],\n",
      "          [ 1.2990e-02, -2.5844e-02,  2.8847e-04],\n",
      "          [ 8.2675e-03, -8.8426e-03, -2.9571e-03]],\n",
      "\n",
      "         [[-5.4672e-03,  8.8351e-03, -6.0844e-03],\n",
      "          [ 6.8239e-03, -1.9237e-02, -7.1259e-03],\n",
      "          [ 6.9891e-03, -2.6062e-02,  9.7001e-03]],\n",
      "\n",
      "         [[ 2.3280e-02, -1.2656e-02, -2.6727e-02],\n",
      "          [-1.5721e-03,  1.9625e-02, -1.0165e-02],\n",
      "          [ 2.2177e-02,  1.7184e-02,  1.1625e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.5591e-04, -9.9784e-03, -4.6973e-03],\n",
      "          [ 2.2772e-02,  1.4839e-02,  2.5862e-02],\n",
      "          [ 2.3100e-02, -2.7770e-02,  5.5251e-03]],\n",
      "\n",
      "         [[ 5.2731e-03,  2.6661e-02,  2.3003e-02],\n",
      "          [-5.9686e-04, -4.3869e-03,  1.7322e-02],\n",
      "          [-1.4928e-02,  2.2443e-02,  2.7664e-04]],\n",
      "\n",
      "         [[ 1.0615e-02,  2.7234e-02, -2.0187e-02],\n",
      "          [-7.7005e-03, -9.7988e-03, -1.1727e-03],\n",
      "          [-3.7911e-03, -1.0968e-02,  1.8469e-02]]],\n",
      "\n",
      "\n",
      "        [[[-6.0123e-03,  1.1322e-02, -3.9693e-03],\n",
      "          [ 1.0170e-02,  2.6273e-02,  7.9902e-03],\n",
      "          [-1.5706e-02,  5.1119e-03,  7.9398e-03]],\n",
      "\n",
      "         [[-1.1413e-02,  9.7926e-04, -8.6094e-03],\n",
      "          [ 2.4389e-02,  2.1206e-02, -3.5221e-03],\n",
      "          [ 2.9194e-02, -1.4903e-02,  1.1942e-02]],\n",
      "\n",
      "         [[-7.1337e-03,  1.0558e-02,  1.4971e-02],\n",
      "          [ 1.3918e-02,  5.4529e-03,  8.5255e-03],\n",
      "          [-1.6591e-02,  2.4247e-02, -2.2008e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3891e-02,  1.1869e-02, -8.9565e-03],\n",
      "          [ 2.2808e-02, -1.3733e-02,  2.3007e-02],\n",
      "          [ 2.8560e-02, -2.6706e-02, -2.2270e-02]],\n",
      "\n",
      "         [[ 1.5838e-02, -1.9267e-02,  1.1810e-02],\n",
      "          [ 1.9753e-02, -9.4351e-04, -5.0442e-03],\n",
      "          [-1.8653e-02, -2.1323e-02,  1.1186e-02]],\n",
      "\n",
      "         [[-2.3218e-02, -8.9393e-03, -2.6377e-02],\n",
      "          [-7.2854e-05, -2.7315e-02,  1.9636e-02],\n",
      "          [ 2.9314e-02,  2.8927e-02,  1.1923e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 2.3791e-03, -3.6831e-03,  7.3038e-03],\n",
      "          [ 2.4996e-03,  1.8214e-02, -2.1084e-02],\n",
      "          [ 9.7005e-03, -2.5980e-02,  1.8213e-02]],\n",
      "\n",
      "         [[-1.6984e-02, -2.9268e-02,  2.5090e-02],\n",
      "          [-2.0816e-02, -2.6012e-02, -2.5185e-02],\n",
      "          [-7.0924e-03,  2.0428e-02,  2.8359e-02]],\n",
      "\n",
      "         [[-2.9004e-02,  1.0341e-03,  6.2202e-04],\n",
      "          [-1.8219e-03, -2.8117e-02,  2.8316e-02],\n",
      "          [-1.6937e-02,  1.8259e-02, -2.6702e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0833e-02,  2.0371e-02,  1.5173e-02],\n",
      "          [ 1.2962e-02, -1.4547e-02, -2.5470e-02],\n",
      "          [-1.8941e-02,  2.0905e-02,  2.9190e-02]],\n",
      "\n",
      "         [[-2.5991e-02,  2.3302e-02,  1.0995e-02],\n",
      "          [-5.9812e-03,  1.5129e-02, -2.8796e-02],\n",
      "          [ 2.8423e-02, -8.9247e-03, -1.3868e-02]],\n",
      "\n",
      "         [[ 4.5927e-03,  1.4972e-02,  1.1033e-02],\n",
      "          [ 1.9025e-02, -2.4601e-02,  1.7821e-02],\n",
      "          [-1.5745e-03,  1.1778e-02, -8.5690e-03]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0169,  0.0091, -0.0123,  0.0279,  0.0234, -0.0006, -0.0073,  0.0010,\n",
      "        -0.0225,  0.0200,  0.0088,  0.0047,  0.0059,  0.0262,  0.0211,  0.0253,\n",
      "         0.0182,  0.0224, -0.0049,  0.0288, -0.0271,  0.0293, -0.0137,  0.0051,\n",
      "         0.0242,  0.0241, -0.0261,  0.0190,  0.0263,  0.0160, -0.0246,  0.0175,\n",
      "         0.0006,  0.0106,  0.0221,  0.0111, -0.0172,  0.0218, -0.0095,  0.0222,\n",
      "         0.0032, -0.0240, -0.0210,  0.0108,  0.0270,  0.0183,  0.0075,  0.0078,\n",
      "         0.0048,  0.0108, -0.0149,  0.0042,  0.0200, -0.0265,  0.0055, -0.0088,\n",
      "        -0.0281, -0.0055, -0.0025,  0.0203, -0.0154,  0.0159, -0.0193,  0.0182,\n",
      "         0.0060,  0.0224,  0.0086,  0.0208, -0.0028,  0.0047, -0.0163,  0.0144,\n",
      "        -0.0117,  0.0263,  0.0283,  0.0203,  0.0269, -0.0171, -0.0108, -0.0267,\n",
      "         0.0178, -0.0175,  0.0043,  0.0206, -0.0155,  0.0011, -0.0250,  0.0021,\n",
      "        -0.0154,  0.0180, -0.0166, -0.0116, -0.0052,  0.0249, -0.0230,  0.0256,\n",
      "        -0.0124, -0.0105,  0.0205,  0.0253,  0.0188,  0.0257, -0.0227, -0.0207,\n",
      "        -0.0022, -0.0269,  0.0091,  0.0078, -0.0056,  0.0152,  0.0096, -0.0198,\n",
      "        -0.0286,  0.0138, -0.0281,  0.0248,  0.0068, -0.0107, -0.0202,  0.0114,\n",
      "         0.0198,  0.0005,  0.0101, -0.0122,  0.0077,  0.0091, -0.0098,  0.0247],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 1.4065e-02,  1.7907e-02, -2.6689e-02],\n",
      "          [-5.8231e-03,  1.1437e-02,  2.7633e-02],\n",
      "          [-2.4143e-02,  1.1062e-02,  1.3011e-02]],\n",
      "\n",
      "         [[ 1.2000e-02,  1.8452e-02,  1.4196e-02],\n",
      "          [ 4.3310e-04, -1.6960e-02,  2.0644e-02],\n",
      "          [ 6.3978e-03,  1.2136e-02,  2.2777e-02]],\n",
      "\n",
      "         [[-2.0661e-02, -2.3903e-02, -4.4026e-04],\n",
      "          [ 4.1877e-03,  2.2658e-02, -1.5782e-02],\n",
      "          [-2.9140e-02,  2.0354e-02,  1.4776e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.5850e-02,  2.3161e-02, -1.0054e-02],\n",
      "          [-1.1610e-02,  7.8492e-03,  1.6996e-02],\n",
      "          [-1.8497e-02,  2.0575e-02, -1.9038e-02]],\n",
      "\n",
      "         [[ 1.8621e-02,  2.5721e-02, -3.4254e-03],\n",
      "          [-2.9255e-02, -2.5238e-02, -1.8129e-02],\n",
      "          [ 1.4590e-02,  4.7497e-03, -5.8459e-03]],\n",
      "\n",
      "         [[-2.8822e-02,  1.6350e-03,  1.5932e-02],\n",
      "          [ 3.4093e-04, -1.0545e-02, -1.1127e-02],\n",
      "          [ 1.8776e-02,  1.4700e-02,  5.7412e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.1251e-02,  1.9143e-02, -7.4781e-03],\n",
      "          [-1.3530e-02,  2.0530e-02,  1.5557e-02],\n",
      "          [ 2.7268e-02, -1.0570e-02, -2.7065e-02]],\n",
      "\n",
      "         [[-3.0399e-03,  2.0215e-03,  7.4984e-03],\n",
      "          [ 1.0417e-02, -2.0356e-02, -2.3776e-02],\n",
      "          [-1.8618e-02, -7.7558e-03, -2.3724e-02]],\n",
      "\n",
      "         [[ 5.5976e-03, -1.4858e-02, -2.9079e-02],\n",
      "          [-1.8397e-02,  2.6262e-02,  1.7437e-02],\n",
      "          [ 2.1281e-02, -3.8199e-03, -9.6842e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.7782e-02, -2.3770e-02,  4.9174e-07],\n",
      "          [ 5.0914e-03,  2.1335e-02, -2.6899e-02],\n",
      "          [ 1.5013e-02, -7.0167e-03,  1.2033e-03]],\n",
      "\n",
      "         [[-2.3167e-02, -2.3137e-02,  1.7998e-02],\n",
      "          [ 2.2171e-02,  2.6751e-02, -1.7431e-02],\n",
      "          [-3.7996e-03,  2.9113e-02, -1.5813e-02]],\n",
      "\n",
      "         [[ 1.5045e-02, -1.1430e-02,  1.0861e-02],\n",
      "          [-2.4172e-02,  2.8771e-02, -1.2580e-02],\n",
      "          [ 2.2295e-02, -3.4552e-06,  9.1683e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.0494e-03, -2.8786e-02,  2.7585e-02],\n",
      "          [-1.5848e-02,  9.1202e-04, -9.9810e-03],\n",
      "          [-4.0793e-03,  7.2395e-04,  8.9576e-05]],\n",
      "\n",
      "         [[ 2.5405e-02,  1.0445e-02,  2.5057e-02],\n",
      "          [ 2.2582e-02, -9.7068e-03, -2.0779e-02],\n",
      "          [-1.9474e-02, -5.5837e-03, -7.0611e-03]],\n",
      "\n",
      "         [[-3.2341e-03, -1.4575e-02, -9.1163e-03],\n",
      "          [-1.3847e-02, -2.7744e-02,  1.1373e-02],\n",
      "          [ 1.9934e-02,  7.9044e-03,  2.9236e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.6353e-02, -2.6983e-02,  2.5487e-02],\n",
      "          [ 2.8813e-02,  1.3803e-02,  2.3307e-03],\n",
      "          [-1.2862e-02, -4.1364e-03, -1.0290e-02]],\n",
      "\n",
      "         [[ 2.1628e-02,  2.5308e-02, -4.1193e-03],\n",
      "          [ 2.7189e-02,  2.3387e-02, -7.6601e-03],\n",
      "          [-3.8342e-03, -1.3665e-02, -3.0583e-03]],\n",
      "\n",
      "         [[-1.3924e-02,  1.1734e-02, -1.3537e-02],\n",
      "          [ 6.1301e-03, -1.5876e-02, -3.9268e-03],\n",
      "          [ 2.2732e-02,  5.4827e-03, -2.5151e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 1.6216e-02,  2.8398e-02,  1.9947e-02],\n",
      "          [ 2.6879e-02,  3.5103e-04, -2.4994e-02],\n",
      "          [ 1.1948e-02, -8.6125e-03,  5.5272e-03]],\n",
      "\n",
      "         [[-7.7437e-03,  1.7366e-02, -5.1026e-03],\n",
      "          [-2.0286e-02,  1.4074e-02, -6.0664e-03],\n",
      "          [-7.7515e-03, -1.8247e-02, -1.7408e-02]],\n",
      "\n",
      "         [[-3.3959e-04, -1.4136e-02, -2.4884e-02],\n",
      "          [ 1.5745e-02, -1.0532e-02,  4.8824e-03],\n",
      "          [-2.2996e-02,  1.2070e-02, -1.2602e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.0789e-03,  2.0548e-03, -8.9419e-03],\n",
      "          [ 2.3498e-02,  1.9569e-02,  1.2832e-02],\n",
      "          [ 2.1100e-02,  5.7782e-03, -2.0029e-02]],\n",
      "\n",
      "         [[ 3.2350e-03, -1.4895e-02, -1.7264e-02],\n",
      "          [-8.7740e-03,  7.7103e-03, -2.0550e-02],\n",
      "          [-1.0045e-02,  2.0806e-02, -1.3339e-02]],\n",
      "\n",
      "         [[ 6.8692e-03, -6.7611e-03, -1.4363e-02],\n",
      "          [-2.0239e-02, -1.6871e-02, -1.1846e-02],\n",
      "          [-1.6400e-02, -1.5307e-02,  2.2440e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 2.8315e-02,  2.2918e-02, -4.1623e-03],\n",
      "          [ 4.1025e-03, -2.1385e-02,  8.5925e-03],\n",
      "          [ 1.2446e-02,  1.0793e-02, -1.0289e-02]],\n",
      "\n",
      "         [[ 2.5099e-02, -2.2349e-02, -1.7928e-02],\n",
      "          [-5.9927e-03,  2.3942e-02, -1.1109e-02],\n",
      "          [-1.4045e-02, -3.4779e-03, -6.7015e-03]],\n",
      "\n",
      "         [[-1.6327e-02,  2.4734e-02,  1.5433e-02],\n",
      "          [-2.4826e-02,  1.5738e-02, -1.3577e-02],\n",
      "          [ 1.9807e-02,  2.0359e-02,  2.0564e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.2685e-02, -8.5915e-03,  2.4279e-02],\n",
      "          [-5.1373e-04,  2.0138e-02,  1.4853e-02],\n",
      "          [-2.5057e-02, -1.8839e-02, -3.7328e-03]],\n",
      "\n",
      "         [[ 6.1722e-03,  1.9025e-02, -1.7404e-02],\n",
      "          [ 2.6759e-02, -1.9822e-02, -2.0335e-02],\n",
      "          [ 1.0605e-02,  1.6905e-02, -1.5170e-03]],\n",
      "\n",
      "         [[ 1.6479e-02,  2.1241e-02,  1.2347e-03],\n",
      "          [ 2.9400e-02,  1.1823e-02,  1.1219e-02],\n",
      "          [-1.6176e-02,  9.2791e-03,  2.9431e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 8.3837e-03,  1.1589e-02, -2.6871e-02],\n",
      "          [-1.6438e-02,  1.0916e-02, -6.8360e-03],\n",
      "          [ 2.2467e-02,  1.7988e-02, -1.2632e-02]],\n",
      "\n",
      "         [[-2.6068e-02, -9.9274e-04, -2.1415e-02],\n",
      "          [ 4.7156e-03,  1.5342e-02,  1.0082e-02],\n",
      "          [-1.3076e-02,  1.6918e-02,  1.6302e-02]],\n",
      "\n",
      "         [[ 2.6635e-02, -1.4552e-02, -2.0115e-02],\n",
      "          [ 2.9198e-02,  1.4353e-02,  5.2442e-03],\n",
      "          [ 1.5574e-04,  2.3410e-02, -1.3443e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-8.4813e-03,  3.3033e-03,  1.6899e-02],\n",
      "          [-5.7636e-03,  1.7110e-03, -1.4991e-02],\n",
      "          [-2.0272e-02, -1.8913e-02,  1.9389e-02]],\n",
      "\n",
      "         [[ 4.0919e-03,  1.6768e-02,  9.7331e-03],\n",
      "          [-1.3381e-02, -2.4152e-02,  4.5241e-03],\n",
      "          [-1.5224e-02,  9.7120e-04, -1.5445e-02]],\n",
      "\n",
      "         [[-1.2309e-02,  2.0140e-02,  1.0962e-02],\n",
      "          [-1.9423e-03,  8.1578e-03,  1.7285e-04],\n",
      "          [-1.1863e-02,  1.7397e-02, -1.5515e-02]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0166,  0.0004, -0.0221,  0.0256,  0.0177,  0.0113, -0.0218, -0.0232,\n",
      "         0.0027, -0.0059,  0.0196, -0.0064, -0.0106, -0.0107, -0.0157, -0.0051,\n",
      "         0.0077, -0.0097, -0.0266, -0.0154,  0.0262,  0.0111, -0.0007,  0.0155,\n",
      "         0.0007,  0.0043, -0.0017,  0.0287,  0.0082, -0.0059,  0.0126, -0.0032,\n",
      "        -0.0127, -0.0012, -0.0003, -0.0281,  0.0132, -0.0121,  0.0264, -0.0151,\n",
      "         0.0217,  0.0142, -0.0097,  0.0070,  0.0115,  0.0279, -0.0250,  0.0073,\n",
      "        -0.0106,  0.0134,  0.0080,  0.0221, -0.0092,  0.0265,  0.0175,  0.0178,\n",
      "        -0.0167,  0.0228,  0.0241, -0.0268,  0.0180,  0.0105,  0.0253, -0.0117,\n",
      "         0.0058,  0.0041, -0.0028, -0.0112,  0.0043, -0.0217,  0.0239, -0.0131,\n",
      "         0.0100, -0.0157, -0.0111, -0.0225,  0.0059, -0.0179,  0.0247, -0.0266,\n",
      "        -0.0035,  0.0273,  0.0176, -0.0211, -0.0271,  0.0081, -0.0282, -0.0240,\n",
      "         0.0243,  0.0120,  0.0200,  0.0191, -0.0264,  0.0237,  0.0249, -0.0029,\n",
      "         0.0088,  0.0240,  0.0256,  0.0024, -0.0046,  0.0241, -0.0265,  0.0099,\n",
      "        -0.0165, -0.0065,  0.0057,  0.0164,  0.0048,  0.0243,  0.0277,  0.0191,\n",
      "        -0.0158,  0.0088, -0.0089, -0.0014,  0.0266, -0.0290, -0.0122,  0.0184,\n",
      "         0.0266,  0.0245, -0.0280,  0.0003,  0.0202,  0.0294,  0.0143,  0.0022],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.0035,  0.0076],\n",
      "          [-0.0092, -0.0265]],\n",
      "\n",
      "         [[-0.0562,  0.0162],\n",
      "          [-0.0054,  0.0601]],\n",
      "\n",
      "         [[-0.0051,  0.0170],\n",
      "          [-0.0170, -0.0529]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0053,  0.0012],\n",
      "          [ 0.0338,  0.0222]],\n",
      "\n",
      "         [[ 0.0317, -0.0216],\n",
      "          [-0.0063, -0.0399]],\n",
      "\n",
      "         [[-0.0476, -0.0188],\n",
      "          [-0.0530, -0.0570]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0249,  0.0014],\n",
      "          [ 0.0195,  0.0128]],\n",
      "\n",
      "         [[-0.0618, -0.0453],\n",
      "          [-0.0215,  0.0589]],\n",
      "\n",
      "         [[-0.0400, -0.0606],\n",
      "          [-0.0473,  0.0096]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0470, -0.0272],\n",
      "          [-0.0595, -0.0456]],\n",
      "\n",
      "         [[ 0.0091, -0.0089],\n",
      "          [ 0.0502,  0.0412]],\n",
      "\n",
      "         [[ 0.0605,  0.0549],\n",
      "          [ 0.0366, -0.0408]]],\n",
      "\n",
      "\n",
      "        [[[-0.0158, -0.0131],\n",
      "          [-0.0292,  0.0442]],\n",
      "\n",
      "         [[-0.0405,  0.0424],\n",
      "          [-0.0430,  0.0064]],\n",
      "\n",
      "         [[ 0.0119,  0.0418],\n",
      "          [ 0.0185, -0.0124]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0625,  0.0395],\n",
      "          [ 0.0547,  0.0508]],\n",
      "\n",
      "         [[-0.0121,  0.0602],\n",
      "          [ 0.0438, -0.0419]],\n",
      "\n",
      "         [[-0.0098, -0.0280],\n",
      "          [ 0.0527, -0.0466]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0112,  0.0553],\n",
      "          [ 0.0016, -0.0052]],\n",
      "\n",
      "         [[ 0.0367,  0.0275],\n",
      "          [ 0.0206, -0.0491]],\n",
      "\n",
      "         [[-0.0255,  0.0006],\n",
      "          [ 0.0569,  0.0552]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0227,  0.0493],\n",
      "          [ 0.0007,  0.0436]],\n",
      "\n",
      "         [[-0.0531,  0.0421],\n",
      "          [-0.0095, -0.0034]],\n",
      "\n",
      "         [[ 0.0128, -0.0050],\n",
      "          [ 0.0040, -0.0247]]],\n",
      "\n",
      "\n",
      "        [[[-0.0520, -0.0379],\n",
      "          [ 0.0214,  0.0306]],\n",
      "\n",
      "         [[ 0.0206,  0.0065],\n",
      "          [-0.0117, -0.0192]],\n",
      "\n",
      "         [[-0.0198, -0.0135],\n",
      "          [ 0.0008,  0.0398]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0350, -0.0381],\n",
      "          [ 0.0137, -0.0558]],\n",
      "\n",
      "         [[ 0.0069, -0.0491],\n",
      "          [ 0.0322,  0.0549]],\n",
      "\n",
      "         [[ 0.0031, -0.0121],\n",
      "          [-0.0305,  0.0432]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0275,  0.0151],\n",
      "          [ 0.0414,  0.0330]],\n",
      "\n",
      "         [[-0.0542,  0.0429],\n",
      "          [ 0.0279,  0.0034]],\n",
      "\n",
      "         [[-0.0351, -0.0315],\n",
      "          [-0.0364, -0.0254]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0220, -0.0061],\n",
      "          [-0.0396,  0.0158]],\n",
      "\n",
      "         [[-0.0624, -0.0266],\n",
      "          [-0.0273,  0.0323]],\n",
      "\n",
      "         [[ 0.0211, -0.0235],\n",
      "          [ 0.0266, -0.0310]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0212, -0.0211, -0.0319, -0.0560,  0.0592, -0.0355, -0.0499, -0.0253,\n",
      "         0.0274, -0.0121, -0.0287, -0.0288,  0.0081,  0.0293, -0.0526,  0.0535,\n",
      "         0.0277, -0.0276,  0.0226,  0.0256, -0.0303,  0.0063,  0.0517,  0.0199,\n",
      "         0.0312,  0.0301,  0.0389,  0.0333,  0.0209, -0.0316,  0.0044, -0.0223,\n",
      "        -0.0446,  0.0153,  0.0260,  0.0487, -0.0114, -0.0155,  0.0477,  0.0167,\n",
      "        -0.0592, -0.0272, -0.0422, -0.0415, -0.0188, -0.0550, -0.0325, -0.0344,\n",
      "         0.0433, -0.0165, -0.0061, -0.0354, -0.0331,  0.0576, -0.0071,  0.0614,\n",
      "        -0.0517,  0.0134, -0.0328, -0.0292, -0.0150, -0.0379,  0.0519, -0.0381],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 3.7982e-03,  1.6349e-02, -2.4312e-02],\n",
      "          [ 2.3912e-02,  1.5410e-02, -2.1827e-02],\n",
      "          [ 7.8426e-03,  2.1577e-02, -2.8132e-02]],\n",
      "\n",
      "         [[ 2.7198e-02,  4.0843e-03,  2.2550e-02],\n",
      "          [ 2.6023e-02,  2.3811e-02,  1.1868e-02],\n",
      "          [-2.5384e-02, -1.8150e-02, -1.2152e-02]],\n",
      "\n",
      "         [[ 1.2741e-02, -1.0164e-02,  1.8525e-02],\n",
      "          [-9.1092e-03, -1.1737e-03,  2.3371e-02],\n",
      "          [-1.8880e-02, -1.6830e-02,  1.7035e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-7.3725e-03,  2.0704e-03, -1.1639e-02],\n",
      "          [ 7.0407e-03,  1.9813e-02, -2.1618e-02],\n",
      "          [ 1.1457e-02,  1.3060e-02, -1.1325e-02]],\n",
      "\n",
      "         [[-2.9124e-02, -2.2474e-02,  9.9152e-04],\n",
      "          [ 2.8509e-02,  9.6083e-03, -7.8911e-03],\n",
      "          [ 1.5290e-03, -1.1419e-02,  2.3565e-03]],\n",
      "\n",
      "         [[-2.8394e-02,  7.0117e-03,  1.1293e-02],\n",
      "          [-6.7242e-04,  1.0491e-02, -1.0918e-02],\n",
      "          [ 8.6574e-03,  2.7582e-02,  4.5607e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 2.6722e-02, -1.7402e-02,  9.3433e-03],\n",
      "          [-1.6845e-02, -1.9044e-02, -1.1997e-02],\n",
      "          [ 2.4876e-02, -1.9962e-02, -1.5660e-02]],\n",
      "\n",
      "         [[-2.6827e-02, -1.0457e-02, -1.6751e-02],\n",
      "          [ 7.4835e-03,  2.2103e-03, -8.1846e-03],\n",
      "          [-1.3175e-02, -4.2193e-03, -1.5287e-02]],\n",
      "\n",
      "         [[ 2.7700e-02,  2.8615e-02, -4.2863e-03],\n",
      "          [-6.7235e-03,  2.0395e-02,  2.0313e-03],\n",
      "          [ 9.5481e-03,  8.6435e-03, -2.6528e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.8326e-03, -1.8535e-03,  9.5232e-03],\n",
      "          [ 1.4495e-02, -3.1559e-03,  8.2276e-03],\n",
      "          [ 1.4082e-02,  2.0959e-03, -2.4856e-02]],\n",
      "\n",
      "         [[ 1.0632e-03,  9.4531e-03, -2.1626e-02],\n",
      "          [-1.4705e-03,  2.0072e-02, -8.4519e-03],\n",
      "          [ 1.1712e-02, -2.2951e-02,  2.8786e-02]],\n",
      "\n",
      "         [[ 5.6528e-03,  2.4462e-02,  9.5010e-05],\n",
      "          [ 2.2907e-03, -2.7711e-02,  2.3340e-02],\n",
      "          [-8.9664e-03,  2.6334e-02, -2.8812e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.1312e-02,  8.2091e-03,  2.2315e-02],\n",
      "          [ 1.5756e-02, -2.5667e-02, -2.7262e-02],\n",
      "          [ 2.0657e-02,  2.6266e-02, -2.3630e-02]],\n",
      "\n",
      "         [[ 4.8508e-03, -7.6868e-03,  2.8522e-02],\n",
      "          [-2.0062e-02,  3.0272e-03, -2.7659e-02],\n",
      "          [-2.1380e-02,  7.0599e-03,  1.0048e-02]],\n",
      "\n",
      "         [[ 2.6313e-02,  2.3036e-02,  2.5005e-02],\n",
      "          [ 5.3816e-03, -2.5807e-02,  2.0149e-03],\n",
      "          [-1.9069e-03,  1.3626e-02, -7.0164e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.0779e-02, -2.9525e-03,  1.7407e-02],\n",
      "          [ 6.0290e-03,  6.5102e-03, -2.1386e-02],\n",
      "          [ 7.0639e-03,  2.7475e-02,  2.4320e-02]],\n",
      "\n",
      "         [[ 4.6585e-03,  4.5662e-03, -1.7947e-02],\n",
      "          [ 2.6395e-02, -6.6324e-03,  6.5432e-03],\n",
      "          [ 8.6650e-03,  2.3183e-02, -1.5278e-03]],\n",
      "\n",
      "         [[-2.5488e-02,  7.1753e-03,  2.0661e-03],\n",
      "          [-2.7046e-02,  4.9852e-03, -2.1699e-02],\n",
      "          [ 2.0741e-02, -1.6911e-02, -2.0675e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 5.7442e-03, -1.4080e-02, -4.1341e-03],\n",
      "          [-9.9746e-03,  2.4479e-02,  7.9780e-03],\n",
      "          [-2.8554e-06,  1.3972e-02,  2.6710e-02]],\n",
      "\n",
      "         [[ 2.9557e-03, -7.5464e-04,  1.5533e-02],\n",
      "          [ 1.1635e-02, -1.5670e-02,  2.3868e-02],\n",
      "          [-2.6371e-02, -6.1270e-03, -1.8237e-02]],\n",
      "\n",
      "         [[-2.2068e-02, -1.8063e-02, -2.6446e-03],\n",
      "          [-2.4264e-02,  2.7728e-02,  2.1021e-03],\n",
      "          [ 1.5174e-02,  4.1835e-03,  2.4904e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3785e-02, -1.1201e-02,  1.5627e-03],\n",
      "          [ 6.6865e-03, -2.3615e-02,  8.5719e-03],\n",
      "          [-5.7116e-03,  1.9056e-02,  9.3257e-03]],\n",
      "\n",
      "         [[ 8.4557e-03, -7.1741e-03,  1.5268e-02],\n",
      "          [ 1.1976e-02, -5.9440e-03, -1.0235e-02],\n",
      "          [-1.3853e-03, -1.4583e-02,  2.6298e-02]],\n",
      "\n",
      "         [[-2.3857e-02, -6.4252e-03, -2.8815e-02],\n",
      "          [-1.2030e-02,  1.7591e-02, -2.5845e-02],\n",
      "          [ 5.3552e-03,  1.4881e-02,  2.2617e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 3.2402e-03, -2.3858e-02,  9.7307e-03],\n",
      "          [ 2.7650e-02, -1.5774e-02,  2.2423e-02],\n",
      "          [-2.2656e-02, -7.0761e-03,  6.0610e-03]],\n",
      "\n",
      "         [[-2.6188e-02, -2.6218e-02, -5.9051e-03],\n",
      "          [ 2.1856e-02,  1.6728e-02,  2.3801e-02],\n",
      "          [-7.5807e-03,  2.7763e-02,  2.1130e-02]],\n",
      "\n",
      "         [[-1.4068e-02, -2.6256e-02,  1.7883e-02],\n",
      "          [-1.1666e-02, -2.6592e-02,  2.2907e-02],\n",
      "          [ 2.7638e-02,  1.6409e-03, -2.5295e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.9575e-03, -2.7865e-02,  6.6193e-03],\n",
      "          [-6.1847e-03,  3.7668e-03,  2.9397e-02],\n",
      "          [-1.2238e-02, -2.7289e-03,  1.1954e-02]],\n",
      "\n",
      "         [[ 8.5347e-03,  1.5769e-02, -4.0652e-03],\n",
      "          [ 1.7592e-02,  2.8643e-02, -2.8844e-03],\n",
      "          [-6.1642e-03, -2.5188e-02, -1.6784e-02]],\n",
      "\n",
      "         [[ 1.0055e-02, -1.6758e-02,  8.5851e-03],\n",
      "          [-8.9055e-03, -7.8200e-03, -1.2212e-02],\n",
      "          [ 2.3501e-02,  2.2949e-02, -1.9385e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.2508e-02,  1.0020e-02, -7.3741e-03],\n",
      "          [ 3.5428e-03,  5.7933e-03, -3.0144e-03],\n",
      "          [-2.6456e-02, -7.7833e-03,  1.9806e-02]],\n",
      "\n",
      "         [[-2.1587e-02,  1.2336e-02,  2.4303e-02],\n",
      "          [ 1.0924e-02, -1.6269e-02,  2.4823e-02],\n",
      "          [-8.6594e-03,  1.5335e-02,  3.0183e-03]],\n",
      "\n",
      "         [[-1.6415e-02, -5.4816e-03, -6.9125e-03],\n",
      "          [ 1.3319e-02,  2.4380e-02, -1.7895e-02],\n",
      "          [-1.9021e-02,  7.3770e-03,  2.5181e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.5626e-03, -7.7482e-03, -1.8724e-02],\n",
      "          [-2.2120e-02,  1.8523e-02,  2.4889e-02],\n",
      "          [-1.8526e-02, -5.1642e-03,  2.3763e-02]],\n",
      "\n",
      "         [[-1.8524e-02,  2.2522e-02,  6.9770e-03],\n",
      "          [-8.6729e-03,  2.5785e-02,  2.7451e-02],\n",
      "          [ 9.3367e-03,  1.9814e-02, -8.5112e-03]],\n",
      "\n",
      "         [[ 1.9849e-02,  1.8512e-02,  2.5299e-03],\n",
      "          [ 4.8637e-03,  1.4457e-02, -9.4033e-03],\n",
      "          [-1.2413e-02,  1.1831e-02, -1.9074e-03]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0078, -0.0048, -0.0241,  0.0102,  0.0141,  0.0124,  0.0073,  0.0287,\n",
      "        -0.0201, -0.0216, -0.0253,  0.0194,  0.0259, -0.0209, -0.0163,  0.0030,\n",
      "         0.0252, -0.0081, -0.0017, -0.0065,  0.0236, -0.0176, -0.0148,  0.0223,\n",
      "         0.0101, -0.0282, -0.0086,  0.0048, -0.0294, -0.0164, -0.0008,  0.0267,\n",
      "         0.0204, -0.0275,  0.0168, -0.0148,  0.0094,  0.0147,  0.0268,  0.0106,\n",
      "        -0.0200, -0.0131, -0.0027, -0.0128, -0.0155, -0.0189, -0.0029,  0.0180,\n",
      "         0.0163, -0.0211, -0.0119,  0.0280, -0.0283, -0.0164,  0.0098, -0.0247,\n",
      "         0.0115,  0.0137,  0.0157,  0.0029, -0.0136,  0.0278, -0.0285,  0.0264],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 1.5503e-02,  1.9968e-02, -2.7253e-02],\n",
      "          [ 3.0581e-02,  2.2419e-02,  1.2298e-04],\n",
      "          [-3.9147e-02,  4.0604e-02,  1.1386e-02]],\n",
      "\n",
      "         [[-5.1294e-03,  1.2077e-02, -1.0255e-04],\n",
      "          [ 3.6516e-03, -7.0997e-03,  2.2019e-02],\n",
      "          [ 2.0744e-02,  2.1484e-02, -3.2105e-02]],\n",
      "\n",
      "         [[-6.2871e-03, -2.1506e-02, -2.1339e-02],\n",
      "          [-1.2689e-02,  3.9148e-02, -1.0839e-02],\n",
      "          [ 1.2312e-02, -1.2320e-02,  3.4097e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.6678e-03,  3.0127e-02,  3.8548e-02],\n",
      "          [ 2.2055e-02,  1.4611e-02,  2.9584e-02],\n",
      "          [-1.5865e-02, -3.6395e-02, -1.3198e-02]],\n",
      "\n",
      "         [[-3.8354e-02,  2.6623e-02,  1.5434e-03],\n",
      "          [ 1.6230e-02,  2.0480e-03,  2.1584e-02],\n",
      "          [-1.7041e-02, -1.9637e-02,  1.2540e-02]],\n",
      "\n",
      "         [[ 1.8546e-02,  2.1286e-04, -3.1897e-02],\n",
      "          [ 3.3818e-03, -4.0839e-02, -3.2797e-02],\n",
      "          [ 1.4221e-02,  4.2603e-03, -2.6216e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 4.1119e-02,  1.1677e-03, -1.5193e-02],\n",
      "          [-8.0291e-03, -3.8793e-02,  1.2461e-03],\n",
      "          [ 2.6493e-03,  4.0771e-02, -3.1868e-02]],\n",
      "\n",
      "         [[ 1.1418e-02,  8.6386e-03, -3.0998e-02],\n",
      "          [-2.2942e-02,  1.0925e-02, -1.9619e-02],\n",
      "          [ 2.3454e-02, -1.0774e-02,  3.5521e-04]],\n",
      "\n",
      "         [[ 1.5342e-02,  1.6271e-02, -2.9892e-02],\n",
      "          [ 3.4132e-02, -2.8142e-02,  2.0449e-03],\n",
      "          [ 3.1466e-02, -1.0389e-02,  4.1605e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.8953e-03, -7.2773e-03,  2.3780e-02],\n",
      "          [ 1.0659e-02, -3.3099e-02,  1.4636e-02],\n",
      "          [-3.3131e-02,  3.9416e-02, -1.5211e-02]],\n",
      "\n",
      "         [[ 2.5711e-02, -1.8501e-02, -1.7885e-02],\n",
      "          [ 2.1237e-02, -1.5497e-02, -3.4987e-02],\n",
      "          [ 2.2721e-02,  1.4782e-02,  2.2568e-02]],\n",
      "\n",
      "         [[-1.2630e-02, -3.1163e-02,  1.7388e-02],\n",
      "          [-3.9799e-02, -1.8829e-02,  1.0429e-02],\n",
      "          [ 2.6231e-02,  2.2604e-02, -1.3256e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 4.1407e-02,  2.0424e-03,  1.8511e-03],\n",
      "          [ 2.7902e-02,  2.4117e-02,  7.2421e-03],\n",
      "          [ 1.5277e-02, -2.0004e-02, -3.5547e-02]],\n",
      "\n",
      "         [[-3.7633e-02,  1.7474e-02,  2.3247e-03],\n",
      "          [-1.7302e-02,  3.6599e-02, -3.7783e-02],\n",
      "          [-6.9675e-03, -1.8458e-02,  6.7202e-03]],\n",
      "\n",
      "         [[-3.2359e-02, -1.6958e-02, -3.8314e-02],\n",
      "          [-3.3349e-02,  8.0311e-03,  3.9076e-02],\n",
      "          [-3.2955e-02, -1.9290e-03,  4.1411e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.9718e-02,  2.7588e-02, -2.3329e-02],\n",
      "          [-2.6346e-02,  2.6379e-02,  1.3367e-02],\n",
      "          [-1.4734e-02,  3.8245e-02, -1.7489e-02]],\n",
      "\n",
      "         [[ 2.3358e-02,  1.5712e-02, -4.0401e-02],\n",
      "          [-1.3488e-02, -1.3962e-02,  2.5472e-02],\n",
      "          [-1.5918e-02, -5.4497e-03, -3.5526e-02]],\n",
      "\n",
      "         [[-5.8538e-03,  3.6690e-02, -2.1269e-02],\n",
      "          [-1.2670e-02,  9.8975e-03,  4.0580e-02],\n",
      "          [ 3.8987e-02, -1.6841e-03,  2.6675e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 3.5170e-02,  9.5554e-04,  9.9250e-03],\n",
      "          [ 3.6611e-02,  3.5507e-03, -2.7061e-02],\n",
      "          [-3.3660e-03, -5.7624e-03,  2.2345e-02]],\n",
      "\n",
      "         [[ 7.1099e-03, -1.6003e-02, -2.2576e-02],\n",
      "          [-2.2925e-02, -2.8207e-02,  2.2194e-02],\n",
      "          [-8.7729e-03,  1.9135e-02, -2.5347e-02]],\n",
      "\n",
      "         [[-9.6801e-03, -3.9492e-03,  3.2425e-02],\n",
      "          [ 1.6054e-02, -3.2202e-02,  5.3716e-03],\n",
      "          [ 1.9263e-02,  1.4142e-02,  3.8006e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.7639e-02, -1.0430e-02, -3.1054e-02],\n",
      "          [-5.4569e-03,  3.3728e-02,  2.2192e-02],\n",
      "          [ 3.2513e-02,  1.1739e-02, -3.3425e-02]],\n",
      "\n",
      "         [[ 6.3811e-03,  2.1846e-02, -1.9493e-03],\n",
      "          [-2.0225e-02,  6.1943e-03,  1.1159e-04],\n",
      "          [ 2.3293e-02, -2.7806e-02, -3.7317e-02]],\n",
      "\n",
      "         [[ 3.0939e-02,  1.9687e-02, -4.8800e-04],\n",
      "          [-1.6397e-02,  7.4207e-03, -8.5941e-03],\n",
      "          [ 1.0516e-02,  1.3428e-02, -1.6705e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.1569e-03, -1.2521e-02, -2.8285e-02],\n",
      "          [-7.7657e-03, -1.4942e-02,  3.1742e-02],\n",
      "          [ 3.5287e-02, -3.2503e-02,  2.3103e-02]],\n",
      "\n",
      "         [[ 2.8615e-02,  1.7383e-02,  2.4299e-02],\n",
      "          [ 8.3636e-05, -2.2208e-02, -1.5149e-02],\n",
      "          [ 1.1650e-03,  1.3697e-02,  2.1180e-02]],\n",
      "\n",
      "         [[-2.8839e-03, -3.9351e-02, -2.3789e-02],\n",
      "          [ 1.8722e-02, -3.1016e-02,  8.5564e-03],\n",
      "          [-7.1026e-03,  2.5601e-03,  5.4079e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.6139e-03, -3.9310e-02,  3.2894e-02],\n",
      "          [-4.3031e-03, -5.3524e-03, -5.2314e-05],\n",
      "          [ 7.2987e-03, -1.3566e-02,  5.6067e-03]],\n",
      "\n",
      "         [[ 3.2711e-02, -1.7368e-02,  3.3785e-02],\n",
      "          [-6.7773e-03,  5.4408e-03, -1.2343e-02],\n",
      "          [ 2.2494e-02, -7.9275e-03, -1.9847e-02]],\n",
      "\n",
      "         [[ 2.3142e-02,  2.6381e-02,  1.0768e-02],\n",
      "          [ 6.7266e-03, -2.8163e-02,  3.7425e-02],\n",
      "          [-2.9994e-02,  4.1514e-02, -2.4458e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.0121e-02, -5.9317e-03,  2.6458e-02],\n",
      "          [ 3.6138e-02,  3.5693e-02,  2.3574e-02],\n",
      "          [ 7.5881e-03, -1.7473e-02, -3.4447e-02]],\n",
      "\n",
      "         [[-3.8731e-02, -1.3779e-02,  1.3817e-02],\n",
      "          [-5.8666e-03,  2.7650e-02,  2.8540e-03],\n",
      "          [-8.0458e-03, -3.3131e-02,  1.8501e-02]],\n",
      "\n",
      "         [[ 1.7238e-02, -2.6012e-02, -1.0382e-02],\n",
      "          [ 3.0943e-02,  1.6954e-03,  4.4101e-03],\n",
      "          [-6.3315e-03, -2.2754e-02,  1.3686e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.6220e-02,  4.3353e-03,  4.0976e-02],\n",
      "          [ 3.4449e-02,  2.5515e-02, -2.1169e-03],\n",
      "          [-1.2419e-02,  3.9369e-02, -1.7589e-04]],\n",
      "\n",
      "         [[ 3.1504e-02, -4.7394e-03,  6.2346e-03],\n",
      "          [ 8.9612e-03,  5.4199e-03, -1.0591e-02],\n",
      "          [-1.1077e-02,  2.4058e-02, -3.1407e-02]],\n",
      "\n",
      "         [[ 2.5580e-02,  8.1209e-03, -2.8665e-02],\n",
      "          [-3.4446e-02, -1.0626e-02, -3.6591e-03],\n",
      "          [-3.4568e-03,  3.2660e-02,  5.8678e-03]]]], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([ 0.0064, -0.0100,  0.0106, -0.0113, -0.0005,  0.0031,  0.0038, -0.0051,\n",
      "         0.0102,  0.0250,  0.0296,  0.0113,  0.0377,  0.0085,  0.0271, -0.0402,\n",
      "        -0.0130, -0.0093,  0.0361,  0.0001, -0.0038,  0.0216, -0.0100,  0.0195,\n",
      "        -0.0316, -0.0171,  0.0273,  0.0306,  0.0289, -0.0099,  0.0110,  0.0408,\n",
      "         0.0377, -0.0254,  0.0320,  0.0410,  0.0363, -0.0054,  0.0170,  0.0036,\n",
      "         0.0319,  0.0316, -0.0351, -0.0098, -0.0386,  0.0310,  0.0322,  0.0220,\n",
      "        -0.0138, -0.0182,  0.0374, -0.0168, -0.0145, -0.0156, -0.0144, -0.0159,\n",
      "         0.0131, -0.0185,  0.0370,  0.0161,  0.0086, -0.0077,  0.0317,  0.0254],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n",
      "        1., 1., 1., 1., 1., 1., 1., 1., 1., 1.], device='cuda:0',\n",
      "       requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
      "        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
      "       device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([[[[ 0.0403]],\n",
      "\n",
      "         [[-0.0871]],\n",
      "\n",
      "         [[ 0.0758]],\n",
      "\n",
      "         [[ 0.0231]],\n",
      "\n",
      "         [[-0.0782]],\n",
      "\n",
      "         [[ 0.1184]],\n",
      "\n",
      "         [[ 0.0943]],\n",
      "\n",
      "         [[ 0.0491]],\n",
      "\n",
      "         [[ 0.0484]],\n",
      "\n",
      "         [[-0.0095]],\n",
      "\n",
      "         [[ 0.0423]],\n",
      "\n",
      "         [[-0.0964]],\n",
      "\n",
      "         [[ 0.0835]],\n",
      "\n",
      "         [[ 0.0530]],\n",
      "\n",
      "         [[-0.0672]],\n",
      "\n",
      "         [[-0.0755]],\n",
      "\n",
      "         [[-0.1162]],\n",
      "\n",
      "         [[ 0.0480]],\n",
      "\n",
      "         [[ 0.0977]],\n",
      "\n",
      "         [[-0.0037]],\n",
      "\n",
      "         [[-0.0278]],\n",
      "\n",
      "         [[ 0.0834]],\n",
      "\n",
      "         [[-0.1088]],\n",
      "\n",
      "         [[ 0.0569]],\n",
      "\n",
      "         [[ 0.1024]],\n",
      "\n",
      "         [[ 0.1187]],\n",
      "\n",
      "         [[ 0.0427]],\n",
      "\n",
      "         [[ 0.0085]],\n",
      "\n",
      "         [[ 0.0981]],\n",
      "\n",
      "         [[ 0.0538]],\n",
      "\n",
      "         [[-0.0115]],\n",
      "\n",
      "         [[-0.0066]],\n",
      "\n",
      "         [[ 0.0978]],\n",
      "\n",
      "         [[ 0.0385]],\n",
      "\n",
      "         [[ 0.0172]],\n",
      "\n",
      "         [[ 0.0190]],\n",
      "\n",
      "         [[-0.0102]],\n",
      "\n",
      "         [[ 0.0018]],\n",
      "\n",
      "         [[-0.1107]],\n",
      "\n",
      "         [[-0.0289]],\n",
      "\n",
      "         [[-0.0178]],\n",
      "\n",
      "         [[ 0.0519]],\n",
      "\n",
      "         [[-0.0609]],\n",
      "\n",
      "         [[-0.1202]],\n",
      "\n",
      "         [[ 0.0178]],\n",
      "\n",
      "         [[-0.0729]],\n",
      "\n",
      "         [[-0.1149]],\n",
      "\n",
      "         [[ 0.0334]],\n",
      "\n",
      "         [[ 0.0285]],\n",
      "\n",
      "         [[-0.0563]],\n",
      "\n",
      "         [[-0.0109]],\n",
      "\n",
      "         [[ 0.1178]],\n",
      "\n",
      "         [[-0.0726]],\n",
      "\n",
      "         [[-0.0475]],\n",
      "\n",
      "         [[-0.1228]],\n",
      "\n",
      "         [[ 0.1034]],\n",
      "\n",
      "         [[-0.0696]],\n",
      "\n",
      "         [[-0.0362]],\n",
      "\n",
      "         [[-0.0964]],\n",
      "\n",
      "         [[-0.0019]],\n",
      "\n",
      "         [[ 0.0333]],\n",
      "\n",
      "         [[-0.0730]],\n",
      "\n",
      "         [[-0.0396]],\n",
      "\n",
      "         [[-0.0197]]]], device='cuda:0', requires_grad=True)\n",
      "Parameter containing:\n",
      "tensor([-0.0730], device='cuda:0', requires_grad=True)\n"
     ]
    }
   ],
   "source": [
    "for name, param in depth_model.named_parameters():\n",
    "    print(param)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "## Training and Evaluation [18 points]\n",
    "Tune the hyperparameters to get the maximum possible score on the PASCAL VOC challenge. \n",
    "And answer the following questions:\n",
    "1. What is the relationship between the _size_ of the class and the IOU How would you quantify this relationship?\n",
    "2. What is the relationship between the number of instances and the IOU? how many times a class exists in an image vs the IOU?\n",
    "3. The segmentation dataset is small. Initialize the weights of the segmentation net with the weights of the trained depth network.\n",
    "4. Which weights can you not transfer?\n",
    "5. Fine tune (ie train with a lower learning rate) the model in 3 for the same number of epochs as the model with a random initialization (or ImageNet initialized weights)\n",
    "6. What trend do you observe?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "jupyter": {
     "outputs_hidden": false
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [],
   "source": [
    "from utils import Metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "jupyter": {
     "outputs_hidden": false
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "Training seg_model_gpu[0, 1, 2, 3]_n30_bs8_lr0.001\n",
      "\n",
      "Epoch: [0][0/183]\tTime 14.952 (14.952)\tETA 0:45:36\tTraining Loss 3.0217 (3.0217)\n",
      "\n",
      "Epoch: [0][18/183]\tTime 0.339 (24.099)\tETA 0:00:55\tTraining Loss 3.1251 (3.0178)\n",
      "\n",
      "Epoch: [0][36/183]\tTime 0.275 (36.562)\tETA 0:00:40\tTraining Loss 2.9736 (2.9998)\n",
      "\n",
      "Epoch: [0][54/183]\tTime 0.311 (51.389)\tETA 0:00:40\tTraining Loss 2.9334 (2.9926)\n",
      "\n",
      "Epoch: [0][72/183]\tTime 0.269 (64.395)\tETA 0:00:29\tTraining Loss 2.9798 (2.9836)\n",
      "\n",
      "Epoch: [0][90/183]\tTime 0.252 (77.827)\tETA 0:00:23\tTraining Loss 2.9097 (2.9724)\n",
      "\n",
      "Epoch: [0][108/183]\tTime 0.288 (90.276)\tETA 0:00:21\tTraining Loss 2.9384 (2.9709)\n",
      "\n",
      "Epoch: [0][126/183]\tTime 0.311 (102.313)\tETA 0:00:17\tTraining Loss 2.9726 (2.9611)\n",
      "\n",
      "Epoch: [0][144/183]\tTime 0.303 (116.046)\tETA 0:00:11\tTraining Loss 2.9943 (2.9602)\n",
      "\n",
      "Epoch: [0][162/183]\tTime 0.290 (128.488)\tETA 0:00:06\tTraining Loss 2.9716 (2.9555)\n",
      "\n",
      "Epoch: [0][180/183]\tTime 0.217 (140.556)\tETA 0:00:00\tTraining Loss 2.8395 (2.9522)\n",
      "______________________________________________________________________________________________________________________________________________________________________________________\n",
      "Validation stats                    IoU        F1      Prec    recall       Acc\n",
      "Background   0.000000  0.000000  0.000000  0.000000  0.251600\n",
      "Aeroplane    0.000000  0.000000  0.000000  0.000000  0.993400\n",
      "Bicycle      0.000100  0.000100  0.002100  0.000100  0.996200\n",
      "Bird         0.002600  0.005200  0.017000  0.003100  0.988900\n",
      "Boat         0.000000  0.000000  0.000000  0.000000  0.994500\n",
      "Bottle       0.000000  0.000000  0.437500  0.000000  0.991200\n",
      "Bus          0.000800  0.001500  0.015100  0.000800  0.981700\n",
      "Car          0.011000  0.021800  0.016400  0.032500  0.950100\n",
      "Cat          0.016100  0.031600  0.017000  0.230000  0.735300\n",
      "Chair        0.000000  0.000100  0.008000  0.000000  0.989700\n",
      "Cow          0.000000  0.000000  0.000000  0.000000  0.990900\n",
      "Diningtable  0.000000  0.000000  0.000000  0.000000  0.986500\n",
      "Dog          0.005500  0.011000  0.032100  0.006600  0.975900\n",
      "Horse        0.000000  0.000000  0.000000  0.000000  0.991400\n",
      "Motorbike    0.000000  0.000000  0.000000  0.000000  0.985100\n",
      "Person       0.058400  0.110300  0.059100  0.821400  0.435200\n",
      "Pottedplant  0.000000  0.000000  0.000000  0.000000  0.995900\n",
      "Sheep        0.011000  0.021800  0.012600  0.078600  0.944000\n",
      "Sofa         0.008500  0.016800  0.010400  0.043900  0.923300\n",
      "Train        0.000000  0.000000  0.000000  0.000000  0.987300\n",
      "Tvmonitor    0.000000  0.000000  0.000000  0.000000  0.994500\n",
      "total        0.005429  0.010486  0.029871  0.057952  0.908695\n",
      "total(-bg)   0.005700  0.011010  0.031365  0.060850  0.941550\n",
      "\n",
      "Epoch: [1][0/183]\tTime 3.994 (3.994)\tETA 0:12:10\tTraining Loss 2.8545 (2.8545)\n",
      "\n",
      "Epoch: [1][18/183]\tTime 0.311 (16.949)\tETA 0:00:51\tTraining Loss 2.9092 (2.8654)\n",
      "\n",
      "Epoch: [1][36/183]\tTime 1.491 (29.639)\tETA 0:03:39\tTraining Loss 3.0447 (2.8791)\n",
      "\n",
      "Epoch: [1][54/183]\tTime 0.313 (41.215)\tETA 0:00:40\tTraining Loss 2.8814 (2.8802)\n",
      "\n",
      "Epoch: [1][72/183]\tTime 1.204 (54.290)\tETA 0:02:13\tTraining Loss 2.9930 (2.8904)\n",
      "\n",
      "Epoch: [1][90/183]\tTime 0.309 (66.076)\tETA 0:00:28\tTraining Loss 2.8666 (2.8951)\n",
      "\n",
      "Epoch: [1][108/183]\tTime 1.673 (79.438)\tETA 0:02:05\tTraining Loss 2.9414 (2.8974)\n",
      "\n",
      "Epoch: [1][126/183]\tTime 0.323 (90.936)\tETA 0:00:18\tTraining Loss 2.8152 (2.8942)\n",
      "\n",
      "Epoch: [1][144/183]\tTime 1.548 (104.157)\tETA 0:01:00\tTraining Loss 2.8284 (2.8912)\n",
      "\n",
      "Epoch: [1][162/183]\tTime 0.269 (115.560)\tETA 0:00:05\tTraining Loss 2.9746 (2.8939)\n",
      "\n",
      "Epoch: [1][180/183]\tTime 0.548 (127.398)\tETA 0:00:01\tTraining Loss 2.8917 (2.8958)\n",
      "______________________________________________________________________________________________________________________________________________________________________________________\n",
      "Validation stats                    IoU        F1      Prec    recall       Acc\n",
      "Background   0.000000  0.000000  0.000000  0.000000  0.251600\n",
      "Aeroplane    0.000000  0.000000  0.000000  0.000000  0.993400\n",
      "Bicycle      0.000000  0.000000  0.000000  0.000000  0.996300\n",
      "Bird         0.000100  0.000200  0.004300  0.000100  0.990300\n",
      "Boat         0.000000  0.000000  0.000000  0.000000  0.994500\n",
      "Bottle       0.000000  0.000000  0.000000  0.000000  0.991200\n",
      "Bus          0.010100  0.019900  0.016500  0.025100  0.957000\n",
      "Car          0.004600  0.009000  0.011600  0.007500  0.972000\n",
      "Cat          0.015700  0.030900  0.016900  0.174100  0.794900\n",
      "Chair        0.000000  0.000000  0.001500  0.000000  0.989700\n",
      "Cow          0.000000  0.000000  0.000000  0.000000  0.990900\n",
      "Diningtable  0.000800  0.001600  0.016800  0.000900  0.985800\n",
      "Dog          0.001300  0.002600  0.008800  0.001500  0.976400\n",
      "Horse        0.000000  0.000000  0.000000  0.000000  0.991400\n",
      "Motorbike    0.000000  0.000000  0.000000  0.000000  0.985100\n",
      "Person       0.050500  0.096100  0.051000  0.842500  0.324500\n",
      "Pottedplant  0.000000  0.000000  0.000000  0.000000  0.995900\n",
      "Sheep        0.004000  0.007800  0.008200  0.007600  0.984800\n",
      "Sofa         0.011900  0.023600  0.015100  0.053800  0.933700\n",
      "Train        0.000000  0.000000  0.000000  0.000000  0.987300\n",
      "Tvmonitor    0.000000  0.000000  0.000000  0.000000  0.994500\n",
      "total        0.004714  0.009129  0.007176  0.053005  0.908629\n",
      "total(-bg)   0.004950  0.009585  0.007535  0.055655  0.941480\n",
      "\n",
      "Epoch: [2][0/183]\tTime 2.499 (2.499)\tETA 0:07:37\tTraining Loss 2.8265 (2.8265)\n",
      "\n",
      "Epoch: [2][18/183]\tTime 0.313 (15.197)\tETA 0:00:51\tTraining Loss 2.8087 (2.9051)\n",
      "\n",
      "Epoch: [2][36/183]\tTime 1.944 (28.314)\tETA 0:04:45\tTraining Loss 2.9420 (2.8813)\n",
      "\n",
      "Epoch: [2][54/183]\tTime 0.292 (40.448)\tETA 0:00:37\tTraining Loss 3.0146 (2.8729)\n",
      "\n",
      "Epoch: [2][72/183]\tTime 4.464 (56.906)\tETA 0:08:15\tTraining Loss 2.7076 (2.8845)\n",
      "\n",
      "Epoch: [2][90/183]\tTime 0.251 (68.009)\tETA 0:00:23\tTraining Loss 3.0481 (2.8785)\n",
      "\n",
      "Epoch: [2][108/183]\tTime 2.065 (81.563)\tETA 0:02:34\tTraining Loss 3.0230 (2.8775)\n",
      "\n",
      "Epoch: [2][126/183]\tTime 0.287 (92.472)\tETA 0:00:16\tTraining Loss 2.9566 (2.8802)\n",
      "\n",
      "Epoch: [2][144/183]\tTime 0.270 (103.509)\tETA 0:00:10\tTraining Loss 2.9335 (2.8844)\n",
      "\n",
      "Epoch: [2][162/183]\tTime 0.274 (117.633)\tETA 0:00:05\tTraining Loss 2.8540 (2.8867)\n",
      "\n",
      "Epoch: [2][180/183]\tTime 0.242 (128.507)\tETA 0:00:00\tTraining Loss 2.7378 (2.8858)\n",
      "______________________________________________________________________________________________________________________________________________________________________________________\n",
      "Validation stats                    IoU        F1      Prec   recall       Acc\n",
      "Background   0.000000  0.000000  0.000000  0.00000  0.251600\n",
      "Aeroplane    0.000000  0.000000  0.000000  0.00000  0.993400\n",
      "Bicycle      0.000000  0.000000  0.000000  0.00000  0.996300\n",
      "Bird         0.004800  0.009500  0.011100  0.00840  0.983500\n",
      "Boat         0.000000  0.000000  0.000000  0.00000  0.994500\n",
      "Bottle       0.000000  0.000000  0.000000  0.00000  0.991200\n",
      "Bus          0.022200  0.043300  0.027300  0.10510  0.919400\n",
      "Car          0.010600  0.021000  0.014900  0.03590  0.942700\n",
      "Cat          0.025500  0.049800  0.026600  0.38530  0.723800\n",
      "Chair        0.000000  0.000000  0.000000  0.00000  0.989700\n",
      "Cow          0.000000  0.000000  0.000000  0.00000  0.990900\n",
      "Diningtable  0.000000  0.000000  0.002300  0.00000  0.986400\n",
      "Dog          0.037700  0.072600  0.057300  0.09910  0.949000\n",
      "Horse        0.000000  0.000000  0.000000  0.00000  0.991400\n",
      "Motorbike    0.000000  0.000000  0.000000  0.00000  0.985100\n",
      "Person       0.062100  0.116900  0.064500  0.62310  0.598700\n",
      "Pottedplant  0.000000  0.000000  0.000000  0.00000  0.995900\n",
      "Sheep        0.005500  0.010900  0.012700  0.00960  0.986200\n",
      "Sofa         0.002700  0.005300  0.002900  0.03130  0.826000\n",
      "Train        0.000000  0.000000  0.000000  0.00000  0.987300\n",
      "Tvmonitor    0.000000  0.000000  0.000000  0.00000  0.994500\n",
      "total        0.008148  0.015681  0.010457  0.06180  0.908452\n",
      "total(-bg)   0.008555  0.016465  0.010980  0.06489  0.941295\n",
      "\n",
      "Epoch: [3][0/183]\tTime 2.435 (2.435)\tETA 0:07:25\tTraining Loss 2.9558 (2.9558)\n",
      "\n",
      "Epoch: [3][18/183]\tTime 0.273 (14.365)\tETA 0:00:45\tTraining Loss 2.8594 (2.8905)\n",
      "\n",
      "Epoch: [3][36/183]\tTime 0.672 (27.522)\tETA 0:01:38\tTraining Loss 2.9336 (2.8617)\n",
      "\n",
      "Epoch: [3][54/183]\tTime 0.231 (39.344)\tETA 0:00:29\tTraining Loss 3.0892 (2.8589)\n",
      "\n",
      "Epoch: [3][72/183]\tTime 1.314 (52.704)\tETA 0:02:25\tTraining Loss 3.0339 (2.8742)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch: [3][90/183]\tTime 0.269 (64.527)\tETA 0:00:25\tTraining Loss 2.7818 (2.8870)\n",
      "\n",
      "Epoch: [3][108/183]\tTime 1.859 (77.971)\tETA 0:02:19\tTraining Loss 2.8058 (2.8887)\n",
      "\n",
      "Epoch: [3][126/183]\tTime 0.306 (90.060)\tETA 0:00:17\tTraining Loss 2.8189 (2.8858)\n",
      "\n",
      "Epoch: [3][144/183]\tTime 0.300 (101.889)\tETA 0:00:11\tTraining Loss 2.7783 (2.8864)\n",
      "\n",
      "Epoch: [3][162/183]\tTime 0.239 (114.283)\tETA 0:00:05\tTraining Loss 3.0248 (2.8846)\n",
      "\n",
      "Epoch: [3][180/183]\tTime 0.239 (125.510)\tETA 0:00:00\tTraining Loss 2.9724 (2.8799)\n",
      "____________________________________________________________________________________________"
     ]
    }
   ],
   "source": [
    "run_id = 'seg_model_gpu{}_n{}_bs{}_lr{}'.format(gpu_id, epochs, batch_size, learning_rate); print('\\n\\nTraining', run_id)\n",
    "save_path = run_id + '.pkl'\n",
    "\n",
    "optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate)\n",
    "#optimizer = torch.optim.Adam(filter(lambda p: p.requires_grad, model.parameters()), lr=learning_rate)\n",
    "\n",
    "metrics = Metrics(train_loader.dataset.num_classes, train_loader.dataset.class_names)\n",
    "\n",
    "# Used to keep track of statistics\n",
    "class AverageMeter(object):\n",
    "    def __init__(self):\n",
    "        self.val = 0; self.avg = 0; self.sum = 0; self.count = 0\n",
    "    def update(self, val, n=1):\n",
    "        self.val = val\n",
    "        self.sum += val * n\n",
    "        self.count += n\n",
    "        self.avg = self.sum / self.count\n",
    "\n",
    "REPORTS_PER_EPOCH = 10\n",
    "ITER_PER_EPOCH = len(train_loader)\n",
    "ITER_PER_REPORT = ITER_PER_EPOCH//REPORTS_PER_EPOCH\n",
    "\n",
    "\n",
    "\n",
    "for epoch in range(epochs):\n",
    "    model.train()\n",
    "\n",
    "    # Progress reporting\n",
    "    batch_time = AverageMeter()\n",
    "    losses = AverageMeter()\n",
    "    N = len(train_loader)\n",
    "    end = time.time()\n",
    "\n",
    "    for i, (sample) in enumerate(train_loader):\n",
    "        \n",
    "       \n",
    "        # Load a batch and send it to GPU\n",
    "        x = sample['image'].float().cuda()\n",
    "        y = sample['label'].float().cuda()\n",
    "        #y = sample['label'].cuda()\n",
    "        # Forward pass: compute predicted y by passing x to the model.\n",
    "        \n",
    "        y_pred = model(x)\n",
    "        # Compute and print loss.\n",
    "        \n",
    "        loss = loss_fn(y_pred, y)\n",
    "\n",
    "        # Record loss\n",
    "        losses.update(loss.data.item(), x.size(0))\n",
    "\n",
    "        # Before the backward pass, use the optimizer object to zero all of the\n",
    "        # gradients for the variables it will update (which are the learnable\n",
    "        # weights of the model).\n",
    "        optimizer.zero_grad()\n",
    "        \n",
    "\n",
    "        # Backward pass: compute gradient of the loss with respect to model parameters\n",
    "        loss.backward()\n",
    "\n",
    "        # Calling the step function on an Optimizer makes an update to its parameters\n",
    "        optimizer.step()\n",
    "\n",
    "        # Measure elapsed time\n",
    "        batch_time.update(time.time() - end)\n",
    "        end = time.time()\n",
    "        eta = str(datetime.timedelta(seconds=int(batch_time.val*(N - i))))\n",
    "\n",
    "        # Log training progress\n",
    "        if i % ITER_PER_REPORT == 0:\n",
    "            print('\\nEpoch: [{0}][{1}/{2}]\\t' 'Time {batch_time.val:.3f} ({batch_time.sum:.3f})\\t' 'ETA {eta}\\t'\n",
    "             'Training Loss {loss.val:.4f} ({loss.avg:.4f})'.format(epoch, i, N, batch_time=batch_time, loss=losses, eta=eta))\n",
    "        elif i % (ITER_PER_REPORT) == 0:\n",
    "            print('.', end='')\n",
    "\n",
    "        #break # useful for quick debugging\n",
    "    torch.cuda.empty_cache(); del x, y; gc.collect()\n",
    "\n",
    "    # Validation after each epoch\n",
    "    model.eval()\n",
    "    metrics.reset()\n",
    "    for i, (sample) in enumerate(valid_loader):\n",
    "        x, y = sample['image'].float().cuda(), sample['label'].numpy()\n",
    "        with torch.no_grad():\n",
    "            y_pred = model(x)\n",
    "            y_pred = torch.argmax(y_pred, dim=1) # get the most likely prediction\n",
    "\n",
    "        metrics.add_batch(y, y_pred.detach().cpu().numpy())\n",
    "        print('_', end='')\n",
    "    print('\\nValidation stats ', metrics.get_table())\n",
    "\n",
    "\n",
    "# Save model\n",
    "torch.save(model.state_dict(), save_path)\n",
    "print('\\nTraining done. Model saved ({}).'.format(save_path))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualization  [2 points]\n",
    "Use the `decode_segmap` function to visualize images and their segmentation. The images must be from the validation set.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "sample = iter(valid_loader).next()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DataParallel(\n",
       "  (module): Model(\n",
       "    (down1): Down(\n",
       "      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "      (double_conv): Sequential(\n",
       "        (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (2): ReLU(inplace=True)\n",
       "        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (5): ReLU(inplace=True)\n",
       "      )\n",
       "    )\n",
       "    (down2): Down(\n",
       "      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "      (double_conv): Sequential(\n",
       "        (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (2): ReLU(inplace=True)\n",
       "        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (5): ReLU(inplace=True)\n",
       "      )\n",
       "    )\n",
       "    (down3): Down2(\n",
       "      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "      (double_conv): Sequential(\n",
       "        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (2): ReLU(inplace=True)\n",
       "        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (5): ReLU(inplace=True)\n",
       "        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (8): ReLU(inplace=True)\n",
       "      )\n",
       "    )\n",
       "    (down4): Down2(\n",
       "      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "      (double_conv): Sequential(\n",
       "        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (2): ReLU(inplace=True)\n",
       "        (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (5): ReLU(inplace=True)\n",
       "        (6): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (8): ReLU(inplace=True)\n",
       "      )\n",
       "    )\n",
       "    (down5): Down2(\n",
       "      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "      (double_conv): Sequential(\n",
       "        (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (2): ReLU(inplace=True)\n",
       "        (3): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (4): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (5): ReLU(inplace=True)\n",
       "        (6): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "        (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "        (8): ReLU(inplace=True)\n",
       "      )\n",
       "    )\n",
       "    (up1): Up(\n",
       "      (up): ConvTranspose2d(1024, 512, kernel_size=(2, 2), stride=(2, 2))\n",
       "      (conv): Down2(\n",
       "        (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "        (double_conv): Sequential(\n",
       "          (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (2): ReLU(inplace=True)\n",
       "          (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (5): ReLU(inplace=True)\n",
       "          (6): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (8): ReLU(inplace=True)\n",
       "        )\n",
       "      )\n",
       "    )\n",
       "    (up2): Up(\n",
       "      (up): ConvTranspose2d(512, 256, kernel_size=(2, 2), stride=(2, 2))\n",
       "      (conv): Down2(\n",
       "        (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "        (double_conv): Sequential(\n",
       "          (0): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (2): ReLU(inplace=True)\n",
       "          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (5): ReLU(inplace=True)\n",
       "          (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (8): ReLU(inplace=True)\n",
       "        )\n",
       "      )\n",
       "    )\n",
       "    (up3): Up(\n",
       "      (up): ConvTranspose2d(256, 128, kernel_size=(2, 2), stride=(2, 2))\n",
       "      (conv): Down2(\n",
       "        (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "        (double_conv): Sequential(\n",
       "          (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (2): ReLU(inplace=True)\n",
       "          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (5): ReLU(inplace=True)\n",
       "          (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (8): ReLU(inplace=True)\n",
       "        )\n",
       "      )\n",
       "    )\n",
       "    (up4): Up(\n",
       "      (up): ConvTranspose2d(128, 64, kernel_size=(2, 2), stride=(2, 2))\n",
       "      (conv): Down(\n",
       "        (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
       "        (double_conv): Sequential(\n",
       "          (0): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (2): ReLU(inplace=True)\n",
       "          (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
       "          (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
       "          (5): ReLU(inplace=True)\n",
       "        )\n",
       "      )\n",
       "    )\n",
       "    (conv): Conv2d(64, 21, kernel_size=(1, 1), stride=(1, 1))\n",
       "  )\n",
       ")"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = create_model_gpu()\n",
    "model.load_state_dict(torch.load('seg_model_gpu[0, 1, 2, 3]_n100_bs16_lr0.001.pkl'))\n",
    "model.eval() # set to evaluation mode"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = sample['image'].float().cuda()\n",
    "y_pred, y = model(x), sample['label'].numpy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(256, 256, 3)\n",
      "(256, 256)\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAQYAAAD8CAYAAACVSwr3AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAPFklEQVR4nO3dX4xc5X3G8e9TE7ggXOASLGOs4lSOVJMLgiy3EhWiFw0EVTK5oDIXqaVY3VwYNZGoVEMu8kpVJBo15C6RNgLVrRJcSwnCqqomBEXipgkYRMB/StgEF7a27ERECu0Fqd1fL/a4Hfad2Tk7c86858w8H8maM++eP8+eZR/OnJlzVhGBmdmg3yodwMy6x8VgZhkXg5llXAxmlnExmFnGxWBmmdaKQdJ9kt6QtCLpSFvbMbPmqY3PMUjaAvwU+GNgFXgJeCgizjS+MTNrXFtHDPuAlYj4eUT8BjgG7G9pW2bWsGtaWu8O4J2B56vA74+aWZI/fmnWvl9GxEfqzNhWMWjI2Ad++SUtAUstbd/Mcv9ed8a2imEV2Dnw/Fbg/OAMEbEMLIOPGMy6pq1zDC8BuyXtknQtcAA40dK2zKxhrRwxRMRlSQ8D3wO2AE9FxOk2tmVmzWvl7cpNh/BLCbNZeDki9taZ0Z98NLOMi8HMMi4GM8u4GMws42Iws4yLwcwyLgYzy7gYzCzjYjCzjIvBzDIuBjPLuBjMLONiMLOMi8HMMi4GM8u4GMws42Iws4yLwcwyLgYzy7gYzCzjYjCzjIvBzDIuBjPLuBjMLONiMLOMi8HMMi4GM8u4GMws42Iws4yLwcwyLgYzy7gYzCzjYjCzjIvBzDLXTLOwpHPAe8AV4HJE7JW0FfhH4DbgHPCnEfGr6WKa2Sw1ccTwRxFxR0TsrZ4fAZ6PiN3A89VzM+uRNl5K7AeOVtNHgQda2IaZtWjaYgjg+5JelrRUjW2LiAsA1ePNwxaUtCTppKSTU2Yws4ZNdY4BuCsizku6GXhO0r/VXTAiloFlAEkxZQ4za9BURwwRcb56vAQ8A+wDLkraDlA9Xpo2pJnN1sTFIOl6STdcnQY+CZwCTgAHq9kOAs9OG9LMZmualxLbgGckXV3PtyPiXyS9BByXdAh4G3hw+phmNkuKKP/y3ucYzGbi5YGPFWzIn3w0s4yLwcwyLgYzy7gYzCzjYjCzjIvBzDIuBjPLuBjMLONiMLOMi8HMMi4GM8u4GMws42Iws4yLwcwyLgYzy7gYzCzjYjCzjIvBzDIuBisulQ5gGd/z0Wxx+J6PZja5af8S1VxIhZa1tf2XCmew3EIXQ2pxHU2s26yUuS+G1JHtrn9u1mVzWQypdIAh0ohpsy7yyccCUukAZmPM3RFDKh2gpjRiepGk0gFsJB8xdEDCvyTWLXNzxJBKB2hAGvPcbFZ8xNBhqXQAW1hzUQypdIAWJebz+0ulA9iGel8MqXSAGUkszvdq5fW6GFLpAAUk5uv7TqUD2FBji0HSU5IuSTo1MLZV0nOS3qwebxz42qOSViS9IenetoIvuoR/qaw9Yy+7lnQ38J/A30fEx6uxrwDvRsTjko4AN0bEX0naAzwN7ANuAX4AfCwirozZxqYvu06bXWBBpNIBakgjpq11zV12HREvAO+uG94PHK2mjwIPDIwfi4j3I+ItYIW1kmhUanqFcyTh/WPTm/RzDNsi4gJARFyQdHM1vgP40cB8q9VYY1KTK5tjacS0WR1Nn3zUkLGhLxMkLUk6KelkwxlsnVQ6gPXOpEcMFyVtr44WtgOXqvFVYOfAfLcC54etICKWgWWof44hTRjWfARhmzPpEcMJ4GA1fRB4dmD8gKTrJO0CdgMvThdxTWpiJQZ4X9p4Y48YJD0N3APcJGkV+BLwOHBc0iHgbeBBgIg4Lek4cAa4DBwe945EHWnaFVgmjXk+q+1aN3X+LtFphjms/f29fv1tb88+YD7uEp1KB1hACe9363gxWDkJF8Qi6+z9GFLpAAb43YxF1ckjhlQ6gA2VOr4+a05njxism9KY55tZ1rqrk0cM1h+pdABrhY8YbGppxPSoeaz7fMRgjUq4BOaBjxisFal0AJtKJ48YUukAZguuk8VgZmV1thhS6QBmC6yzxWDzL5UOYCN1uhhS6QDWulQ6gA3ldyWsuESzBTFuXU1uq02p4Po6fz8G6M8P0iaXNjne1vbaWm6W0ugv1b4fQy+KAfrxAzFrUmp+lbWLwS8lzApKpQOM0JsjBujuTjRLpQPU4yMGsyal0gFmrFdHDFellnLYYkilA5Qzfycf10st5LB+SzW+Pm6eOTcfd4neSCodwHonFVq2j3pbDGbWnl4XQ2LxmtxsFnpdDGbWjrkohoSPHKx7H5/us96+K7GR1OTKrBdSy+tta/0zttgfcErMzQ/SRkilA8y5uXgpMUwqHcB6L5UOUNDcFgMs9g/WbBpzXQzgcrDJpNIBCpv7YgCfc7DNSTXHSkkz2MZcnnwcJa17tMWRCi/fN2OLQdJTwJ8AlyLi49VYAv4c+EU122MR8c/V1x4FDgFXgL+IiO+1kNsMmM0v7Cy2UVea0XbqvJT4O+C+IeNfi4g7qn9XS2EPcAC4vVrm65K2NBXWzGZj7BFDRLwg6baa69sPHIuI94G3JK0A+4B/nTih2RBpTrYxTqoxPmqeaUxzjuFhSX8GnAQeiYhfATuAHw3Ms1qNZSQtAUtTbN+sNanj62xyXcNMWgzfAP4aiOrxq8BnAQ2Zd+jHnSNiGViG5j8SPU6iG/836KrUsfXMUiodoCMmKoaIuHh1WtI3gX+qnq4COwdmvRU4P3E627RUOsCARLfyzIs0g21MVAyStkfEherpp4FT1fQJ4NuSngBuAXYDL06dsgWJcv/RTrLdNOFypSX6kzuVDtAhdd6ufBq4B7hJ0irwJeAeSXew9jLhHPA5gIg4Lek4cAa4DByOiCvtRO+WVDpAhyXK/rm1rkilA2xCnXclHhoy/OQG838Z+PI0oWz+JPr1i7HoFuIj0aOk0gEWTCodwGpb6GKAZj4qO+06urSdPkilAyyAhS8G65dUOsCCcDEw338S3WwSC3V15UZSzTErJ5UOsEBcDBtINcdmIa17XD9t1iQXQw+k0gEakma8nE3OxTChVDoA/XmnIrU8vzXPxWCtSi3Na+3yuxLWqlRznjrz2ey4GMws45cSE0rrHkttvw8Sed71z61b5vJvV7YpbXLcrENq/+1Kv5TYhFQ6gNmMuBjMLONiMLOMi8HMMi6GmlLpAGYz5GJoQCodwKxhLoYppdIBzFrgYjCzjD/gZLY4/AEnM5uci8HMMi4GM8u4GMws42Iws4yLwcwyLgYzy7gYzCzjYjCzjIvBzDIuBjPLjC0GSTsl/VDSWUmnJX2+Gt8q6TlJb1aPNw4s86ikFUlvSLq3zW/AzJpX54jhMvBIRPwe8AfAYUl7gCPA8xGxG3i+ek71tQPA7cB9wNclbWkjvJm1Y2wxRMSFiHilmn4POAvsAPYDR6vZjgIPVNP7gWMR8X5EvAWsAPuaDm5m7dnUOQZJtwGfAH4MbIuIC7BWHsDN1Ww7gHcGFlutxsysJ2r/JSpJHwa+A3whIn4taeSsQ8ay+y1IWgKW6m7fzGan1hGDpA+xVgrfiojvVsMXJW2vvr4duFSNrwI7Bxa/FTi/fp0RsRwRe+veOMLMZqfOuxICngTORsQTA186ARyspg8Czw6MH5B0naRdwG7gxeYim1nb6ryUuAv4DPC6pFersceAx4Hjkg4BbwMPAkTEaUnHgTOsvaNxOCKuNJ7czFrjez6aLQ7f89HMJudiMLOMi8HMMi4GM8u4GMws42Iws4yLwcwyLgYzy7gYzCzjYjCzjIvBzDIuBjPLuBjMLONiMLOMi8HMMi4GM8u4GMws42Iws4yLwcwyLgYzy7gYzCzjYjCzjIvBzDIuBjPLuBjMLONiMLOMi8HMMi4GM8u4GMws42Iws4yLwcwyLgYzy7gYzCzjYjCzzNhikLRT0g8lnZV0WtLnq/Ek6T8kvVr9u39gmUclrUh6Q9K9bX4DZta8a2rMcxl4JCJekXQD8LKk56qvfS0i/nZwZkl7gAPA7cAtwA8kfSwirjQZ3MzaM/aIISIuRMQr1fR7wFlgxwaL7AeORcT7EfEWsALsayKsmc3Gps4xSLoN+ATw42roYUmvSXpK0o3V2A7gnYHFVhlSJJKWJJ2UdHLTqc2sVbWLQdKHge8AX4iIXwPfAH4XuAO4AHz16qxDFo9sIGI5IvZGxN5NpzazVtUqBkkfYq0UvhUR3wWIiIsRcSUi/gf4Jv//cmEV2Dmw+K3A+eYim1nb6rwrIeBJ4GxEPDEwvn1gtk8Dp6rpE8ABSddJ2gXsBl5sLrKZta3OuxJ3AZ8BXpf0ajX2GPCQpDtYe5lwDvgcQESclnQcOMPaOxqH/Y6EWb8oInv5P/sQ0i+A/wJ+WTpLDTfRj5zQn6x9yQn9yTos5+9ExEfqLNyJYgCQdLIPJyL7khP6k7UvOaE/WafN6Y9Em1nGxWBmmS4Vw3LpADX1JSf0J2tfckJ/sk6VszPnGMysO7p0xGBmHVG8GCTdV12evSLpSOk860k6J+n16tLyk9XYVknPSXqzerxx3HpayPWUpEuSTg2MjcxV8lL4EVk7d9n+BrcY6NR+ncmtECKi2D9gC/Az4KPAtcBPgD0lMw3JeA64ad3YV4Aj1fQR4G8K5LobuBM4NS4XsKfat9cBu6p9vqVw1gT85ZB5i2UFtgN3VtM3AD+t8nRqv26Qs7F9WvqIYR+wEhE/j4jfAMdYu2y76/YDR6vpo8ADsw4QES8A764bHpWr6KXwI7KOUixrjL7FQKf26wY5R9l0ztLFUOsS7cIC+L6klyUtVWPbIuICrP2QgJuLpfugUbm6up8nvmy/betuMdDZ/drkrRAGlS6GWpdoF3ZXRNwJfAo4LOnu0oEm0MX9PNVl+20acouBkbMOGZtZ1qZvhTCodDF0/hLtiDhfPV4CnmHtEOzi1atLq8dL5RJ+wKhcndvP0dHL9ofdYoAO7te2b4VQuhheAnZL2iXpWtbuFXmicKb/I+n66j6XSLoe+CRrl5efAA5Wsx0Eni2TMDMqV+cuhe/iZfujbjFAx/brTG6FMIuzvWPOsN7P2lnVnwFfLJ1nXbaPsnY29yfA6av5gN8GngferB63Fsj2NGuHi//N2v8RDm2UC/hitY/fAD7Vgaz/ALwOvFb9h7u9dFbgD1k7xH4NeLX6d3/X9usGORvbp/7ko5llSr+UMLMOcjGYWcbFYGYZF4OZZVwMZpZxMZhZxsVgZhkXg5ll/hdpUh6JK0yoegAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "decode_segmap(y[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(256, 256, 3)\n",
      "(256, 256)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "y_pred = torch.argmax(y_pred, dim=1)\n",
    "y_pred = y_pred.cpu().detach().numpy()\n",
    "decode_segmap(y_pred[0])"
   ]
  }
 ],
 "metadata": {
  "accelerator": "GPU",
  "colab": {
   "collapsed_sections": [],
   "machine_shape": "hm",
   "name": "Project_Depth_Estimate_good.ipynb",
   "provenance": [],
   "version": "0.3.2"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
