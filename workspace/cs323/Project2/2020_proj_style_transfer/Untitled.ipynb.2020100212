{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import itertools"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "a = [500,1000,2000]\n",
    "b = [1e3 ,1e6, 1e9, 1e12]\n",
    "c = [0.1,0.01,0.0001]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "res = list(itertools.product(a, b, c))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(500, 1000.0, 0.1),\n",
       " (500, 1000.0, 0.01),\n",
       " (500, 1000.0, 0.0001),\n",
       " (500, 1000000.0, 0.1),\n",
       " (500, 1000000.0, 0.01),\n",
       " (500, 1000000.0, 0.0001),\n",
       " (500, 1000000000.0, 0.1),\n",
       " (500, 1000000000.0, 0.01),\n",
       " (500, 1000000000.0, 0.0001),\n",
       " (500, 1000000000000.0, 0.1),\n",
       " (500, 1000000000000.0, 0.01),\n",
       " (500, 1000000000000.0, 0.0001),\n",
       " (1000, 1000.0, 0.1),\n",
       " (1000, 1000.0, 0.01),\n",
       " (1000, 1000.0, 0.0001),\n",
       " (1000, 1000000.0, 0.1),\n",
       " (1000, 1000000.0, 0.01),\n",
       " (1000, 1000000.0, 0.0001),\n",
       " (1000, 1000000000.0, 0.1),\n",
       " (1000, 1000000000.0, 0.01),\n",
       " (1000, 1000000000.0, 0.0001),\n",
       " (1000, 1000000000000.0, 0.1),\n",
       " (1000, 1000000000000.0, 0.01),\n",
       " (1000, 1000000000000.0, 0.0001),\n",
       " (2000, 1000.0, 0.1),\n",
       " (2000, 1000.0, 0.01),\n",
       " (2000, 1000.0, 0.0001),\n",
       " (2000, 1000000.0, 0.1),\n",
       " (2000, 1000000.0, 0.01),\n",
       " (2000, 1000000.0, 0.0001),\n",
       " (2000, 1000000000.0, 0.1),\n",
       " (2000, 1000000000.0, 0.01),\n",
       " (2000, 1000000000.0, 0.0001),\n",
       " (2000, 1000000000000.0, 0.1),\n",
       " (2000, 1000000000000.0, 0.01),\n",
       " (2000, 1000000000000.0, 0.0001)]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
